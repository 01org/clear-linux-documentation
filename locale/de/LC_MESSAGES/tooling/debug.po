# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-12 12:18-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../tooling/debug.rst:4
msgid "Debug System"
msgstr ""

#: ../../tooling/debug.rst:6
msgid ""
"|CL-ATTR| introduces a novel approach to system software debugging using "
"*clr-debug-info*. On the client side, the |CL| debug system obtains any "
"necessary debug information on-the-fly over a network during a debugging "
"session. On the server side, the system curates and compresses debug "
"information into small pieces for efficient downloading."
msgstr ""

#: ../../tooling/debug.rst:12
msgid ""
"For developers, this avoids the interruption during debugging that "
"usually happens when debug information is missing. This can be especially"
" useful on systems where storage is limited."
msgstr ""

#: ../../tooling/debug.rst:22
msgid "Background"
msgstr ""

#: ../../tooling/debug.rst:24
msgid ""
"Software that is compiled and packaged for general usage in an operating "
"system typically only contains components that are used to execute the "
"program, such as binaries and libraries. Extra developer data, such as "
"the actual source code and symbol information, are separated and excluded"
" for efficiency."
msgstr ""

#: ../../tooling/debug.rst:30
msgid ""
"The debug information helps relate binary code to human readable source "
"code lines and variables. Most of the time, this auxiliary information is"
" not needed; however without it, debugging a program results in limited "
"visibility."
msgstr ""

#: ../../tooling/debug.rst:37
msgid "Usage"
msgstr ""

#: ../../tooling/debug.rst:39
msgid ""
"The clr-debug-info system is integrated into |CL| and seamlessly engages "
"once installed."
msgstr ""

#: ../../tooling/debug.rst:42
msgid "Install the *dev-utils* bundle."
msgstr ""

#: ../../tooling/debug.rst:50
msgid ""
"The *telemetrics* and *performance-tools* bundles also include clr-debug-"
"info."
msgstr ""

#: ../../tooling/debug.rst:54
msgid ""
"Start a debugging session against a program using a debugger, such as "
"GDB. For example, to debug *gnome-control-center* execute the following "
"command:"
msgstr ""

#: ../../tooling/debug.rst:62
msgid ""
"As you step through the program and debug information is needed, the "
"clr_debug_daemon obtains it in the background."
msgstr ""

#: ../../tooling/debug.rst:67
msgid "Implementation"
msgstr ""

#: ../../tooling/debug.rst:69
msgid ""
"The implementation of the |CL| debug system is open source and available "
"on GitHub at: https://github.com/clearlinux/clr-debug-info/"
msgstr ""

#: ../../tooling/debug.rst:76
msgid "Figure 1: The communication flow of the |CL| debug system"
msgstr ""

#: ../../tooling/debug.rst:78
msgid ""
"The |CL| debug system implements a :abbr:`FUSE (filesystem in userspace)`"
" filesystem mounted at :file:`/usr/lib/debug` and :file:`/usr/src/debug`."
" The FUSE filesystem starts automatically. You can verify its status by "
"executing :command:`systemctl status clr_debug_fuse.service`."
msgstr ""

#: ../../tooling/debug.rst:83
msgid ""
"The *clr_debug_daemon* is responsible for fetching the appropriate "
"package debug content from the server and making it available for any "
"debugging programs that need it. It is socket activated whenever a "
"request to the local FUSE filesystem occurs. You can verify its status "
"with :command:`systemctl status clr_debug_daemon.service`."
msgstr ""

#: ../../tooling/debug.rst:90
msgid ""
"|CL| hosts debuginfo content packaged for consumption by |CL| debug "
"clients at https://download.clearlinux.org/debuginfo/"
msgstr ""

