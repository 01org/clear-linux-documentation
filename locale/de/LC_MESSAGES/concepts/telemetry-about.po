# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-12 12:18-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../concepts/telemetry-about.rst:4
msgid "Telemetrics"
msgstr ""

#: ../../concepts/telemetry-about.rst:6
msgid ""
"One of the key features of |CL-ATTR| is telemetry, which is used to "
"monitor system health. Telemetry enables developers to observe and "
"proactively address issues before end users are impacted."
msgstr ""

#: ../../concepts/telemetry-about.rst:10
msgid "*Telemetrics* is a combination word made from:"
msgstr ""

#: ../../concepts/telemetry-about.rst:12
msgid "*Telemetry* which is sensing and reporting data."
msgstr ""

#: ../../concepts/telemetry-about.rst:13
msgid ""
"*Analytics* which is using visualization and statistical inferencing to "
"make sense of the reported data."
msgstr ""

#: ../../concepts/telemetry-about.rst:16
msgid ""
"|CL| telemetry reports system-level debug/crash information using "
"specialized probes. The probes monitor system tasks such as :abbr:`swupd "
"(software updater)`, kernel oops, machine error checks, and BIOS error "
"report table for unhandled hardware failures. Telemetry enables real-time"
" issue reporting to allow system developers to quickly focus on an issue "
"and monitor corrective actions."
msgstr ""

#: ../../concepts/telemetry-about.rst:22
msgid ""
"|CL| telemetry is fully customizable and can be used during software "
"development for debugging purposes. You can use **libtelemetry** in your "
"code to create custom telemetry records. You can also use **telem-record-"
"gen** in script files or call it from another program."
msgstr ""

#: ../../concepts/telemetry-about.rst:29
msgid ""
"The |CL| telemetry client is disabled by default until you decide to "
"enable it.  Telemetry is an **opt-in** solution and can be easily enabled"
" or disabled."
msgstr ""

#: ../../concepts/telemetry-about.rst:32
msgid "Architecture"
msgstr ""

#: ../../concepts/telemetry-about.rst:34
msgid ""
"|CL| telemetry has two fundamental components, which are shown in figure "
"1:"
msgstr ""

#: ../../concepts/telemetry-about.rst:36
msgid ""
"Client:  generates and delivers records to the backend server via the "
"network."
msgstr ""

#: ../../concepts/telemetry-about.rst:37
msgid ""
"Backend: captures records sent from the client and displays the "
"cumulative content through a specialized interface."
msgstr ""

#: ../../concepts/telemetry-about.rst:42
msgid ""
"If you want to capture your own records for analysis, you must set up "
"your own backend server."
msgstr ""

#: ../../concepts/telemetry-about.rst:49
msgid "Figure 1: Clear Linux Telemetry Architecture."
msgstr ""

#: ../../concepts/telemetry-about.rst:51
msgid ""
"The telemetry client provides the front end of a complete telemetrics "
"solution and includes the following components:"
msgstr ""

#: ../../concepts/telemetry-about.rst:54
msgid ""
"**telemprobd**, a daemon that prepares the telemetry records and spools "
"them on disk prior to delivery"
msgstr ""

#: ../../concepts/telemetry-about.rst:55
msgid ""
"**telempostd**, a daemon that sends the records to the telemetry backend "
"server or leaves them on disk until deleting after the record expires."
msgstr ""

#: ../../concepts/telemetry-about.rst:57
msgid "**probes**, that collect specific types of data from the operating system."
msgstr ""

#: ../../concepts/telemetry-about.rst:58
msgid ""
"**libtelemetry**, that telemetrics probes use to create telemetrics "
"records and send them to the telemprobd daemon for further processing."
msgstr ""

#: ../../concepts/telemetry-about.rst:62
msgid ""
"The telemetry backend provides the server-side component of a complete "
"telemetrics solution and consists of:"
msgstr ""

#: ../../concepts/telemetry-about.rst:65
msgid "Nginx web server."
msgstr ""

#: ../../concepts/telemetry-about.rst:66
msgid "Two Flask apps:"
msgstr ""

#: ../../concepts/telemetry-about.rst:68
msgid ""
"Collector, an ingestion web app for records received from telemetrics-"
"client probes."
msgstr ""

#: ../../concepts/telemetry-about.rst:69
msgid ""
"TelemetryUI, a web app that exposes several views to visualize the "
"telemetry data and also provides a REST API to perform queries."
msgstr ""

#: ../../concepts/telemetry-about.rst:72
msgid "PostgreSQL as the underlying database server."
msgstr ""

#: ../../concepts/telemetry-about.rst:74
msgid ""
"The default telemetry backend server reports back to the |CL| development"
" team and is not viewable outside the Intel firewall. If you want to "
"collect your own records, then you must set up your own telemetry backend"
" server."
msgstr ""

#: ../../concepts/telemetry-about.rst:79
msgid "Next steps"
msgstr ""

#: ../../concepts/telemetry-about.rst:81
msgid "To put this concept into practice, refer to :ref:`telem-guide`."
msgstr ""

