# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-22 12:54-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../guides/kernel/kernel-development.rst:4
msgid "Kernel development"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:6
msgid ""
"This guide shows how to obtain and compile a Linux\\* kernel source using"
" |CL-ATTR| development tooling."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:15
msgid "Overview"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:17
msgid ""
"The :ref:`compatible-kernels` available in |CL| aim to be performant and "
"practical. In some cases, it may be necessary to modify the kernel to "
"suit your specific needs or test new kernel code as a developer."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:21
msgid ""
"`Source RPMs (SRPMS)`_ are also available for all |CL| kernels, and can "
"be used for development instead."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:25
msgid "Request changes be included with the |CL| kernel"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:27
msgid ""
"If the kernel modification you need is already open source and likely to "
"be useful to others, consider submitting a request to include it in the "
"|CL| kernels.If your change request is accepted, you do not need to "
"maintain your own modified kernel."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:32
msgid ""
"Make enhancement requests to the |CL| `Distribution Project`_ on "
"GitHub\\*."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:35
msgid "Set up kernel development environment"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:37
msgid ""
"In some cases, it may be necessary to modify the kernel to suit your "
"specific needs or to test new kernel code."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:40
msgid "You can build and install a custom kernel; however you must:"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:42
msgid "Disable Secure Boot"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:43
msgid "Maintain any updates to the kernel going forward"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:45
msgid ""
"To create a custom kernel, start with the |CL| development environment. "
"Then make changes to the kernel, build it, and install it."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:50
msgid "Install the |CL| development tooling framework"
msgstr ""

#: ../../tooling/autospec.rst:3
msgid ""
"Setup of the workspace and tooling used for building source in |CL| is "
"mostly automated for you with a setup script. It uses tools from the "
":command:`os-clr-on-clr` bundle."
msgstr ""

#: ../../tooling/autospec.rst:7
msgid ""
"The setup script creates a workspace in the :file:`clearlinux` folder, "
"with the subfolders :file:`Makefile`, :file:`packages`, and "
":file:`projects`. The :file:`projects` folder contains the main tools "
"used for making packages in |CL| :file:`autospec` and :file:`common`."
msgstr ""

#: ../../tooling/autospec.rst:12
msgid "Follow these steps to setup the workspace and tooling for building source:"
msgstr ""

#: ../../tooling/autospec.rst:14
msgid "Install the :command:`os-clr-on-clr` bundle:"
msgstr ""

#: ../../tooling/autospec.rst:20
msgid "Download the :file:`user-setup.sh` script:"
msgstr ""

#: ../../tooling/autospec.rst:26
msgid "Make :file:`user-setup.sh` executable:"
msgstr ""

#: ../../tooling/autospec.rst:32
msgid "Run the script as an unprivileged user:"
msgstr ""

#: ../../tooling/autospec.rst:38
msgid ""
"After the script completes, log out and log in again to complete the "
"setup process."
msgstr ""

#: ../../tooling/autospec.rst:41
msgid "Set your Git user email and username for the repos on your system:"
msgstr ""

#: ../../tooling/autospec.rst:48
msgid "This global setting is used by |CL| tools that make use of Git."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:57
msgid "Clone the kernel package"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:59
msgid ""
"Clone the existing kernel package repository from |CL| as a starting "
"point."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:61
msgid ""
"Clone the Linux kernel package from |CL|. Using the :command:`make "
"clone_<PACKAGENAME>` command in the :file:`clearlinux/` directory clones "
"the package from the `clearlinux-pkgs`_ repo on GitHub."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:71
msgid "Navigate into the cloned package directory."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:78
msgid ""
"The \"linux\" package is the kernel that comes with |CL| in the :command"
":`kernel-native` bundle. Alternatively, you can use a different kernel "
"variant as the base for modification. For a list of kernel package names "
"which you can clone instead, see the `clearlinux-pkgs`_ repo on GitHub."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:85
msgid ""
"The latest version of the |CL| kernel package is pulled as a starting "
"point. An older version can pulled by switching to different git tag by "
"using :command:`git checkout tag/<TAG_NAME>`."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:90
msgid "Change the kernel version"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:92
msgid ""
"|CL| tends to use the latest kernel available from `kernel.org`_, the "
"Linux upstream. The kernel version that will be built can be changed in "
"the RPM SPEC file. While most packages in Clear Linux are typically "
"packaged using :ref:`autospec-about`, the kernel is not. This means "
"control files provided by autospec are not available and changes must be "
"made manually."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:98
#: ../../guides/kernel/kernel-development.rst:294
msgid "Open the Linux kernel package RPM SPEC file in an editor."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:104
msgid ""
"Modify the Version, Release, and Source0 URL entries at the top of the "
"file to change the version of Linux kernel that will be compiled."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:107
msgid ""
"A list of current and available kernel release can be found on "
"`kernel.org`_."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:126
msgid ""
"Consider changing the Name from *linux* in the RPM spec file to easily "
"identify a modified kernel."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:129
msgid ""
"Consider changing the ktarget from *native* in the RPM spec file to "
"easily identify a modified kernel."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:132
msgid "Commit and save the changes to the file."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:137
msgid "Pull a copy of the Linux kernel source code"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:139
msgid "Obtain a local copy of the source code to make modifications against."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:141
msgid ""
"Run make sources to pull the kernel source code specified in the RPM SPEC"
" file. In the example, it downloads the :file:`linux-4.20.8.tar.xz` file."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:149
msgid ""
"Extract the kernel source code archive. This will create a working copy "
"of the Linux source that you can modify."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:156
msgid ""
"Navigate to the extracted directory. In this example, it has been "
"extracted into a :file:`linux-4.20.8` directory."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:165
msgid "Customize the Linux kernel source"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:167
msgid ""
"After the kernel sources have been obtained, customizations to the kernel"
" configuration or source code can be made for inclusion with the kernel "
"build. These customizations are optional."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:172
msgid "Modify kernel configuration"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:174
msgid ""
"The kernel source has many configuration options available to pick "
"support for different hardware and software features."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:177
msgid ""
"These configuration values must be provided in the :file:`.config` file "
"at compile time. You will need to make modifications to the "
":file:`.config` file, and include it in the kernel package."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:182
#: ../../guides/kernel/kernel-development.rst:238
msgid ""
"Make sure you have followed the steps to :ref:`pull-copy-kernel-source` "
"and are in the kernel source working directory."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:186
msgid ""
"If you have an existing :file:`.config` file from an old kernel, copy it "
"into the working directory as :file:`.config` for comparison. Otherwise, "
"use the |CL| kernel configuration file as template"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:195
msgid ""
"Make any desired changes to the :file:`.config` using a kernel "
"configuration tool. Below are some popular options:"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:198
msgid ""
":command:`$EDITOR .config` - the .config file can be directly edited for "
"simple changes with names that are already known."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:201
msgid ""
":command:`make config` - a text-based tool that asks questions one-by-one"
" to decide configuration options."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:204
msgid ""
":command:`make menuconfig` - a terminal user interface that provides "
"menus to decide configuration options."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:207
msgid ""
":command:`make xconfig` - a graphical user interface that provides tree "
"views to decide configuration options."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:211
msgid ""
"More configuration tools can be found by looking at the make help: "
":command:`make help | grep config`"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:214
msgid "Commit and save the changes to the :file:`.config` file."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:216
msgid ""
"Copy the :file:`.config` file from the kernel source directory into the "
"kernel package directory as :file:`config` for inclusion in the build."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:224
msgid "Modify kernel source code"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:226
msgid ""
"Changes to kernel code are applied with patch files. Patch files are "
"formatted git commits that can be applied to the main source code."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:229
msgid ""
"You will need to obtain a copy of the source code, make modifications, "
"generate patch file(s), and add them to the RPM SPEC file for inclusion "
"during the kernel build."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:233
msgid ""
"If you have a large number of patches or a more complex workflow, "
"consider using a patch management tool in addition to Git such as "
"`Quilt`_."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:242
msgid ""
"Initialize the kernel source directory as a new git repo and create a "
"commit with all the existing source files to begin tracking changes."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:252
msgid ""
"Apply patches provided by the |CL| kernel package to the kernel source in"
" the working directory."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:260
msgid "Make any of your desired code changes to the Linux source code files."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:263
msgid "Track and commit your changes to the local git repo."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:271
msgid ""
"Generate a patch file based on your git commits. <n> represents the "
"number of local commits to create patch file. See the `git-format-patch`_"
" documentation for detailed information on using :command:`git format-"
"patch`"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:280
msgid ""
"Copy the patch files from the patches directory in the linux source tree "
"to the RPM build directory."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:288
msgid "Navigate back to the RPM build directory."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:300
msgid ""
"Locate the section of the SPEC file that contains existing patch variable"
" definitions and append your patch file name. Ensure the patch number "
"does not collide with an existing patch. In this example, the patch file "
"is called :file:`2001-my-patch-for-driver-A.patch`"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:323
msgid ""
"Locate the section of the SPEC file further down that contains patch "
"application and append your patch file number used in the step above. In "
"this example, patch2001 is added."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:342
msgid "Commit and save the changes to the RPM SPEC file."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:345
msgid "Modify kernel boot parameters"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:346
msgid ""
"The kernel boot options are passed from the bootloader to the kernel with"
" command-line parameters."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:349
msgid ""
"While temporary changes can be made to kernel parameters on a running "
"system or on a during boot, you can also modify the default parameters "
"that are persistent and distributed with a customized kernel."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:354
msgid "Open the kernel :file:`cmdline` file in an editor."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:361
msgid ""
"Make any desired change to the kernel parameters. For example, you can "
"remove the :command:`quiet` parameter to see more verbose output of "
"kernel log messages during the boot process."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:365
msgid "Commit and save the changes to the :file:`cmdline` file."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:367
msgid ""
"See the `kernel parameters`_  documentation for a list of available "
"parameters."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:371
msgid "Build and install the kernel"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:372
msgid ""
"After changes have been made to the kernel source and RPM SPEC file, the "
"kernel is ready to be compiled and packaged into an RPM."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:375
msgid ""
"The |CL| development tooling makes use of :command:`mock` environments to"
" isolate building of packages in a sanitized workspace."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:378
msgid ""
"Start the compilation process by issuing the :command:`make build` "
"command. This process is typically resource intensive and will take a "
"while."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:386
msgid ""
"The mock plugin `ccache`_ can be enabled to help speed up any future "
"rebuilds of the kernel package by caching compiler outputs and reusing "
"them."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:391
msgid ""
"The result will be multiple :file:`.rpm` files in the :file:`rpms` "
"directory as output."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:398
msgid ""
"The kernel RPM will be named "
":file:`linux<NAME>-<VERSION>-<RELEASE>.x86_64.rpm`"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:402
msgid ""
"The kernel RPM file can be input to the :ref:`mixer` to create a custom "
"bundle and mix of |CL|."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:405
msgid ""
"Alternatively, the kernel RPM bundle can be installed manually on a local"
" machine for testing. This approach works well for individual development"
" or testing. For a more scalable and customizable approach, consider "
"using the :ref:`mixer` to provide a custom kernel with updates."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:410
msgid ""
"Install the kernel onto the local system by extracting the RPM with the "
":command:`rpm2cpio` command."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:418
msgid "Update the |CL| boot manager using :command:`clr-boot-manager` and reboot."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:428
msgid "After a reboot, verify the customized kernel is running."
msgstr ""

#: ../../guides/kernel/kernel-development.rst:435
msgid "Related topics"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:437
msgid ":ref:`kernel-modules`"
msgstr ""

#: ../../guides/kernel/kernel-development.rst:438
msgid ":ref:`mixer`"
msgstr ""

#~ msgid ""
#~ "This document shows how to obtain "
#~ "and compile a Linux* kernel source "
#~ "using |CL-ATTR| development tooling."
#~ msgstr ""

#~ msgid ""
#~ "The `kernels available`_  in |CL| aim"
#~ " to be performant and practical. In"
#~ " some cases, it may be necessary "
#~ "to modify the kernel to suit your"
#~ " specific needs or test new kernel"
#~ " code as a developer."
#~ msgstr ""

#~ msgid ""
#~ "Source RPM files (SRPM) are also "
#~ "available for all |CL| kernels, and "
#~ "can be used for development instead. "
#~ "Select this link to view the "
#~ "latest `source RPM files`_."
#~ msgstr ""

#~ msgid "Make enhancement requests to the |CL| `distribution on GitHub`_ ."
#~ msgstr ""

#~ msgid ""
#~ "Clone the Linux kernel package from "
#~ "|CL|. Using the :command:`make "
#~ "clone_<PACKAGENAME>` command in the "
#~ ":file:`clearlinux/` directory clones the "
#~ "package from the `clearlinux-pkgs "
#~ "GitHub`_."
#~ msgstr ""

#~ msgid ""
#~ "The \"linux\" package is the kernel "
#~ "that comes with |CL| in the "
#~ "`kernel-native` bundle. Alternatively, you "
#~ "can use a different kernel variant "
#~ "as the base for modification. For "
#~ "a list of kernel package names "
#~ "which you can clone instead, see "
#~ "the `clearlinux-pkgs GitHub`_."
#~ msgstr ""

#~ msgid ""
#~ "Generate a patch file based on "
#~ "your git commits. <n> represents the "
#~ "number of local commits to create "
#~ "patch file. See the `git-format-"
#~ "patch Documentation`_ for detailed information"
#~ " on using :command:`git format-patch`"
#~ msgstr ""

#~ msgid ""
#~ "See the `Kernel parameters documentation`_ "
#~ "for a list of available parameters."
#~ msgstr ""

#~ msgid ""
#~ "The `ccache plugin for mock`_ can "
#~ "be enabled to help speed up any"
#~ " future rebuilds of the kernel "
#~ "package by caching compiler outputs and"
#~ " reusing them."
#~ msgstr ""

#~ msgid ""
#~ "This guide shows how to obtain and"
#~ " compile a Linux* kernel source using"
#~ " |CL-ATTR| development tooling."
#~ msgstr ""

#~ msgid ""
#~ "Make enhancement requests to the |CL|"
#~ " `Distribution Project`_ on GitHub."
#~ msgstr ""

#~ msgid ""
#~ "The \"linux\" package is the kernel "
#~ "that comes with |CL| in the "
#~ "`kernel-native` bundle. Alternatively, you "
#~ "can use a different kernel variant "
#~ "as the base for modification. For "
#~ "a list of kernel package names "
#~ "which you can clone instead, see "
#~ "the `clearlinux-pkgs`_ repo on GitHub."
#~ msgstr ""

#~ msgid ""
#~ "Make sure you have followed the "
#~ "steps to `Pull a copy of the "
#~ "Linux kernel source code`_ and are "
#~ "in the kernel source working directory."
#~ msgstr ""

