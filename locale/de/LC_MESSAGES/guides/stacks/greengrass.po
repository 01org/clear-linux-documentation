# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-22 12:54-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../guides/stacks/greengrass.rst:4
msgid "Enable AWS Greengrass\\* and OpenVINO™ toolkit"
msgstr ""

#: ../../guides/stacks/greengrass.rst:6
msgid ""
"This guide explains how to enable AWS Greengrass\\* and OpenVINO™ "
"toolkit. Specifically, the guide demonstrates how to:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:9
msgid "Set up the Intel® edge device with |CL-ATTR|"
msgstr ""

#: ../../guides/stacks/greengrass.rst:10
msgid ""
"Install the OpenVINO™ toolkit and Amazon Web Services\\* (AWS\\*) "
"Greengrass\\* software stacks"
msgstr ""

#: ../../guides/stacks/greengrass.rst:12
msgid ""
"Use AWS Greengrass\\* and AWS Lambda\\* to deploy the FaaS samples from "
"the cloud"
msgstr ""

#: ../../guides/stacks/greengrass.rst:20
msgid "Overview"
msgstr ""

#: ../../guides/stacks/greengrass.rst:22
msgid ""
"Hardware accelerated Function-as-a-Service (FaaS) enables cloud "
"developers to deploy inference functionalities [1] on Intel® IoT edge "
"devices with accelerators (CPU, Integrated GPU, Intel® FPGA, and Intel® "
"Movidius™ technology). These functions provide a great developer "
"experience and seamless migration of visual analytics from cloud to edge "
"in a secure manner using a containerized environment. Hardware-"
"accelerated FaaS provides the best-in-class performance by accessing "
"optimized deep learning libraries on Intel® IoT edge devices with "
"accelerators."
msgstr ""

#: ../../guides/stacks/greengrass.rst:32
msgid "Supported platforms"
msgstr ""

#: ../../guides/stacks/greengrass.rst:34
msgid "Operating System: |CL| latest release"
msgstr ""

#: ../../guides/stacks/greengrass.rst:35
msgid "Hardware:       Intel® core platforms (that support inference on CPU only)"
msgstr ""

#: ../../guides/stacks/greengrass.rst:38
msgid "Sample description"
msgstr ""

#: ../../guides/stacks/greengrass.rst:40
msgid ""
"The AWS Greengrass samples are located at `Edge-Analytics-FaaS`_. This "
"guide uses the 1.0 version of the source code."
msgstr ""

#: ../../guides/stacks/greengrass.rst:43
msgid "|CL| provides the following AWS Greengrass samples:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:45
msgid "`greengrass_classification_sample.py`_"
msgstr ""

#: ../../guides/stacks/greengrass.rst:47
msgid ""
"This AWS Greengrass sample classifies a video stream using classification"
" networks such as AlexNet and GoogLeNet and publishes top-10 results on "
"AWS\\* IoT Cloud every second."
msgstr ""

#: ../../guides/stacks/greengrass.rst:51
msgid "`greengrass_object_detection_sample_ssd.py`_"
msgstr ""

#: ../../guides/stacks/greengrass.rst:53
msgid ""
"This AWS Greengrass sample detects objects in a video stream and "
"classifies them using single-shot multi-box detection (SSD) networks such"
" as SSD Squeezenet, SSD Mobilenet, and SSD300. This sample publishes "
"detection outputs such as class label, class confidence, and bounding box"
" coordinates on AWS IoT Cloud every second."
msgstr ""

#: ../../guides/stacks/greengrass.rst:61
msgid "Install the OS on the edge device"
msgstr ""

#: ../../guides/stacks/greengrass.rst:63
msgid ""
"Start with a clean installation of |CL| on a new system, using the :ref"
":`bare-metal-install-desktop`, found in :ref:`get-started`."
msgstr ""

#: ../../guides/stacks/greengrass.rst:67
msgid "Create user accounts"
msgstr ""

#: ../../guides/stacks/greengrass.rst:69
msgid ""
"After |CL| is installed, create two user accounts. Create an "
"administrative user in |CL| and create a user account for the Greengrass "
"services to use ( see Greengrass user below)."
msgstr ""

#: ../../guides/stacks/greengrass.rst:73
msgid ""
"Create a new user and set a password for that user. Enter the following "
"commands as ``root``:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:81
msgid ""
"Next, enable the :command:`sudo` command for your new <userid>. Add "
"<userid> to the `wheel` group:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:88
msgid "Create a :file:`/etc/fstab` file."
msgstr ""

#: ../../guides/stacks/greengrass.rst:96
msgid ""
"By default, |CL| does not create an :file:`/etc/fstab` file. You must "
"create this file before the Greengrass service runs."
msgstr ""

#: ../../guides/stacks/greengrass.rst:100
msgid "Add required bundles"
msgstr ""

#: ../../guides/stacks/greengrass.rst:102
msgid ""
"Use the :command:`swupd` software updater utility to add the prerequisite"
" bundles for the OpenVINO software stack:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:111
msgid "Learn more about how to :ref:`swupd-guide`."
msgstr ""

#: ../../guides/stacks/greengrass.rst:113
msgid ""
"The :command:`computer-vision-basic` bundle installs the OpenVINO™ "
"toolkit, and the sample models optimized for Intel® edge platforms."
msgstr ""

#: ../../guides/stacks/greengrass.rst:117
msgid "Convert deep learning models"
msgstr ""

#: ../../guides/stacks/greengrass.rst:120
msgid "Locate sample models"
msgstr ""

#: ../../guides/stacks/greengrass.rst:122
msgid ""
"There are two types of provided models that can be used in conjunction "
"with AWS Greengrass for this guide: classification or object detection."
msgstr ""

#: ../../guides/stacks/greengrass.rst:125
msgid ""
"To complete this guide using an image classification model, download the "
"BVLC AlexNet model files `bvlc_alexnet.caffemodel`_ and "
"`deploy.prototxt`_ to the default model_location at "
":file:`/usr/share/openvino/models`. Any custom pre-trained classification"
" models can be used with the classification sample."
msgstr ""

#: ../../guides/stacks/greengrass.rst:131
msgid ""
"For object detection, the sample models optimized for Intel® edge "
"platforms are included with the computer-vision-basic bundle installation"
" at :file:`/usr/share/openvino/models`. These models are provided as an "
"example; you may also use a custom SSD model with the Greengrass object "
"detection sample."
msgstr ""

#: ../../guides/stacks/greengrass.rst:137
msgid "Run model optimizer"
msgstr ""

#: ../../guides/stacks/greengrass.rst:139
msgid ""
"Follow the instructions in the `Model Optimizer Developer Guide`_ for "
"converting deep learning models to Intermediate Representation using "
"Model Optimizer. To optimize either of the sample models described above,"
" run one of the following commands."
msgstr ""

#: ../../guides/stacks/greengrass.rst:143
msgid "For classification using BVLC AlexNet model:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:152
msgid "For object detection using SqueezeNetSSD-5Class model:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:161
msgid "In these examples:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:163
msgid "`<model_location>` is :file:`/usr/share/openvino/models`."
msgstr ""

#: ../../guides/stacks/greengrass.rst:165
msgid "`<data_type>` is FP32 or FP16, depending on target device."
msgstr ""

#: ../../guides/stacks/greengrass.rst:167
msgid ""
"`<output_dir>` is the directory where the Intermediate Representation "
"(IR) is stored. IR contains .xml format corresponding to the network "
"structure and .bin format corresponding to weights. This .xml file should"
" be passed to :command:`<PARAM_MODEL_XML>`."
msgstr ""

#: ../../guides/stacks/greengrass.rst:172
msgid ""
"In the BVLC AlexNet model, the prototxt defines the input shape with "
"batch size 10 by default. In order to use any other batch size, the "
"entire input shape must be provided as an argument to the model "
"optimizer. For example, to use batch size 1, you must provide: "
"`--input_shape [1,3,227,227]`"
msgstr ""

#: ../../guides/stacks/greengrass.rst:180
msgid "Configure AWS Greengrass group"
msgstr ""

#: ../../guides/stacks/greengrass.rst:182
msgid ""
"For each Intel® edge platform, you must create a new AWS Greengrass group"
" and install AWS Greengrass core software to establish the connection "
"between cloud and edge."
msgstr ""

#: ../../guides/stacks/greengrass.rst:186
msgid ""
"To create an AWS Greengrass group, follow the instructions in `Configure "
"AWS IoT Greengrass on AWS IoT`_."
msgstr ""

#: ../../guides/stacks/greengrass.rst:189
msgid ""
"To install and configure AWS Greengrass core on edge platform, follow the"
" instructions in `Start AWS Greengrass on the Core Device`_. In step "
"8(b), download the x86_64 Ubuntu\\* configuration of the AWS Greengrass "
"core software."
msgstr ""

#: ../../guides/stacks/greengrass.rst:196
msgid ""
"You do not need to run the :file:`cgroupfs-mount.sh` script in step #6 of"
" Module 1 of the `AWS Greengrass Developer Guide`_ because this is "
"enabled already in |CL|."
msgstr ""

#: ../../guides/stacks/greengrass.rst:200
msgid ""
"Be sure to download both the security resources and the AWS Greengrass "
"core software."
msgstr ""

#: ../../guides/stacks/greengrass.rst:205
msgid "Security certificates are linked to your AWS account."
msgstr ""

#: ../../guides/stacks/greengrass.rst:209
msgid "Create and package Lambda function"
msgstr ""

#: ../../guides/stacks/greengrass.rst:211
msgid ""
"Complete steps 1-4 of the AWS Greengrass guide at `Create and Package a "
"Lambda Function`_."
msgstr ""

#: ../../guides/stacks/greengrass.rst:216
msgid ""
"This creates the tarball needed to create the AWS Greengrass environment "
"on the edge device."
msgstr ""

#: ../../guides/stacks/greengrass.rst:220
msgid ""
"In step 5, replace :file:`greengrassHelloWorld.py` with the "
"classification or object detection Greengrass sample from `Edge-"
"Analytics-Faas`_:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:223
msgid "Classification: `greengrass_classification_sample.py`_"
msgstr ""

#: ../../guides/stacks/greengrass.rst:225
msgid "Object Detection: `greengrass_object_detection_sample_ssd.py`_"
msgstr ""

#: ../../guides/stacks/greengrass.rst:227
msgid ""
"Zip the selected Greengrass sample with the extracted Greengrass SDK "
"folders from the previous step into "
":file:`greengrass_sample_python_lambda.zip`."
msgstr ""

#: ../../guides/stacks/greengrass.rst:230
msgid "The zip should contain:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:232
msgid "greengrasssdk"
msgstr ""

#: ../../guides/stacks/greengrass.rst:234
msgid "greengrass classification or object detection sample"
msgstr ""

#: ../../guides/stacks/greengrass.rst:236
msgid "For example:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:243
msgid ""
"Return to the AWS documentation section called `Create and Package a "
"Lambda Function`_ and complete the procedure."
msgstr ""

#: ../../guides/stacks/greengrass.rst:248
msgid ""
"In step 9(a) of the AWS documentation, while uploading the zip file, make"
" sure to name the handler to one of the following, depending on the AWS "
"Greengrass sample you are using:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:252
msgid "greengrass_object_detection_sample_ssd.function_handler"
msgstr ""

#: ../../guides/stacks/greengrass.rst:253
msgid "greengrass_classification_sample.function_handler"
msgstr ""

#: ../../guides/stacks/greengrass.rst:257
msgid "Configure Lambda function"
msgstr ""

#: ../../guides/stacks/greengrass.rst:259
msgid ""
"After creating the Greengrass group and the Lambda function, start "
"configuring the Lambda function for AWS Greengrass."
msgstr ""

#: ../../guides/stacks/greengrass.rst:262
msgid ""
"Follow steps 1-8 in `Configure the Lambda Function for AWS IoT "
"Greengrass`_ in the AWS documentation."
msgstr ""

#: ../../guides/stacks/greengrass.rst:265
msgid ""
"In addition to the details mentioned in step 8, change the Memory limit "
"to 2048 MB to accommodate large input video streams."
msgstr ""

#: ../../guides/stacks/greengrass.rst:268
msgid ""
"Add the following environment variables as key-value pairs when editing "
"the Lambda configuration and click on update:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:271
msgid "**Table 1.  Environment variables: Lambda configuration**"
msgstr ""

#: ../../guides/stacks/greengrass.rst:275
msgid "Key"
msgstr ""

#: ../../guides/stacks/greengrass.rst:276
msgid "Value"
msgstr ""

#: ../../guides/stacks/greengrass.rst:277
msgid "PARAM_MODEL_XML"
msgstr ""

#: ../../guides/stacks/greengrass.rst:278
msgid ""
"<MODEL_DIR>/<IR.xml>, where <MODEL_DIR> is user specified and contains "
"IR.xml, the Intermediate Representation file from Intel® Model Optimizer."
" For this guide, <MODEL_DIR> should be set to "
"'/usr/share/openvino/models' or one of its subdirectories."
msgstr ""

#: ../../guides/stacks/greengrass.rst:282
msgid "PARAM_INPUT_SOURCE"
msgstr ""

#: ../../guides/stacks/greengrass.rst:283
msgid "<DATA_DIR>/input.webm to be specified by user. Holds both input and"
msgstr ""

#: ../../guides/stacks/greengrass.rst:284
msgid "output data. For webcam, set PARAM_INPUT_SOURCE to ‘/dev/video0’"
msgstr ""

#: ../../guides/stacks/greengrass.rst:285
msgid "PARAM_DEVICE"
msgstr ""

#: ../../guides/stacks/greengrass.rst:286
msgid "\"CPU\""
msgstr ""

#: ../../guides/stacks/greengrass.rst:287
msgid "PARAM_CPU_EXTENSION_PATH"
msgstr ""

#: ../../guides/stacks/greengrass.rst:288
msgid "/usr/lib64/libcpu_extension.so"
msgstr ""

#: ../../guides/stacks/greengrass.rst:289
msgid "PARAM_OUTPUT_DIRECTORY"
msgstr ""

#: ../../guides/stacks/greengrass.rst:290
msgid "<DATA_DIR> to be specified by user. Holds both input and output data"
msgstr ""

#: ../../guides/stacks/greengrass.rst:292
msgid "PARAM_NUM_TOP_RESULTS"
msgstr ""

#: ../../guides/stacks/greengrass.rst:293
msgid ""
"User specified for classification sample. (e.g. 1 for top-1 result, 5 for"
" top-5 results)"
msgstr ""

#: ../../guides/stacks/greengrass.rst:296
msgid ""
"Add subscription to subscribe, or publish messages from AWS Greengrass "
"Lambda function by completing the procedure in `Configure the Lambda "
"Function for AWS IoT Greengrass`_."
msgstr ""

#: ../../guides/stacks/greengrass.rst:301
msgid ""
"The optional topic filter field is the topic mentioned inside the Lambda "
"function. In this guide, sample topics include the following: "
":command:`openvino/ssd` or :command:`openvino/classification`"
msgstr ""

#: ../../guides/stacks/greengrass.rst:305
msgid "Add local resources"
msgstr ""

#: ../../guides/stacks/greengrass.rst:307
msgid ""
"Refer to the AWS documentation `Access Local Resources with Lambda "
"Functions and Connectors`_ for details about local resources and access "
"privileges."
msgstr ""

#: ../../guides/stacks/greengrass.rst:310
msgid "The following table describes the local resources needed for the CPU:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:312
msgid "**Local resources**"
msgstr ""

#: ../../guides/stacks/greengrass.rst:316
msgid "Name"
msgstr ""

#: ../../guides/stacks/greengrass.rst:317
msgid "Resource type"
msgstr ""

#: ../../guides/stacks/greengrass.rst:318
msgid "Local path"
msgstr ""

#: ../../guides/stacks/greengrass.rst:319
msgid "Access"
msgstr ""

#: ../../guides/stacks/greengrass.rst:321
msgid "ModelDir"
msgstr ""

#: ../../guides/stacks/greengrass.rst:322
#: ../../guides/stacks/greengrass.rst:332
msgid "Volume"
msgstr ""

#: ../../guides/stacks/greengrass.rst:323
msgid "<MODEL_DIR> to be specified by user"
msgstr ""

#: ../../guides/stacks/greengrass.rst:324
#: ../../guides/stacks/greengrass.rst:329
msgid "Read-Only"
msgstr ""

#: ../../guides/stacks/greengrass.rst:326
msgid "Webcam"
msgstr ""

#: ../../guides/stacks/greengrass.rst:327
msgid "Device"
msgstr ""

#: ../../guides/stacks/greengrass.rst:328
msgid "/dev/video0"
msgstr ""

#: ../../guides/stacks/greengrass.rst:331
msgid "DataDir"
msgstr ""

#: ../../guides/stacks/greengrass.rst:333
msgid "<DATA_DIR> to be specified by user. Holds both input and output data."
msgstr ""

#: ../../guides/stacks/greengrass.rst:335
msgid "Read and Write"
msgstr ""

#: ../../guides/stacks/greengrass.rst:338
msgid "Deploy Lambda function"
msgstr ""

#: ../../guides/stacks/greengrass.rst:340
msgid ""
"Refer to the AWS documentation `Deploy Cloud Configurations to an AWS IoT"
" Greengrass Core Device`_ for instructions on how to deploy the lambda "
"function to AWS Greengrass core device. Select *Deployments* on the group"
" page and follow the instructions."
msgstr ""

#: ../../guides/stacks/greengrass.rst:344
msgid "Output consumption"
msgstr ""

#: ../../guides/stacks/greengrass.rst:346
msgid ""
"There are four options available for output consumption. These options "
"are used to report, stream, upload, or store inference output at an "
"interval defined by the variable :command:`reporting_interval` in the AWS"
" Greengrass samples."
msgstr ""

#: ../../guides/stacks/greengrass.rst:350
msgid "IoT cloud output:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:352
msgid ""
"This option is enabled by default in the AWS Greengrass samples using the"
" :command:`enable_iot_cloud_output` variable. You can use it to verify "
"the lambda running on the edge device. It enables publishing messages to "
"IoT cloud using the subscription topic specified in the lambda. (For "
"example, topics may include :command:`openvino/classification` for "
"classification and :command:`openvino/ssd` for object detection samples.)"
" For classification, top-1 result with class label are published to IoT "
"cloud. For SSD object detection, detection results such as bounding box "
"coordinates of objects, class label, and class confidence are published."
msgstr ""

#: ../../guides/stacks/greengrass.rst:362
msgid ""
"Refer to the AWS documentation `Verify the Lambda Function Is Running on "
"the Device`_ for instructions on how to view the output on IoT cloud."
msgstr ""

#: ../../guides/stacks/greengrass.rst:366
msgid "Kinesis streaming:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:368
msgid ""
"This option enables inference output to be streamed from the edge device "
"to cloud using Kinesis [3] streams when :command:`enable_kinesis_output` "
"is set to True. The edge devices act as data producers and continually "
"push processed data to the cloud. You must set up and specify Kinesis "
"stream name, Kinesis shard, and AWS region in the AWS Greengrass samples."
msgstr ""

#: ../../guides/stacks/greengrass.rst:375
msgid "Cloud storage using AWS S3 bucket:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:377
msgid ""
"When the :command:`enable_s3_jpeg_output` variable is set to True, it "
"enables uploading and storing processed frames (in jpeg format) in an AWS"
" S3 bucket. You must set up and specify the S3 bucket name in the AWS "
"Greengrass samples to store the JPEG images. The images are named using "
"the timestamp and uploaded to S3."
msgstr ""

#: ../../guides/stacks/greengrass.rst:383
msgid "Local storage:"
msgstr ""

#: ../../guides/stacks/greengrass.rst:385
msgid ""
"When the :command:`enable_s3_jpeg_output` variable is set to True, it "
"enables storing processed frames (in jpeg format) on the edge device. The"
" images are named using the timestamp and stored in a directory specified"
" by :command:`PARAM_OUTPUT_DIRECTORY`."
msgstr ""

#: ../../guides/stacks/greengrass.rst:391
msgid "References"
msgstr ""

#: ../../guides/stacks/greengrass.rst:393
msgid "AWS Greengrass: https://aws.amazon.com/greengrass/"
msgstr ""

#: ../../guides/stacks/greengrass.rst:394
msgid "AWS Lambda: https://aws.amazon.com/lambda/"
msgstr ""

#: ../../guides/stacks/greengrass.rst:395
msgid "AWS Kinesis: https://aws.amazon.com/kinesis/"
msgstr ""

