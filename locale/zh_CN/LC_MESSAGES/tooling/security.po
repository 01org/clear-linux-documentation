# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-22 12:54-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../tooling/security.rst:4
msgid "OS Security"
msgstr ""

#: ../../tooling/security.rst:6
msgid ""
"|CL-ATTR| aims to make systemic and layered security-conscious decisions "
"that are both performant and practical. This security philosophy is "
"rooted within the project's codebase and operating culture."
msgstr ""

#: ../../tooling/security.rst:14
msgid "Security in updates"
msgstr ""

#: ../../tooling/security.rst:16
msgid ""
"The |CL| team believes in the benefits of software security through open "
"sourcing, incremental updates, and rapidly resolving known security "
"advisories."
msgstr ""

#: ../../tooling/security.rst:20
msgid "The latest Linux\\* codebase"
msgstr ""

#: ../../tooling/security.rst:22
msgid ""
"|CL| uses the newest version of the Linux kernel which allows the "
"operating system to leverage the latest features from the upstream Linux "
"kernel, including security fixes."
msgstr ""

#: ../../tooling/security.rst:27
msgid "Automated effective updating"
msgstr ""

#: ../../tooling/security.rst:29
msgid "|CL| is incrementally updated multiple times per day."
msgstr ""

#: ../../tooling/security.rst:31
msgid ""
"This `rolling release`_ model allows |CL| to consume the latest security "
"fixes of software packages as soon as they become available. There is no "
"waiting for major or minor releases on |CL|."
msgstr ""

#: ../../tooling/security.rst:35
msgid ""
"An update is not effective if it is just simply downloaded onto a system."
" It needs to be obtained *AND* ensured that the new patched copy is being"
" used; not an older copy loaded into memory. |CL| will let you know when "
"a service needs to be rebooted or do it for your automatically after a "
"software update, if desired."
msgstr ""

#: ../../tooling/security.rst:41
msgid ""
"In |CL| updates are delivered automatically, efficiently, and "
"effectively. For more information about software updates in |CL|, refer "
"to the :ref:`swupd-guide` guide."
msgstr ""

#: ../../tooling/security.rst:46
msgid "Automated CVE scanning and remediation"
msgstr ""

#: ../../tooling/security.rst:48
msgid ""
"The sheer number of software packages and security vulnerabilities is "
"growing exponentially. Repositories of Common Vulnerabilities and "
"Exposures (CVEs) and their fixes, if known, are published by :abbr:`NIST`"
" in a National Vulnerability Database \\ |NVD|\\  and at \\ |MITRE|\\  ."
msgstr ""

#: ../../tooling/security.rst:53
msgid ""
"|CL| employs a proactive and measured approach to addressing known and "
"fixable :abbr:`CVEs (Common Vulnerabilities and Exposures)`. Packages are"
" automatically scanned against CVEs daily, and security patches are "
"deployed as soon as they are available."
msgstr ""

#: ../../tooling/security.rst:58
msgid ""
"These combined practices minimize the amount of time |CL| systems are "
"exposed to unnecessary security risk."
msgstr ""

#: ../../tooling/security.rst:61
msgid "Security in software"
msgstr ""

#: ../../tooling/security.rst:64
msgid "Minimized attack surface"
msgstr ""

#: ../../tooling/security.rst:66
msgid ""
"|CL| removes legacy, unneeded, or redundant standards and components as "
"much as possible to enable the use of best known security standards. "
"Below are some examples:"
msgstr ""

#: ../../tooling/security.rst:70
msgid ""
"`RC4`, `SSLv3`, `3DES`, and `SHA-1` ciphers which have had known "
"vulnerabilities, have been explicitly disabled within many |CL| packages "
"to avoid their accidental usage."
msgstr ""

#: ../../tooling/security.rst:74
msgid ""
"Services and subsystems which expose sensitive system information have "
"been removed such as the `finger` and `tcpwrappers`."
msgstr ""

#: ../../tooling/security.rst:77
msgid "`SFTP` has been disabled by default due to security considerations."
msgstr ""

#: ../../tooling/security.rst:80
msgid "Verified trust"
msgstr ""

#: ../../tooling/security.rst:82
msgid ""
"|CL| encourages the use of secure practices such as encryption and "
"digital signature verification throughout the system and discourages "
"blind trust. Below are some examples:"
msgstr ""

#: ../../tooling/security.rst:86
msgid ""
"All update operations from swupd are transparently encrypted and checked "
"against the |CL| maintainers' public key for authenticity. More "
"information about swupd security can be found in the `Security for "
"software update in Clear Linux* OS`_ blog post."
msgstr ""

#: ../../tooling/security.rst:91
msgid ""
"Before being built, packages available from |CL| verify checksums and "
"signatures provided by third party project codebases and maintainers."
msgstr ""

#: ../../tooling/security.rst:94
msgid ""
"|CL| features a unified certificate store, `clrtrust`_ which comes ready "
"to work with well-known Certificate Authorities out of the box. clrtrust "
"also offers an easy to use command line interface for managing system-"
"wide chains of trust, instead of ignoring foreign certificates."
msgstr ""

#: ../../tooling/security.rst:100
msgid "Compiled with secure options"
msgstr ""

#: ../../tooling/security.rst:102
msgid ""
"While |CL| packages are optimized for performance on IntelÂ® architecture,"
" security conscious kernel and compiler options are sensibly taken "
"advantage of. Below are some examples:"
msgstr ""

#: ../../tooling/security.rst:106
msgid ""
"Kernels shipped with |CL| are signed and disallow the usage of custom "
"kernel modules to maintain verifiable system integrity."
msgstr ""

#: ../../tooling/security.rst:109
msgid ""
"`Address space layout randomization (ASLR)`_ and `Kernel address space "
"layout randomization (KASLR)`_  are kernel features which defend against "
"certain memory based attacks. More information about PIE executables can "
"be found in the `Recent GNU* C library improvements`_ blog post."
msgstr ""

#: ../../tooling/security.rst:116
msgid "Security in system design"
msgstr ""

#: ../../tooling/security.rst:118
msgid ""
"Simple, yet effective, techniques are used throughout the |CL| system "
"design to defend against common attack vectors and enable good security "
"hygiene. Below are some examples:"
msgstr ""

#: ../../tooling/security.rst:122
msgid ""
"Full disk encryption using :abbr:`LUKS (Linux Unified Key Setup)` is "
"available during installation. Refer to `cryptsetup`_ for additional "
"information about LUKS."
msgstr ""

#: ../../tooling/security.rst:126
msgid ""
"|CL| uses the PAM cracklib module to harden user login and password "
"security resulting in:"
msgstr ""

#: ../../tooling/security.rst:129
msgid ""
"No default username or root password set out of the box with |CL|, you "
"will be asked to set your own password immediately."
msgstr ""

#: ../../tooling/security.rst:132
msgid ""
"Simple password schemes, which are known to be easily compromised, cannot"
" be set in |CL|."
msgstr ""

#: ../../tooling/security.rst:135
msgid ""
"A password blacklist, to avoid system passwords being set to passwords "
"which have been compromised in the past."
msgstr ""

#: ../../tooling/security.rst:138
msgid ""
"`Tallow`_, a lightweight service which monitors and blocks suspicious SSH"
" login patterns, is installed with the :command:`openssh-server` bundle."
msgstr ""

