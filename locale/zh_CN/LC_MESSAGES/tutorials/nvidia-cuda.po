# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-09 14:33-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../tutorials/nvidia-cuda.rst:4
msgid "NVIDIA\\* CUDA Toolkit"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:6
msgid ""
"NVIDIA is a manufacturer of graphics processing units (GPU), also known "
"as graphics cards."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:9
msgid ""
"CUDA is a parallel computing platform and application programming "
"interface model created by NVIDIA. It allows software developers and "
"software engineers to use a CUDA-enabled graphics processing unit"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:13
msgid ""
"These instructions show how to install the CUDA Toolkit on |CL| after the"
" :ref:`proprietary NVIDIA drivers <nvidia>` have been installed."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:18
msgid ""
"Software installed outside of :ref:`swupd <swupd-guide>` is not updated "
"with |CL| updates and must be updated and maintained manually."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:29
msgid "Prerequisites"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:31
msgid ""
"A |CL| system with a `CUDA-Enabled NVIDIA device "
"<https://developer.nvidia.com/cuda-gpus>`_"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:32
msgid "The :ref:`proprietary NVIDIA drivers <nvidia>` have been installed."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:38
msgid "Compatibility"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:41
msgid "Check compatibility of NVIDIA components"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:43
msgid ""
"To install the appropriate NVIDIA CUDA Toolkit version, it is important "
"to understand the compute capability and compatible driver versions of "
"your NVIDIA hardware."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:47
msgid ""
"Information about NVIDIA compute capability, driver, and toolkit "
"compatibility can be found at: https://developer.nvidia.com/cuda-gpus  "
"and https://docs.nvidia.com/deploy/cuda-compatibility/"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:54
msgid "Check GCC compatibility"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:58
msgid ""
"This is only required for the development or compilation of CUDA "
"applications. It is not required to run pre-built applications that have "
"a dependency on CUDA."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:62
msgid "From the NVIDIA documentation:"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:64
msgid ""
"The CUDA development environment relies on tight integration with the "
"host development environment, including the host compiler and C runtime "
"libraries, and is therefore only supported on distribution versions that "
"have been qualified for this CUDA Toolkit release."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:69
msgid ""
"Refer to the `NVIDIA documentation on CUDA system requirements "
"<https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html"
"#system-requirements>`_ for the latest kernel and compiler compatibility."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:73
msgid ""
"For example, CUDA 10.1 on a system with the latest Linux kernel requires "
"GCC7, which is older than the default GCC version for |CL|."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:76
msgid "Install the compatible version of GCC, if required:"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:78
msgid "Install the :ref:`bundle <bundles>` with the appropriate GCC version."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:84
msgid "Create the directory :file:`/usr/local/cuda/bin`:"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:91
msgid ""
"Add symlinks to the older GCC version in the :file:`/usr/local/cuda/bin` "
"directory. This will cause the older version of GCC to be used when "
":file:`/usr/local/cuda/bin` is in the $PATH environment variable."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:103
msgid "Downloading and Installation"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:107
msgid "Download the NVIDIA CUDA Toolkit"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:109
msgid ""
"Go to the `NVIDIA CUDA downloads website`_ to get the latest CUDA "
"Toolkit. If an older version of the CUDA Toolkit is required, go to the "
"`CUDA Toolkit Archive <https://developer.nvidia.com/cuda-toolkit-"
"archive>`_."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:113
msgid "Choose the following settings and click *Download*."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:115
msgid "Operating System: *Linux*"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:116
msgid "Architecture: *x86_64*"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:117
msgid "Distribution: *any*"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:118
msgid "Version: *any*"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:119
msgid "Installer Type: *runfile(local)*"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:123
msgid ""
"Open a terminal and navigate to where the "
":file:`cuda_<VERSION>_linux.run` file was saved. In this example, it was "
"saved in the Downloads folder."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:131
msgid "Make the :file:`cuda_<VERSION>_linux.run` file executable:"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:140
msgid "Install the NVIDIA CUDA Toolkit"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:142
msgid ""
"The NVIDIA CUDA installer will be directed to install files under "
":file:`/opt/cuda` as much as possible to keep its contents isolated from "
"the rest of the |CL| files under :file:`/usr`."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:146
msgid ""
"The CUDA installer automatically creates a symbolic link that allows the "
"CUDA Toolkit to be accessed from :file:`/usr/local/cuda` regardless of "
"where it was installed."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:151
msgid ""
"Configure the dynamic linker to look for and cache shared libraries under"
" :file:`/opt/cuda/lib64` where the NVIDIA installer will place libraries."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:160
msgid ""
"The CUDA installer will automatically create a file "
":file:`/etc/ld.so.conf.d/cuda-<VERSION>.conf`"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:163
msgid "Navigate into the directory where the NVIDIA installer was downloaded:"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:170
msgid "Run the installer with the advanced options below:"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:182
msgid ""
"Validate the CUDA Toolkit was installed by checking the NVIDIA CUDA "
"compiler version:"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:190
msgid ""
"The CUDA Toolkit is now installed and can be used to compile and run CUDA"
" applications."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:195
msgid "Using the NVIDIA CUDA Toolkit"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:197
msgid ""
"Verify that the NVIDIA device characters files /dev/nvidia* exist and "
"have the correct (0666) file permissions. The character devices should be"
" automatically created on system with the NVIDIA driver loaded through X "
"server, but will not be on systems that do not automatically load the "
"NVIDIA driver."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:208
msgid ""
"If your system does not have the NVIDIA character devices created "
"automatically, run the `script from NVIDIA documentation "
"<https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html"
"#runfile-verifications>`_ with root privileges."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:214
msgid ""
"Alternatively a setuid utility, :command:`nvidia-modprobe`, can be "
"compiled and installed to automatically create the device character files"
" on-demand."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:227
msgid ""
"When the CUDA toolkit is needed, export PATH variables pointing to the "
"CUDA directories. This will temporarily add CUDA files to the PATH and "
"use the specified linked version of GCC for the terminal session."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:237
msgid ""
"Source code for CUDA sample located at "
":file:`/usr/local/cuda/NVIDIA_CUDA-<VERSION>_Samples`. See the `CUDA "
"documentation on compiling samples <https://docs.nvidia.com/cuda/cuda-"
"installation-guide-linux/index.html#compiling-examples>`_ to learn more."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:245
msgid "Uninstalling"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:247
msgid ""
"The NVIDIA drivers and associated software can be uninstalled and nouveau"
" driver restored by:"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:250
msgid "Run the :command:`sudo /usr/local/cuda/bin/cuda-uninstaller`."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:252
msgid "Follow the prompts on the screen and reboot the system."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:256
msgid "Debugging"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:258
msgid ""
"The NVIDIA CUDA  installer places logs under :file:`/tmp/cuda-"
"installer.log`."
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:263
msgid "Additional resources"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:264
msgid "`NVIDIA CUDA Toolkit Documentation <https://docs.nvidia.com/cuda/>`_"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:266
msgid ""
"`Why aren't the NVIDIA Linux drivers open source? "
"<https://nvidia.custhelp.com/app/answers/detail/a_id/1849/kw/Linux>`_"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:268
msgid ""
"`Where can I get support for NVIDIA Linux drivers? "
"<https://nvidia.custhelp.com/app/answers/detail/a_id/44/kw/linux>`_"
msgstr ""

#: ../../tutorials/nvidia-cuda.rst:270
msgid ""
"`NVIDIA Accelerated Linux Graphics Driver Installation Guides "
"<https://download.nvidia.com/XFree86/Linux-x86_64/>`_"
msgstr ""

