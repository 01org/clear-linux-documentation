# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-09 14:33-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../tutorials/redis.rst:4
msgid "Redis\\*"
msgstr ""

#: ../../tutorials/redis.rst:6
msgid ""
"Redis is an in-memory key:value store designed for quick lookups, "
"accessible over the network. In this tutorial, you'll install redis and "
"launch a redis-server on |CL|, plus learn a few basic redis commands. We "
"also invite you to pull our `Clear Linux Redis instance`_ on dockerhub\\*"
" for application or infrastructure development."
msgstr ""

#: ../../tutorials/redis.rst:12
msgid ""
"While the `redis data structure store`_ can serve as a NoSQL database for"
" a Web application, it's also easy to integrate in an existing stack. For"
" example, you could use the Redis caching layer for real-time responses "
"on a leaderboard in a gaming app. Redis offers many client libraries with"
" language-specific bindings for Python, Perl, Ruby, and more."
msgstr ""

#: ../../tutorials/redis.rst:19
msgid "Prerequisites"
msgstr ""

#: ../../tutorials/redis.rst:20
msgid "Install the `redis-native` bundle in |CL|"
msgstr ""

#: ../../tutorials/redis.rst:21
msgid "Install the `containers-basic` bundle in |CL| (only required in Example 2)"
msgstr ""

#: ../../tutorials/redis.rst:24
msgid "Install the redis bundle"
msgstr ""

#: ../../tutorials/redis.rst:26
msgid "In |CL|, find redis in the `redis-native` bundle."
msgstr ""

#: ../../tutorials/redis.rst:28
msgid "Open a Terminal and login as an administrative user."
msgstr ""

#: ../../tutorials/redis.rst:30
msgid "Add :file:`redis-native`."
msgstr ""

#: ../../tutorials/redis.rst:38
msgid "If the bundle already exists, no action is required."
msgstr ""

#: ../../tutorials/redis.rst:41
msgid "Start the redis-server"
msgstr ""

#: ../../tutorials/redis.rst:43
msgid ""
"A `systemd` service unit is available to control the redis server. By "
"default, redis runs on port 6379."
msgstr ""

#: ../../tutorials/redis.rst:46
msgid "Start the service."
msgstr ""

#: ../../tutorials/redis.rst:54
msgid "To stop redis run :command:`systemctl stop redis`."
msgstr ""

#: ../../tutorials/redis.rst:56
msgid "Assure the service is running."
msgstr ""

#: ../../tutorials/redis.rst:62
msgid "Verify the redis-server sends a reply."
msgstr ""

#: ../../tutorials/redis.rst:70
msgid "Expected output: `PONG`."
msgstr ""

#: ../../tutorials/redis.rst:72
msgid ""
"Optional: If you wish to apply advanced configuration, copy the "
"`redis.conf` into /etc/ directory."
msgstr ""

#: ../../tutorials/redis.rst:79
msgid "The redis-server is now ready to use on |CL|. Try some examples below."
msgstr ""

#: ../../tutorials/redis.rst:82
msgid "Example 1: Use the redis-cli and try commands"
msgstr ""

#: ../../tutorials/redis.rst:84
msgid ""
"One advantage of redis over other NoSQL databases is that developers can "
"easily access data structures like lists, sets, sorted sets, strings, and"
" hashes using collection operations commands similar to those found in "
"many programming languages. These exercises are inspired by `try redis "
"io`_."
msgstr ""

#: ../../tutorials/redis.rst:89
msgid "After your `redis-server` is running, try some basic commands."
msgstr ""

#: ../../tutorials/redis.rst:91
msgid "Enter the `redis-cli`. It provides syntax suggestions as you type."
msgstr ""

#: ../../tutorials/redis.rst:97
msgid "SET key to hold string value. In the set create connections and increment."
msgstr ""

#: ../../tutorials/redis.rst:108
msgid "If the key does not exist or hold a key value, `nil` is returned."
msgstr ""

#: ../../tutorials/redis.rst:126
msgid "Create a `friends` list and insert new values at the end of the list."
msgstr ""

#: ../../tutorials/redis.rst:140
msgid "Modify `friends` list, using a common slice method with a 0-index."
msgstr ""

#: ../../tutorials/redis.rst:162
msgid ""
"Consider using a hash, a very useful data type, which maps string fields "
"and string values, offering multiple lookup methods."
msgstr ""

#: ../../tutorials/redis.rst:165
msgid "Enter many user key:values with `HMSET`. Then try `HGET` and `HGETALL`."
msgstr ""

#: ../../tutorials/redis.rst:185
msgid "Example 2: Run the |CL| redis docker image"
msgstr ""

#: ../../tutorials/redis.rst:187
msgid ""
"We also provide a `Clear Linux Redis instance`_, which is updated "
"continuously and maintained by |CL| development."
msgstr ""

#: ../../tutorials/redis.rst:203
msgid "Next Steps"
msgstr ""

#: ../../tutorials/redis.rst:205
msgid "Follow the `redis quickstart tutorial`_ to expand potential uses."
msgstr ""

#: ../../tutorials/redis.rst:207
msgid "Learn to :ref:`docker`."
msgstr ""

#~ msgid "Run Redis on |CL-ATTR|"
#~ msgstr ""

