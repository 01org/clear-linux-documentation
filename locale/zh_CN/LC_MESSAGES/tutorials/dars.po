# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-12 12:18-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../tutorials/dars.rst:4
msgid "Data Analytics Reference Stack"
msgstr ""

#: ../../tutorials/dars.rst:6
msgid ""
"This tutorial shows you how to use the Data Analytics Reference Stack "
"(DARS), and to optionally build your own images with the baseline "
"Dockerfiles provided in the `DARS repository`_. Our assumption is that "
"|CL-ATTR| is the host. However, any system that supports Docker\\* "
"containers can be used to follow these steps."
msgstr ""

#: ../../tutorials/dars.rst:17
msgid "The Data Analytics Reference Stack release"
msgstr ""

#: ../../tutorials/dars.rst:19
msgid ""
"The Data Analytics Reference Stack (DARS) provides developers and "
"enterprises a straightforward, highly optimized software stack for "
"storing and processing large amounts of data.  More detail is available "
"on the `DARS architecture and performance benchmarks`_."
msgstr ""

#: ../../tutorials/dars.rst:21
msgid ""
"The Data Analytics Reference Stack provides two pre-built Docker images, "
"available on `Docker Hub`_:"
msgstr ""

#: ../../tutorials/dars.rst:23
msgid "A |CL|-derived `DARS with OpenBlas`_ stack optimized for `OpenBLAS`_"
msgstr ""

#: ../../tutorials/dars.rst:24
msgid "A |CL|-derived  `DARS with MKL`_ stack optimized for `MKL`_"
msgstr ""

#: ../../tutorials/dars.rst:26
msgid ""
"We recommend you view the latest component versions for each image in the"
" :file:`README` found in the `DARS repository`_.  Because |CL| is a "
"rolling distribution, the package version numbers in the |CL|-based "
"containers may not be the latest released by |CL|."
msgstr ""

#: ../../tutorials/dars.rst:34
msgid "Using the Docker Images"
msgstr ""

#: ../../tutorials/dars.rst:36
msgid ""
"To immediately start using the latest stable DARS images, pull directly "
"from `Docker Hub`_. For this tutorial we'll use the `Dars with MKL`_ "
"version of the stack."
msgstr ""

#: ../../tutorials/dars.rst:39
msgid "Once you have downloaded the image, you can run it with"
msgstr ""

#: ../../tutorials/dars.rst:45
msgid ""
"This will launch the image and drop you into a bash shell inside the "
"container.  You will see output similar to the following:"
msgstr ""

#: ../../tutorials/dars.rst:66
msgid ""
"The :command:`--ulimit nofile` parameter is currently required in order "
"to increase the number of open files opened at certain point by the spark"
" engine."
msgstr ""

#: ../../tutorials/dars.rst:71
msgid "Building DARS Images"
msgstr ""

#: ../../tutorials/dars.rst:73
msgid ""
"If you choose to build your own DARS container images, you can customize "
"them as needed. Use the provided Dockerfile as a baseline. To construct "
"images with |CL|, start with a |CL| development platform that has the "
":command:`containers-basic-dev` bundle installed. Learn more about "
"bundles and installing them by using :ref:`swupd-guide`."
msgstr ""

#: ../../tutorials/dars.rst:79
msgid "First, clone the `DARS repository`_ from GitHub."
msgstr ""

#: ../../tutorials/dars.rst:85
msgid ""
"Then, inside the DARS directory, run :command:`make` to build OpenBLAS "
"and MKL images, and run :command:`make baseline` to build the baseline "
"CentOS image. Depending on the system, it may take a while to finish "
"building. Once completed, check the resulting images with "
":command:`Docker`"
msgstr ""

#: ../../tutorials/dars.rst:94
msgid ""
"You can use any of the resulting images to launch fully functional "
"containers.  If you need to customize the containers, you can edit the "
"provided :file:`Dockerfile`."
msgstr ""

