# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr "Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-09 14:33-0700\n"
"PO-Revision-Date: 2019-08-21 11:09-0008\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh-Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Intel® International Developer Studio Version 4.1.273.0\n"
"Language: zh-Hans\n"

#: ../../guides/maintenance/resource-limits.rst:4
msgid "Resource limits"
msgstr "资源限制"

#: ../../guides/maintenance/resource-limits.rst:6
msgid ""
"Linux* systems employ limiting or quota mechanisms to provide quality of "
"service for system resources and contain rogue processes."
msgstr "Linux* 系统使用限制机制或配额机制为系统资源提供服务质量，并且包含异常进程。"

#: ../../guides/maintenance/resource-limits.rst:9
msgid ""
"These limits are layered at the system-level and user-level. If these "
"limits need to be modified, it is useful to understand the different "
"limit configurations."
msgstr "这些限制分为系统级别和用户级别。如果需要修改这些限制，则了解不同的限制配置会有帮助。"

#: ../../guides/maintenance/resource-limits.rst:18
msgid "System-wide limits"
msgstr "系统范围限制"

#: ../../guides/maintenance/resource-limits.rst:20
msgid ""
"Some global resource limits are implemented in the Linux kernel and are "
"controllable with kernel parameters."
msgstr "部分全局资源限制在 Linux 内核中实施，并且可以使用内核参数进行控制。"

#: ../../guides/maintenance/resource-limits.rst:23
msgid ""
"For example, a global limit for the maximum number of open files is set "
"with the *fs.file-max* parameter. This limit applies to all processes and"
" users an cannot be exceeded other limit values."
msgstr "例如，可以使用 *fs.file-max* 参数来设置针对最大打开文件数的全局限制。此限制应用于所有进程，并且用户不能超过其他限制值。"

#: ../../guides/maintenance/resource-limits.rst:28
msgid "Checking limit"
msgstr "检查限制"

#: ../../guides/maintenance/resource-limits.rst:30
msgid ""
"You can check a current value with :command:`sysctl -n <PARAMETER>`. For "
"example:"
msgstr "可以使用 :command:`sysctl -n <PARAMETER>` 来检查当前值。例如："

#: ../../guides/maintenance/resource-limits.rst:38
msgid ""
"This *fs.file-max* value is set intentionally high on |CL| systems by "
"default. You can check the maximum value supported by the system with:"
msgstr "默认情况下，此 *fs.file-max* 值在 |CL| 系统中有意设置得较高。可以使用以下命令检查系统支持的最大值："

#: ../../guides/maintenance/resource-limits.rst:47
msgid "Overriding limit"
msgstr "替代限制"

#: ../../guides/maintenance/resource-limits.rst:49
msgid ""
"You can override a value with :command:`sysctl -w <PARAMETER>`. For "
"example:"
msgstr "可以使用 :command:`sysctl -w <PARAMETER>` 来替代某个值。例如："

#: ../../guides/maintenance/resource-limits.rst:56
msgid ""
"If needed permanently, the value can be set by creating a "
":file:`/etc/sysctl.d/*.conf` file (see :command:`man sysctl.d` for "
"details). For example:"
msgstr "如果需要永久值，可以通过创建 :file:`/etc/sysctl.d/*.conf` 文件来设置值（有关详细信息，请参见 :command:`man sysctl.d`）。例如："

#: ../../guides/maintenance/resource-limits.rst:73
msgid "Per-user limits"
msgstr "每用户限制"

#: ../../guides/maintenance/resource-limits.rst:75
msgid ""
"For processes not managed by systemd, resource limits can be set for PAM "
"logins on a per-user basis with upper and lower limits in the "
":file:`/etc/security/limits.conf` file."
msgstr "对于不由 systemd 管理的进程，可以在 :file:`/etc/security/limits.conf` 文件中使用上限和下限基于用户为 PAM 登录设置资源限制。"

#: ../../guides/maintenance/resource-limits.rst:79
msgid ""
"You can set temporary values and check the current values with the "
":command:`ulimit` command. For example, to change the soft limit of "
"maximum number of open file descriptors for the current user:"
msgstr "可以设置临时值，并使用 :command:`ulimit` 命令检查当前值。例如，要更改当前用户的最大打开文件数描述符的软限制："

#: ../../guides/maintenance/resource-limits.rst:87
msgid "See :command:`man limits.conf` for details."
msgstr "有关详细信息，请参见 :command:`man limits.conf`。"

#: ../../guides/maintenance/resource-limits.rst:91
msgid "Service limits"
msgstr "服务限制"

#: ../../guides/maintenance/resource-limits.rst:93
msgid ""
"Resource limits for services started with systemd units do not follow "
"normal user limits because the process is started in a seperate `Linux "
"control group (cgroup) "
"<https://www.kernel.org/doc/Documentation/cgroup-v2.txt>`_ Linux cgroups "
"associate related process groups and provide resource accounting."
msgstr "使用 systemd 单元启动的服务的资源限制不遵循正常用户限制，因为进程在单独的 `Linux 控制组 (cgroup) <https://www.kernel.org/doc/Documentation/cgroup-v2.txt>`_ 中启动，Linux cgroup 将相关的进程组相关联并提供资源计帐。"

#: ../../guides/maintenance/resource-limits.rst:98
msgid ""
"Resource limits for individual systemd services can be controlled inside "
"their unit files or its configuration drop-in directory with the resource"
" Limit directives. See `process properties section of the systemd.exec "
"man page "
"<https://www.freedesktop.org/software/systemd/man/systemd.exec.html>`_."
msgstr "可以在相应的单元文件或配置放置目录中使用资源限制指令来控制各个 systemd 服务的资源限制。请参见 `process properties section of the systemd.exec man page <https://www.freedesktop.org/software/systemd/man/systemd.exec.html>`_。"

#: ../../guides/maintenance/resource-limits.rst:103
msgid ""
"Resource limits for all systemd services can be controlled with a file in"
" the :file:`/etc/systemd/system.conf.d/` directory. For example, to have "
"no restriction on the number of open files:"
msgstr "可以使用 :file:`/etc/systemd/system.conf.d/` 目录中的文件来控制所有 systemd 服务的资源限制。例如，要禁用对最大打开文件数的限制："

