# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr "Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-09 14:33-0700\n"
"PO-Revision-Date: 2019-09-04 16:21-0008\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh-Hans\n"
"Language-Team: zh-Hans\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Intel® International Developer Studio Version 4.1.273.0\n"

#: ../../guides/stacks/dlrs/dlrs.rst:4
msgid "Deep Learning Reference Stack"
msgstr "深度学习参考堆栈"

#: ../../guides/stacks/dlrs/dlrs.rst:6
msgid ""
"This guide describes how to run benchmarking workloads for TensorFlow\\*,"
" PyTorch\\*, and Kubeflow in |CL-ATTR| using the Deep Learning Reference "
"Stack."
msgstr "本教程介绍如何在 |CL-ATTR| 中使用深度学习参考堆栈运行 TensorFlow\\*、PyTorch\\* 和 Kubeflow 基准工作负载。"


#: ../../guides/stacks/dlrs/dlrs.rst:14
msgid "Overview"
msgstr "概述"

#: ../../guides/stacks/dlrs/dlrs.rst:16
msgid ""
"We created the Deep Learning Reference Stack to help AI developers "
"deliver the best experience on Intel® Architecture. This stack reduces "
"complexity common with deep learning software components, provides "
"flexibility for customized solutions, and enables you to quickly "
"prototype and deploy Deep Learning workloads. Use this guide to run "
"benchmarking workloads on your solution."
msgstr "我们打造了深度学习参考堆栈来帮助 AI 开发人员在英特尔架构上获得最佳开发体验。此堆栈降低了深度学习软件组件常见的复杂性，为自定义解决方案提供了灵活性，并使您能够快速构建原型并部署深度学习工作负载。使用本教程可在您的解决方案上运行基准工作负载。"


#: ../../guides/stacks/dlrs/dlrs.rst:23
msgid "The Deep Learning Reference Stack is available in the following versions:"
msgstr "深度学习参考堆栈有以下版本："

#: ../../guides/stacks/dlrs/dlrs.rst:25
msgid ""
"`Intel MKL-DNN-VNNI`_, which is optimized using Intel® Math Kernel "
"Library for Deep Neural Networks (Intel® MKL-DNN) primitives and "
"introduces support for Intel® AVX-512 Vector Neural Network Instructions "
"(VNNI)."
msgstr "`Intel MKL-DNN-VNNI`_，它使用面向深度神经网络（英特尔® MKL-DNN）原语的英特尔®数学内核库进行优化，并支持英特尔® AVX-512 矢量神经网络指令 (VNI)。"


#: ../../guides/stacks/dlrs/dlrs.rst:28
msgid ""
"`Intel MKL-DNN`_, which includes the TensorFlow framework optimized using"
" Intel® Math Kernel Library for Deep Neural Networks (Intel® MKL-DNN) "
"primitives."
msgstr "`Intel MKL-DNN`_，它包括使用面向深度神经网络（英特尔® MKL-DNN）原语的英特尔®数学内核库进行优化的 TensorFlow 框架。"


#: ../../guides/stacks/dlrs/dlrs.rst:31
msgid "`Eigen`_, which includes `TensorFlow`_ optimized for Intel® architecture."
msgstr "`Eigen`_，它包括针对英特尔®架构优化的 `TensorFlow`_。"

#: ../../guides/stacks/dlrs/dlrs.rst:32
msgid "`PyTorch with OpenBLAS`_, which includes PyTorch with OpenBlas."
msgstr "`PyTorch with OpenBLAS`_，它包括 PyTorch with OpenBlas。"

#: ../../guides/stacks/dlrs/dlrs.rst:33
msgid ""
"`PyTorch with Intel MKL-DNN`_, which includes PyTorch optimized using "
"Intel® Math Kernel Library (Intel® MKL) and Intel MKL-DNN."
msgstr "`PyTorch with Intel MKL-DNN`_，它包括使用英特尔®数学内核库（英特尔® MKL）和英特尔 MKL-DNN 进行优化的 PyTorch。"


#: ../../guides/stacks/dlrs/dlrs.rst:38
msgid ""
"To take advantage of the Intel® AVX-512 and VNNI functionality with the "
"Deep Learning Reference Stack, you must use the following hardware:"
msgstr "要利用英特尔® AVX-512 和 VNI 功能以及深度学习参考堆栈，您必须使用以下硬件："

#: ../../guides/stacks/dlrs/dlrs.rst:41
msgid "Intel® AVX-512 images require an Intel® Xeon® Scalable Platform"
msgstr "英特尔® AVX-512 映像需要使用英特尔®至强®可扩展平台"

#: ../../guides/stacks/dlrs/dlrs.rst:42
msgid "VNNI requires a 2nd generation Intel® Xeon® Scalable Platform"
msgstr "VNNI 需要使用第二代英特尔®至强®可扩展平台"

#: ../../guides/stacks/dlrs/dlrs.rst:45
msgid "Stack features"
msgstr "堆栈功能和特性"

#: ../../guides/stacks/dlrs/dlrs.rst:47
msgid "`DLRS V3.0`_  release announcement."
msgstr "`DLRS V3.0`_ 发布公告。"

#: ../../guides/stacks/dlrs/dlrs.rst:48
msgid "Deep Learning Reference Stack v2.0 including current `PyTorch benchmark`_."
msgstr "深度学习参考堆栈 v2.0，包括最新的 `PyTorch benchmark results`_。"

#: ../../guides/stacks/dlrs/dlrs.rst:50
msgid ""
"Deep Learning Reference Stack v1.0 including current `TensorFlow "
"benchmark`_ results."
msgstr "深度学习参考堆栈 v1.0，包括最新的 `TensorFlow benchmark results`_。"

#: ../../guides/stacks/dlrs/dlrs.rst:52
msgid ""
"`DLRS Release notes`_  on Github\\* for the latest release of Deep "
"Learning Reference Stack."
msgstr "`DLRS Release notes`_ on Github\\*，了解深度学习参考堆栈的最新版本。"

#: ../../guides/stacks/dlrs/dlrs.rst:57
msgid ""
"The Deep Learning Reference Stack is a collective work, and each piece of"
" software within the work has its own license.  Please see the `DLRS "
"Terms of Use`_ for more details about licensing and usage of the Deep "
"Learning Reference Stack."
msgstr "深度学习参考堆栈是一项集体成果，成果中的每一个软件都有自己的许可证。有关深度学习参考堆栈的许可和使用的更多详细信息，请参阅 `DLRS Terms of Use`_。"


#: ../../guides/stacks/dlrs/dlrs.rst:62
msgid "Prerequisites"
msgstr "必备条件"

#: ../../guides/stacks/dlrs/dlrs.rst:64
msgid ":ref:`Install <bare-metal-install-desktop>` |CL| on your host system"
msgstr "在主机系统上 :ref:`Install <bare-metal-install-desktop>` |CL|"

#: ../../guides/stacks/dlrs/dlrs.rst:65
msgid ":command:`containers-basic` bundle"
msgstr ":command:`containers-basic` 捆绑包"

#: ../../guides/stacks/dlrs/dlrs.rst:66
msgid ":command:`cloud-native-basic` bundle"
msgstr ":command:`cloud-native-basic` 捆绑包"

#: ../../guides/stacks/dlrs/dlrs.rst:68
msgid ""
"In |CL|, :command:`containers-basic` includes Docker\\*, which is "
"required for TensorFlow and PyTorch benchmarking. Use the "
":command:`swupd` utility to check if :command:`containers-basic` and "
":command:`cloud-native-basic` are present:"
msgstr "在 |CL| 中，:command:`containers-basic` 包括 TensorFlow 和 PyTorch 基准测试所必需的 Docker\\*。使用 :command:`swupd` 实用程序检查 :command:`containers-basic` 和 :command:`cloud-native-basic` 是否存在："


#: ../../guides/stacks/dlrs/dlrs.rst:77
msgid ""
"To install the :command:`containers-basic` or :command:`cloud-native-"
"basic` bundles, enter:"
msgstr "要安装 :command:`containers-basic` 或 :command:`cloud-native-basic` 捆绑包，请输入："

#: ../../guides/stacks/dlrs/dlrs.rst:84
msgid ""
"Docker is not started upon installation of the :command:`containers-"
"basic` bundle. To start Docker, enter:"
msgstr "安装 :command:`containers-basic` 捆绑包后 Docker 不会启动。要启动 Docker，请输入："

#: ../../guides/stacks/dlrs/dlrs.rst:91
msgid ""
"To ensure that Kubernetes is correctly installed and configured, follow "
"the instructions in :ref:`kubernetes`."
msgstr "要确保正确安装和配置 Kubernetes，请遵循 :ref:`kubernetes` 中的说明。"

#: ../../guides/stacks/dlrs/dlrs.rst:95
msgid "Version compatibility"
msgstr "版本兼容性"

#: ../../guides/stacks/dlrs/dlrs.rst:97
msgid "We validated these steps against the following software package versions:"
msgstr "我们根据以下软件包版本验证了这些步骤："

#: ../../guides/stacks/dlrs/dlrs.rst:99
msgid "|CL| 26240 (Minimum supported version)"
msgstr "|CL| 26240（支持的最低版本）"

#: ../../guides/stacks/dlrs/dlrs.rst:100
msgid "Docker 18.06.1"
msgstr "Docker 18.06.1"

#: ../../guides/stacks/dlrs/dlrs.rst:101
msgid "Kubernetes 1.11.3"
msgstr "Kubernetes 1.11.3"

#: ../../guides/stacks/dlrs/dlrs.rst:102
msgid "Go 1.11.12"
msgstr "Go 1.11.12"

#: ../../guides/stacks/dlrs/dlrs.rst:107
msgid ""
"The Deep Learning Reference Stack was developed to provide the best user "
"experience when executed on a |CL| host.  However, as the stack runs in a"
" container environment, you should be able to complete the following "
"sections of this guide on other Linux* distributions, provided they "
"comply with the Docker*, Kubernetes* and Go* package versions listed "
"above. Look for your distribution documentation on how to update packages"
" and manage Docker services."
msgstr "深度学习参考堆栈是为了在 |CL| 主机上执行时获得最佳用户体验而开发的。但是，该堆栈在容器环境中运行时，您应该能够在其他 Linux* 发行版上完成本教程的以下部分，只要这些发行版满足上面列出的 Docker*、Kubernetes* 和 Go* 软件包版本。查找关于如何更新软件包和管理 Docker 服务的分发版文档。"


#: ../../guides/stacks/dlrs/dlrs.rst:112
msgid "TensorFlow single and multi-node benchmarks"
msgstr "TensorFlow 单节点和多节点基准测试"

#: ../../guides/stacks/dlrs/dlrs.rst:114
msgid ""
"This section describes running the `TensorFlow Benchmarks`_ in single "
"node. For multi-node testing, replicate these steps for each node. These "
"steps provide a template to run other benchmarks, provided that they can "
"invoke TensorFlow."
msgstr "本部分介绍在单节点中运行 `TensorFlow benchmarks`_。对于多节点测试，请为每个节点重复这些步骤。这些步骤提供了运行其他基准测试的模板，前提是它们可以调用 TensorFlow。"


#: ../../guides/stacks/dlrs/dlrs.rst:121
msgid ""
"Performance test results for the Deep Learning Reference Stack and for "
"this guide were obtained using `runc` as the runtime."
msgstr "深度学习参考堆栈和本教程的性能测试结果是使用 `runc` 作为运行时获得的。"

#: ../../guides/stacks/dlrs/dlrs.rst:124
msgid ""
"Download either the `Eigen`_ or the `Intel MKL-DNN`_ Docker image from "
"`Docker Hub`_."
msgstr "从 `Docker Hub`_ 下载 `Eigen`_ 或 `Intel MKL-DNN`_ Docker 映像。"

#: ../../guides/stacks/dlrs/dlrs.rst:127 ../../guides/stacks/dlrs/dlrs.rst:169
msgid "Run the image with Docker:"
msgstr "使用 Docker 运行映像："

#: ../../guides/stacks/dlrs/dlrs.rst:136 ../../guides/stacks/dlrs/dlrs.rst:177
msgid ""
"Launching the Docker image with the :command:`-i` argument starts "
"interactive mode within the container. Enter the following commands in "
"the running container."
msgstr "使用 :command:`-i` 参数启动 Docker 映像，从而在容器内启动交互模式。在正在运行的容器中输入以下命令。"

#: ../../guides/stacks/dlrs/dlrs.rst:140
msgid "Clone the benchmark repository in the container:"
msgstr "克隆容器中的基准测试存储库："

#: ../../guides/stacks/dlrs/dlrs.rst:146 ../../guides/stacks/dlrs/dlrs.rst:187
msgid "Execute the benchmark script:"
msgstr "执行基准测试脚本："

#: ../../guides/stacks/dlrs/dlrs.rst:154
msgid ""
"You can replace the model with one of your choice supported by the "
"TensorFlow benchmarks."
msgstr "您可以将该模型更换为 TensorFlow 支持的其他模型。"

#: ../../guides/stacks/dlrs/dlrs.rst:157
msgid ""
"If you are using an FP32 based model, it can be converted to an int8 "
"model using `Intel® quantization tools`_."
msgstr "如果使用基于 FP32 的模型，可以使用 `Intel® quantization tools`_ 将其转换为 int8 模型。"

#: ../../guides/stacks/dlrs/dlrs.rst:161
msgid "PyTorch single and multi-node benchmarks"
msgstr "PyTorch 单节点和多节点基准测试"

#: ../../guides/stacks/dlrs/dlrs.rst:163
msgid ""
"This section describes running the `PyTorch benchmarks`_ for Caffe2 in "
"single node."
msgstr "本部分介绍在单节点中运行针对 Caffe2 的 `PyTorch benchmarks`_。"

#: ../../guides/stacks/dlrs/dlrs.rst:166
msgid ""
"Download either the `PyTorch with OpenBLAS`_ or the `PyTorch with Intel "
"MKL-DNN`_ Docker image from `Docker Hub`_."
msgstr "从 `Docker Hub`_ 下载 `PyTorch with OpenBLAS`_ 或 `PyTorch with Intel MKL-DNN`_ Docker 映像。"


#: ../../guides/stacks/dlrs/dlrs.rst:181
msgid "Clone the benchmark repository:"
msgstr "克隆基准测试存储库："

#: ../../guides/stacks/dlrs/dlrs.rst:197
msgid "Kubeflow multi-node benchmarks"
msgstr "Kubeflow 多节点基准测试"

#: ../../guides/stacks/dlrs/dlrs.rst:199
msgid ""
"The benchmark workload runs in a Kubernetes cluster. The guide uses "
"`Kubeflow`_ for the Machine Learning workload deployment on three nodes."
msgstr "基准测试工作负载在 Kubernetes 集群中运行。本教程使用 `Kubeflow`_ 在三个节点上部署机器学习工作负载。"

#: ../../guides/stacks/dlrs/dlrs.rst:204
msgid ""
"If you choose the Intel® MKL-DNN or Intel® MKL-DNN-VNNI image, your "
"platform must support the Intel® AVX-512 instruction set. Otherwise, an "
"*illegal instruction* error may appear, and you won’t be able to complete"
" this guide."
msgstr "如果选择英特尔® MKL-DNN 或英特尔® MKL-DNN-VNNI 映像，您的平台必须支持英特尔® AVX-512 指令集。否则，可能会出现非法指令错误，导致无法完成本教程。"


#: ../../guides/stacks/dlrs/dlrs.rst:210
msgid "Kubernetes setup"
msgstr "Kubernetes 设置"

#: ../../guides/stacks/dlrs/dlrs.rst:212
msgid ""
"Follow the instructions in the :ref:`kubernetes` tutorial to get set up "
"on |CL|. The Kubernetes community also has instructions for creating a "
"cluster, described in `Creating a single control-plane cluster with "
"kubeadm`_."
msgstr "按照 :ref:`kubernetes` 教程中的说明在 |CL| 上进行设置。Kubernetes 社区也提供了 `Creating a single control-plane cluster with kubeadm`_。"


#: ../../guides/stacks/dlrs/dlrs.rst:217
msgid "Kubernetes networking"
msgstr "Kubernetes 网络连接"

#: ../../guides/stacks/dlrs/dlrs.rst:219
msgid ""
"We used `flannel`_ as the network provider for these tests. If you prefer"
" a different network layer, refer to the Kubernetes network documentation"
" described in `Creating a single control-plane cluster with kubeadm`_ for"
" setup."
msgstr "在这些测试中，我们使用 `flannel`_ 作为网络提供程序。如果青睐不同的网络层，请参阅 Kubernetes `Creating a single control-plane cluster with kubeadm`_ 进行设置。"


#: ../../guides/stacks/dlrs/dlrs.rst:224
msgid "Kubectl"
msgstr "Kubectl"

#: ../../guides/stacks/dlrs/dlrs.rst:226
msgid ""
"You can use kubectl to run commands against your Kubernetes cluster.  "
"Refer to the `Overview of kubectl`_ for details on syntax and operations."
" Once you have a working cluster on Kubernetes, use the following YAML "
"script to start a pod with a simple shell script, and keep the pod open."
msgstr "您可以使用 kubectl 对您的 Kubernetes 集群运行命令。有关语法和操作的详细信息，请参阅 `Overview of kubectl`_。建立一个 Kubernetes 工作集群后，请使用下面的 YAML 脚本启动一个含有简单 shell 脚本的 Pod，并保持该 Pod 处于打开状态。"


#: ../../guides/stacks/dlrs/dlrs.rst:231
msgid "Copy this example.yaml script to your system:"
msgstr "将 example.yaml 脚本复制到您的系统中："

#: ../../guides/stacks/dlrs/dlrs.rst:248
msgid "Execute the script with kubectl:"
msgstr "使用 kubectl 执行该脚本："

#: ../../guides/stacks/dlrs/dlrs.rst:254
msgid ""
"This script opens a single pod. More robust solutions would create a "
"deployment or inject a python script or larger shell script into the "
"container."
msgstr "该脚本打开一个 Pod。更稳健的解决方案是创建部署，或者将 python 脚本或更大的 shell 脚本注入容器。"

#: ../../guides/stacks/dlrs/dlrs.rst:258
msgid "Images"
msgstr "图像"

#: ../../guides/stacks/dlrs/dlrs.rst:260
msgid ""
"You must add `launcher.py`_ to the Docker image to include the Deep "
"Learning Reference Stack and put the benchmarks repo in the correct "
"location. Note that this guide uses Kubeflow v0.4.0, and cannot guarantee"
" results if you use a different version."
msgstr "您必须将 `launcher.py`_ 添加到 Docker 映像中，以包含深度学习参考堆栈，并将基准测试存储库放在正确的位置。请注意，本教程使用 Kubeflow v0.4.0。如果使用不同的版本，则不能保证结果。"


#: ../../guides/stacks/dlrs/dlrs.rst:264
msgid "From the Docker image, run the following:"
msgstr "从 Docker 映像中，运行以下命令："

#: ../../guides/stacks/dlrs/dlrs.rst:273
msgid "Your entry point becomes: :file:`/opt/launcher.py`."
msgstr "您的入口点变成 :file:`/opt/launcher.py`。"

#: ../../guides/stacks/dlrs/dlrs.rst:275
msgid "This builds an image that can be consumed directly by TFJob from Kubeflow."
msgstr "这会构建一个可供 TFJob 从 Kubeflow 直接使用的映像。"

#: ../../guides/stacks/dlrs/dlrs.rst:278
msgid "ksonnet\\*"
msgstr "ksonnet\\*"

#: ../../guides/stacks/dlrs/dlrs.rst:280
msgid ""
"Kubeflow uses ksonnet\\* to manage deployments, so you must install it "
"before setting up Kubeflow."
msgstr "Kubeflow 使用 ksonnet\\* 来管理部署，因此您必须在设置 Kubeflow 之前安装它。"

#: ../../guides/stacks/dlrs/dlrs.rst:283
msgid ""
"ksonnet was added to the :command:`cloud-native-basic` bundle in |CL| "
"version 27550. If you are using an older |CL| version (not recommended), "
"you must manually install ksonnet as described below."
msgstr "ksonnet 已添加到 |CL| 版本 27550 中的 :command:`cloud-native-basic` 捆绑包中。如果使用的是较旧的 |CL| 版本（不推荐），您必须如下所述手动安装 ksonnet。"


#: ../../guides/stacks/dlrs/dlrs.rst:287
msgid "On |CL|, follow these steps:"
msgstr "在 |CL| 上，请按照下列步骤操作："

#: ../../guides/stacks/dlrs/dlrs.rst:298
msgid ""
"After the ksonnet installation is complete, ensure that binary `ks` is "
"accessible across the environment."
msgstr "ksonnet 安装完成后，确保可在整个环境中访问 `ks` 二进制文件。"

#: ../../guides/stacks/dlrs/dlrs.rst:302
msgid "Kubeflow"
msgstr "Kubeflow"

#: ../../guides/stacks/dlrs/dlrs.rst:304
msgid ""
"Once you have Kubernetes running on your nodes, set up `Kubeflow`_ by "
"following these instructions from the `Getting Started with Kubeflow`_ "
"guide."
msgstr "Kubernetes 在节点上运行后，请按照 `Getting Started with Kubeflow`_ 中的说明设置 `Kubeflow`_。"

#: ../../guides/stacks/dlrs/dlrs.rst:322
msgid "Next, deploy the primary package for our purposes: tf-job-operator."
msgstr "接下来，为我们的目的部署主要软件包：tf-job-operator。"

#: ../../guides/stacks/dlrs/dlrs.rst:332
msgid ""
"This creates the CustomResourceDefinition (CRD) endpoint to launch a "
"TFJob."
msgstr "这将创建 CustomResourceDefinition (CRD) 端点来启动 TFJob。"

#: ../../guides/stacks/dlrs/dlrs.rst:335
msgid "Run a TFJob"
msgstr "运行 TFJob"

#: ../../guides/stacks/dlrs/dlrs.rst:337
msgid "Get the ksonnet registries for deploying TFJobs from `dlrs-tfjob`_."
msgstr "从 `dlrs-tfjob`_ 获取用于部署 TFJobs 的 ksonnet 注册表。"

#: ../../guides/stacks/dlrs/dlrs.rst:339
msgid "Install the TFJob components as follows:"
msgstr "按照以下步骤安装 TFJob 组件："

#: ../../guides/stacks/dlrs/dlrs.rst:347
msgid "Export the image name to use for the deployment:"
msgstr "导出用于部署的映像名称："

#: ../../guides/stacks/dlrs/dlrs.rst:355
msgid "Replace <docker_name> with the image name you specified in previous steps."
msgstr "将 <docker_name> 替换为前述步骤中指定的映像名称。"

#: ../../guides/stacks/dlrs/dlrs.rst:357
msgid ""
"Generate Kubernetes manifests for the workloads and apply them using "
"these commands:"
msgstr "为工作负载生成 Kubernetes 清单，并使用以下命令应用这些清单："

#: ../../guides/stacks/dlrs/dlrs.rst:367
msgid "This replicates and deploys three test setups in your Kubernetes cluster."
msgstr "这会在 Kubernetes 集群中复制和部署三个测试设置。"

#: ../../guides/stacks/dlrs/dlrs.rst:370
msgid "Results of running this guide"
msgstr "运行本教程的结果"

#: ../../guides/stacks/dlrs/dlrs.rst:372
msgid ""
"You must parse the logs of the Kubernetes pod to retrieve performance "
"data. The pods will still exist post-completion and will be in "
"‘Completed’ state. You can get the logs from any of the pods to inspect "
"the benchmark results. More information about Kubernetes logging is "
"available in the Kubernetes `Logging Architecture`_ documentation."
msgstr "您必须解析 Kubernetes Pod 的日志来检索性能数据。完成后，Pod 仍会存在，并将处于“已完成”状态。您可以从任何一个 Pod 中获取日志来检查基准测试结果。有关 Kubernetes 日志记录的更多信息，请参见 Kubernetes `Logging Architecture`_ 文档。"

#: ../../guides/stacks/dlrs/dlrs.rst:379
msgid "Use Jupyter Notebook"
msgstr "使用 Jupyter Notebook"

#: ../../guides/stacks/dlrs/dlrs.rst:381
msgid ""
"This example uses the `PyTorch with OpenBLAS`_ container image. After it "
"is downloaded, run the Docker image with :command:`-p` to specify the "
"shared port between the container and the host. This example uses port "
"8888."
msgstr "本示例使用 `PyTorch with OpenBLAS`_ 容器映像。下载后，使用 :command:`-p` 运行 Docker 映像，以指定容器和主机之间的共享端口。本示例使用端口 8888。"


#: ../../guides/stacks/dlrs/dlrs.rst:389
msgid ""
"After you start the container, launch the Jupyter Notebook. This command "
"is executed inside the container image."
msgstr "启动容器后，启动 Jupyter Notebook。该命令在容器映像内执行。"

#: ../../guides/stacks/dlrs/dlrs.rst:396
msgid ""
"After the notebook has loaded, you will see output similar to the "
"following:"
msgstr "加载笔记本后，您将看到类似以下内容的输出："

#: ../../guides/stacks/dlrs/dlrs.rst:404
msgid ""
"From your host system, or any system that can access the host's IP "
"address, start a web browser with the following. If you are not running "
"the browser on the host system, replace :command:`127.0.0.1` with the IP "
"address of the host."
msgstr "从您的主机系统或任何可以访问主机 IP 地址的系统，使用以下命令启动 Web 浏览器。如果没有在主机系统上运行浏览器，请将 :command:`127.0.0.1` 更换为主机的 IP 地址。"


#: ../../guides/stacks/dlrs/dlrs.rst:412
msgid "Your browser displays the following:"
msgstr "您的浏览器会显示以下内容："

#: ../../guides/stacks/dlrs/dlrs.rst:418
msgid "Figure 1: :guilabel:`Jupyter Notebook`"
msgstr "图 1： :guilabel:`Jupyter Notebook`"

#: ../../guides/stacks/dlrs/dlrs.rst:421
msgid ""
"To create a new notebook, click :guilabel:`New` and select "
":guilabel:`Python 3`."
msgstr "要创建新笔记本，请点击 :guilabel:`New`，然后选择 :guilabel:`Python 3`。"

#: ../../guides/stacks/dlrs/dlrs.rst:427
msgid "Figure 2: Create a new notebook"
msgstr "图 2：创建一个新笔记本"

#: ../../guides/stacks/dlrs/dlrs.rst:429
msgid "A new, blank notebook is displayed, with a cell ready for input."
msgstr "此时将显示一个新的空白笔记本，其中有一个单元格可供输入内容。"

#: ../../guides/stacks/dlrs/dlrs.rst:436
msgid ""
"To verify that PyTorch is working, copy the following snippet into the "
"blank cell, and run the cell."
msgstr "要验证 PyTorch 是否正在工作，请将以下片段复制到空白单元格中，并运行该单元格。"

#: ../../guides/stacks/dlrs/dlrs.rst:450
msgid "When you run the cell, your output will look something like this:"
msgstr "运行单元格时，您的输出将如下所示："

#: ../../guides/stacks/dlrs/dlrs.rst:456
msgid ""
"You can continue working in this notebook, or you can download existing "
"notebooks to take advantage of the Deep Learning Reference Stack's "
"optimized deep learning frameworks. Refer to `Jupyter Notebook`_ for "
"details."
msgstr "您可以继续在此笔记本中工作，也可以下载现有笔记本来利用深度学习参考堆栈的优化深度学习框架。详情请参阅 `Jupyter Notebook`_。"

#: ../../guides/stacks/dlrs/dlrs.rst:461
msgid "Uninstallation"
msgstr "卸载"

#: ../../guides/stacks/dlrs/dlrs.rst:463
msgid ""
"To uninstall the Deep Learning Reference Stack, you can choose to stop "
"the container so that it is not using system resources, or you can stop "
"the container and delete it to free storage space."
msgstr "要卸载深度学习参考堆栈，您可以选择停止容器以使其不使用系统资源，或者可以停止容器并将其删除以释放存储空间。"

#: ../../guides/stacks/dlrs/dlrs.rst:467
msgid "To stop the container, execute the following from your host system:"
msgstr "要停止容器，请从主机系统执行以下操作："

#: ../../guides/stacks/dlrs/dlrs.rst:469
msgid "Find the container's ID"
msgstr "找到容器的 ID"

#: ../../guides/stacks/dlrs/dlrs.rst:475
msgid "This will result in output similar to the following:"
msgstr "这将产生类似于以下内容的输出："

#: ../../guides/stacks/dlrs/dlrs.rst:482
msgid ""
"You can then use the ID or container name to stop the container. This "
"example uses the name \"oss\":"
msgstr "然后，您可以使用 ID 或容器名称来停止容器。本示例使用名称 \"oss\"："

#: ../../guides/stacks/dlrs/dlrs.rst:490
msgid "Verify that the container is not running"
msgstr "验证容器未在运行"

#: ../../guides/stacks/dlrs/dlrs.rst:497
msgid "To delete the container from your system you need to know the Image ID:"
msgstr "要从系统中删除容器，您需要知道映像 ID："

#: ../../guides/stacks/dlrs/dlrs.rst:503
msgid "This command results in output similar to the following:"
msgstr "该命令会产生类似于以下内容的输出："

#: ../../guides/stacks/dlrs/dlrs.rst:511
msgid "To remove an image use the image ID:"
msgstr "要移除映像，请使用映像 ID："

#: ../../guides/stacks/dlrs/dlrs.rst:527
msgid ""
"Note that you can execute the :command:`docker rmi` command using only "
"the first few characters of the image ID, provided they are unique on the"
" system."
msgstr "请注意，您可以只使用映像 ID 的前几个字符来执行 :command:`docker rmi` 命令，前提是它们在系统上是唯一的。"

#: ../../guides/stacks/dlrs/dlrs.rst:529
msgid "Once you have removed the image, you can verify it has been deleted with:"
msgstr "移除映像后，您可以通过以下方式验证它是否已被移除："

#: ../../guides/stacks/dlrs/dlrs.rst:537
msgid "Related topics"
msgstr "相关主题"

#: ../../guides/stacks/dlrs/dlrs.rst:539
msgid "`DLRS V3.0`_ release announcement"
msgstr "`DLRS V3.0`_ 发布公告"

#: ../../guides/stacks/dlrs/dlrs.rst:540
msgid "`TensorFlow Benchmarks`_"
msgstr "`TensorFlow Benchmarks`_"

#: ../../guides/stacks/dlrs/dlrs.rst:541
msgid "`PyTorch benchmarks`_"
msgstr "`PyTorch benchmarks`_"

#: ../../guides/stacks/dlrs/dlrs.rst:542
msgid "`Kubeflow`_"
msgstr "`Kubeflow`_"

#: ../../guides/stacks/dlrs/dlrs.rst:543
msgid ":ref:`kubernetes` tutorial"
msgstr ":ref:`kubernetes` 教程"

#: ../../guides/stacks/dlrs/dlrs.rst:544
msgid "`Jupyter Notebook`_"
msgstr "`Jupyter Notebook`_"

#~ msgid "Deep Learning Reference Stack `V3.0 release announcement`_."
#~ msgstr "深度学习参考堆栈 `V3.0 release announcement`_。"

#~ msgid ""
#~ "You must parse the logs of the "
#~ "Kubernetes pod to retrieve performance "
#~ "data. The pods will still exist "
#~ "post-completion and will be in "
#~ "‘Completed’ state. You can get the "
#~ "logs from any of the pods to "
#~ "inspect the benchmark results. More "
#~ "information about `Kubernetes logging`_ is "
#~ "available from the Kubernetes community."
#~ msgstr ""
#~ "您必须解析 Kubernetes Pod 的日志来检索性能数据。完成后，Pod "
#~ "仍会存在，并将处于“已完成”状态。您可以从任何一个 Pod 中获取日志来检查基准测试结果。有关 "
#~ "`Kubernetes logging`_ 的更多信息可从 Kubernetes 社区获取。"

#~ msgid "Deep Learning Reference Stack `V3.0 release announcement`_"
#~ msgstr "深度学习参考堆栈 `V3.0 release announcement`_"


