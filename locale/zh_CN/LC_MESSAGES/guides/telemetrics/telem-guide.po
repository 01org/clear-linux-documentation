# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr "Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-22 12:54-0700\n"
"PO-Revision-Date: 2019-07-29 17:47-0008\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: zh-Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Intel® International Developer Studio Version 4.1.273.0\n"
"Language: zh-Hans\n"

#: ../../guides/telemetrics/telem-guide.rst:4
msgid "Telemetrics"
msgstr "遥测"

#: ../../guides/telemetrics/telem-guide.rst:6
msgid "This guide describes the |CL-ATTR| telemetry solution."
msgstr "This guide describes the |CL-ATTR| telemetry solution."

#: ../../guides/telemetrics/telem-guide.rst:10
msgid ""
"Telemetry in |CL| is **opt-in**. The telemetry client is **not**  active "
"and sends **no** data until you explicitly enable it."
msgstr "|CL| 中的遥测为 **opt-in**。遥测客户端 **未** 处于活动状态，且在您将其显式启用之前 **不** 发送任何数据。"

#: ../../guides/telemetrics/telem-guide.rst:15
msgid ""
"The telemetry functionality adheres to `Intel privacy policies`_ "
"regarding the collection and use of :abbr:`PII (Personally Identifiable "
"Information)` and is open source."
msgstr "The telemetry functionality adheres to `Intel privacy policies`_ regarding the collection and use of :abbr:`PII (Personally Identifiable Information)` and is open source."

#: ../../guides/telemetrics/telem-guide.rst:19
msgid ""
"No intentionally identifiable information about the user or system owner "
"is collected."
msgstr "No intentionally identifiable information about the user or system owner is collected."

#: ../../guides/telemetrics/telem-guide.rst:27
msgid "Overview"
msgstr "Overview"

#: ../../guides/telemetrics/telem-guide.rst:29
msgid ""
"Telemetrics in |CL| is a client and server solution used to collect data "
"from running |CL| systems to help quickly identify and fix bugs in the "
"OS. Both client and server are customizable, and an API is available on "
"the client side for instrumenting your code for debug and analysis."
msgstr "Telemetrics in |CL| is a client and server solution used to collect data from running |CL| systems to help quickly identify and fix bugs in the OS. Both client and server are customizable, and an API is available on the client side for instrumenting your code for debug and analysis."

#: ../../guides/telemetrics/telem-guide.rst:34
msgid ""
"Telemetry, one of the key features of |CL|, enables developers to observe"
" and proactively address issues in the OS before end users are impacted."
msgstr "借助遥测这一 |CL| 的主要功能，开发人员可在最终用户受到影响之前观察并主动解决操作系统中存在的问题。"

#: ../../guides/telemetrics/telem-guide.rst:37
msgid "Telemetrics is a combination word made from:"
msgstr "遥测 (Telemetrics) 是由以下项组成的组合词："

#: ../../guides/telemetrics/telem-guide.rst:39
msgid "Telemetry, which is sensing and reporting data."
msgstr "遥测 (Telemetry)，即感知和报告数据。"

#: ../../guides/telemetrics/telem-guide.rst:40
msgid ""
"Analytics, which is using visualization and statistical inferencing to "
"make sense of the reported data."
msgstr "分析 (Analytics)，即使用可视化和统计推理探究报告数据的意义。"

#: ../../guides/telemetrics/telem-guide.rst:43
msgid ""
"|CL| telemetry reports system-level debug/crash information using "
"specialized probes. The probes monitor system tasks such as swupd, kernel"
" oops, machine error checks, and the BIOS error report table for "
"unhandled hardware failures. Telemetry enables real-time issue reporting "
"to allow system developers to focus quickly on an issue and monitor "
"corrective actions."
msgstr "|CL| telemetry reports system-level debug/crash information using specialized probes. The probes monitor system tasks such as swupd, kernel oops, machine error checks, and the BIOS error report table for unhandled hardware failures. Telemetry enables real-time issue reporting to allow system developers to focus quickly on an issue and monitor corrective actions."

#: ../../guides/telemetrics/telem-guide.rst:49
msgid ""
"|CL| telemetry is fully customizable and can be used during software "
"development for debugging purposes. You can use the libtelemetry library "
"in your code to create custom telemetry records. You can also use the "
"telem-record-gen utility in script files for light-touch record creation "
"where instrumenting code files doesn't make sense."
msgstr "|CL| telemetry is fully customizable and can be used during software development for debugging purposes. You can use the libtelemetry library in your code to create custom telemetry records. You can also use the telem-record-gen utility in script files for light-touch record creation where instrumenting code files doesn't make sense."

#: ../../guides/telemetrics/telem-guide.rst:55
msgid ""
"The |CL| telemetrics solution is an **opt-in** choice on the client side."
" By default, the telemetry client is disabled until you choose to enable "
"it. Enabling the client is covered in this guide."
msgstr "The |CL| telemetrics solution is an **opt-in** choice on the client side. By default, the telemetry client is disabled until you choose to enable it. Enabling the client is covered in this guide."

#: ../../guides/telemetrics/telem-guide.rst:60
msgid "Architecture"
msgstr "体系架构"

#: ../../guides/telemetrics/telem-guide.rst:62
msgid ""
"|CL| telemetry has two fundamental components, which are shown in Figure "
"1:"
msgstr "|CL| telemetry has two fundamental components, which are shown in Figure 1:"

#: ../../guides/telemetrics/telem-guide.rst:64
msgid ""
"Client: generates and delivers records to the backend server via the "
"network."
msgstr "Client: generates and delivers records to the backend server via the network."

#: ../../guides/telemetrics/telem-guide.rst:66
msgid ""
"Backend: receives records sent from the client and displays the "
"cumulative content through a specialized web interface."
msgstr "后端：接收客户端发来的记录，通过专门的 Web 界面显示累积的内容。"

#: ../../guides/telemetrics/telem-guide.rst:72
msgid "Figure 1: :guilabel:`|CL| Telemetry Architecture`"
msgstr "图 1：:guilabel:`|CL| Telemetry Architecture`"

#: ../../guides/telemetrics/telem-guide.rst:74
msgid ""
"The telemetry client provides the front end of the telemetrics solution "
"and includes the following components:"
msgstr "遥测客户端提供遥测解决方案的前端，同时还包括以下组件："

#: ../../guides/telemetrics/telem-guide.rst:77
msgid ""
"telemprobd, which is a daemon that receives and prepares telemetry "
"records from probes and spools them to disk."
msgstr "telemprobd, which is a daemon that receives and prepares telemetry records from probes and spools them to disk."

#: ../../guides/telemetrics/telem-guide.rst:79
msgid ""
"telempostd, which is a daemon that manages spooled telemetry records and "
"delivers these records according to configurable settings."
msgstr "telempostd, which is a daemon that manages spooled telemetry records and delivers these records according to configurable settings."

#: ../../guides/telemetrics/telem-guide.rst:81
msgid "probes, which collect specific types of data from the operating system."
msgstr "probes, which collect specific types of data from the operating system."

#: ../../guides/telemetrics/telem-guide.rst:82
msgid ""
"libtelemetry, which is the API that telemetrics probes use to create "
"records."
msgstr "libtelemetry, which is the API that telemetrics probes use to create records."

#: ../../guides/telemetrics/telem-guide.rst:84
msgid ""
"The telemetry backend provides the server-side component of the "
"telemetrics solution and consists of:"
msgstr "遥测后端提供遥测解决方案的服务器端组件且包括："

#: ../../guides/telemetrics/telem-guide.rst:87
msgid "Nginx web server."
msgstr "Nginx Web 服务器。"

#: ../../guides/telemetrics/telem-guide.rst:88
msgid "Two Flask apps:"
msgstr "Two Flask apps:"

#: ../../guides/telemetrics/telem-guide.rst:90
msgid ""
"Collector, which is an ingestion web app for records received from client"
" probes."
msgstr "Collector, which is an ingestion web app for records received from client probes."

#: ../../guides/telemetrics/telem-guide.rst:92
msgid ""
"TelemetryUI, which is a web app that exposes different views to visualize"
" the telemetry data."
msgstr "TelemetryUI, which is a web app that exposes different views to visualize the telemetry data."

#: ../../guides/telemetrics/telem-guide.rst:94
msgid "PostgreSQL as the underlying database server."
msgstr "PostgreSQL 作为底层数据库服务器。"

#: ../../guides/telemetrics/telem-guide.rst:98
msgid ""
"The default telemetry backend server is hosted by the Intel |CL| "
"development team and is not viewable outside the Intel firewall. To "
"collect your own records, you must set up your own telemetry backend "
"server."
msgstr "默认遥测后端服务器由英特尔 |CL| 开发团队托管，且无法在英特尔防火墙之外查看。要收集个人记录，必须设置自己的遥测后端服务器。"

#: ../../guides/telemetrics/telem-guide.rst:103
msgid "How to use"
msgstr "How to use"

#: ../../guides/telemetrics/telem-guide.rst:105
msgid ""
"From a workflow perspective, the |CL| telemetrics system is "
"straightforward. On the client side, the main decisions after "
"installation and enabling telemetry involve what to do with the record "
"data generated by the probes. You can send the data to the default or a "
"custom backend server, keep the data local to the system, or both. The "
"backend server has a more complex setup, but once it's running, it is "
"simple to use and configure."
msgstr "From a workflow perspective, the |CL| telemetrics system is straightforward. On the client side, the main decisions after installation and enabling telemetry involve what to do with the record data generated by the probes. You can send the data to the default or a custom backend server, keep the data local to the system, or both. The backend server has a more complex setup, but once it's running, it is simple to use and configure."

#: ../../guides/telemetrics/telem-guide.rst:112
msgid ""
"This section describes some of the possible scenarios for configuring the"
" |CL| telemetrics system, and suggests which ones make sense according to"
" your needs."
msgstr "This section describes some of the possible scenarios for configuring the |CL| telemetrics system, and suggests which ones make sense according to your needs."

#: ../../guides/telemetrics/telem-guide.rst:117
msgid "Scenarios"
msgstr "场景"

#: ../../guides/telemetrics/telem-guide.rst:119
msgid "Enable telemetry:"
msgstr "Enable telemetry:"

#: ../../guides/telemetrics/telem-guide.rst:121
msgid ""
"Before probes can generate records, the telemetry client daemons must be "
"enabled. You can configure the client before enabling by creating a "
"custom :file:`telemetrics.conf` file that you place in the "
":file:`/etc/telemetrics` directory. If you choose to use the default "
"settings, records will be sent to the telemetrics backend server managed "
"by the |CL| development team at Intel."
msgstr "Before probes can generate records, the telemetry client daemons must be enabled. You can configure the client before enabling by creating a custom :file:`telemetrics.conf` file that you place in the :file:`/etc/telemetrics` directory. If you choose to use the default settings, records will be sent to the telemetrics backend server managed by the |CL| development team at Intel."

#: ../../guides/telemetrics/telem-guide.rst:128
msgid "Save record data locally:"
msgstr "Save record data locally:"

#: ../../guides/telemetrics/telem-guide.rst:130
msgid ""
"You can configure the telemetry client to save records locally. This is "
"convenient when you want instant feedback during a development cycle, or "
"to track system issues if you believe there is a machine specific "
"problem. The client can be set not to send records at all, or to both "
"keep the records locally and send to the backend server."
msgstr "You can configure the telemetry client to save records locally. This is convenient when you want instant feedback during a development cycle, or to track system issues if you believe there is a machine specific problem. The client can be set not to send records at all, or to both keep the records locally and send to the backend server."

#: ../../guides/telemetrics/telem-guide.rst:136
msgid "Set up a server to collect data:"
msgstr "Set up a server to collect data:"

#: ../../guides/telemetrics/telem-guide.rst:138
msgid ""
"Whether you are managing a network of |CL| systems or you don't want to "
"send records to the default telemetry server, you can set up a backend "
"server to collect your records. The backend server can be installed on "
"any Linux system and provides the same dashboard as the default server."
msgstr "Whether you are managing a network of |CL| systems or you don't want to send records to the default telemetry server, you can set up a backend server to collect your records. The backend server can be installed on any Linux system and provides the same dashboard as the default server."

#: ../../guides/telemetrics/telem-guide.rst:144
msgid "Instrument your code with the libtelemetry API:"
msgstr "Instrument your code with the libtelemetry API:"

#: ../../guides/telemetrics/telem-guide.rst:146
msgid ""
"The :command:`telemetrics` bundle includes the libtelemetry C library, "
"which exposes an API used by the telemprobd and telempostd daemons. You "
"can use these in your applications as well. The API documentation is "
"found in the :file:`telemetry.h` file in `Telemetrics client`_ "
"repository."
msgstr "The :command:`telemetrics` bundle includes the libtelemetry C library, which exposes an API used by the telemprobd and telempostd daemons. You can use these in your applications as well. The API documentation is found in the :file:`telemetry.h` file in `Telemetrics client`_ repository."

#: ../../guides/telemetrics/telem-guide.rst:153
msgid "Examples"
msgstr "示例"

#: ../../guides/telemetrics/telem-guide.rst:160
msgid "Enable or disable telemetry"
msgstr "Enable or disable telemetry"

#: ../../guides/telemetrics/telem-guide.rst:162
msgid "Enabling during installation:"
msgstr "Enabling during installation:"

#: ../../guides/telemetrics/telem-guide.rst:164
msgid ""
"During the initial installation of |CL|, you are requested to join the "
"stability enhancement program and allow |CL| to collect anonymous reports"
" to improve system stability. If you choose not to join this program, "
"then the telemetry software bundle is not added to your system. Choosing "
"to join will automatically enable telemetry on your system after "
"installation is complete."
msgstr "在初始安装 |CL| 期间，系统会要求加入稳定性增强计划，允许 |CL| 收集匿名报告，提高系统稳定性。如果选择不加入此计划，则不会将遥测软件 bundle 文件添加到系统中。选择加入此计划，则会在安装完成后自动在系统上启用遥测。"

#: ../../guides/telemetrics/telem-guide.rst:171
msgid "Enabling after install:"
msgstr "Enabling after install:"

#: ../../guides/telemetrics/telem-guide.rst:173
msgid "To start telemetry on your system, run the following command:"
msgstr "要在系统上启动遥测，请运行以下命令："

#: ../../guides/telemetrics/telem-guide.rst:179
msgid ""
"This enables and starts the :command:`telemprobd` and "
":command:`telempostd` daemons. Your system will begin to send telemetry "
"data to the server defined in the file "
":file:`/etc/telemetrics/telemetrics.conf`. If this file does not exist, "
"the :command:`telemprobd` and :command:`telempostd` daemons will use the "
"file :file:`/usr/share/defaults/telemetrics/telemetrics.conf`."
msgstr "此命令将启用并启动 :command:`telemprobd` 和 :command:`telempostd` 守护程序。系统随即开始将遥测数据发送到文件 :file:`/etc/telemetrics/telemetrics.conf` 中所定义的服务器。如果此文件不存在，:command:`telemprobd` 和 :command:`telempostd` 守护程序则会使用文件 :file:`/usr/share/defaults/telemetrics/telemetrics.conf`。"

#: ../../guides/telemetrics/telem-guide.rst:185
msgid "Disabling after install:"
msgstr "Disabling after install:"

#: ../../guides/telemetrics/telem-guide.rst:187
msgid "To disable both of the telemetry daemons, run the following command:"
msgstr "要禁用这两个遥测守护程序，请运行以下命令："

#: ../../guides/telemetrics/telem-guide.rst:193
msgid "Opt in to telemetry:"
msgstr "Opt in to telemetry:"

#: ../../guides/telemetrics/telem-guide.rst:195
msgid ""
"To opt-in to the telemetry services, simply enter the opt-in command, "
"which also starts the service:"
msgstr "To opt-in to the telemetry services, simply enter the opt-in command, which also starts the service:"

#: ../../guides/telemetrics/telem-guide.rst:202
msgid ""
"This removes the :file:`/etc/telemetrics/opt-out` file, if it exists, and"
" starts the telemetry services."
msgstr "此操作将删除 :file:`/etc/telemetrics/opt-out` 文件（如果存在）并启动遥测服务。"

#: ../../guides/telemetrics/telem-guide.rst:207
msgid ""
"To opt-in but not immediately start telemetry services, you must run the "
"command :command:`sudo telemctl stop` after the :command:`opt-in` command"
" is entered. Once you are ready to start the service, enter the command "
":command:`sudo telemctl start`."
msgstr "To opt-in but not immediately start telemetry services, you must run the command :command:`sudo telemctl stop` after the :command:`opt-in` command is entered. Once you are ready to start the service, enter the command :command:`sudo telemctl start`."

#: ../../guides/telemetrics/telem-guide.rst:212
msgid "Opt out of telemetry:"
msgstr "Opt out of telemetry:"

#: ../../guides/telemetrics/telem-guide.rst:214
msgid ""
"To stop sending telemetrics data from your system, opt out of the "
"telemetry service:"
msgstr "要停止发送来自系统的遥测数据，请选择禁用遥测服务："

#: ../../guides/telemetrics/telem-guide.rst:221
msgid ""
"This creates the file :file:`/etc/telemetrics/opt-out` and stops the "
"telemetry services."
msgstr "此操作将创建文件 :file:`/etc/telemetrics/opt-out` 并停止遥测服务。"

#: ../../guides/telemetrics/telem-guide.rst:226
msgid "Saving data locally"
msgstr "Saving data locally"

#: ../../guides/telemetrics/telem-guide.rst:228
msgid ""
"This example requires |CL| to be installed and telemetry to be enabled on"
" the system."
msgstr "This example requires |CL| to be installed and telemetry to be enabled on the system."

#: ../../guides/telemetrics/telem-guide.rst:231
msgid ""
"To change how records are managed, copy the default "
":file:`/usr/share/defaults/telemetrics/telemetrics.conf` file to "
":file:`/etc/telemetrics/telemetrics.conf` and edit it. The changes in the"
" :file:`/etc/telemetrics/telemetrics.conf` file will override the "
"defaults in the :file:`/usr/share/defaults/telemetrics/telemetrics.conf` "
"file. You may need root permissions to create and edit files in "
":file:`/etc`. For each example, and for any time you make changes to the "
"configuration file, you must restart the client daemons to pick up the "
"changes:"
msgstr "To change how records are managed, copy the default :file:`/usr/share/defaults/telemetrics/telemetrics.conf` file to :file:`/etc/telemetrics/telemetrics.conf` and edit it. The changes in the :file:`/etc/telemetrics/telemetrics.conf` file will override the defaults in the :file:`/usr/share/defaults/telemetrics/telemetrics.conf` file. You may need root permissions to create and edit files in :file:`/etc`. For each example, and for any time you make changes to the configuration file, you must restart the client daemons to pick up the changes:"

#: ../../guides/telemetrics/telem-guide.rst:245
msgid ""
"The :command:`telemctl journal` command gives you access to features and "
"options of the telemetry journal to assist with system analytics and "
"debug. :command:`telemctl journal` has a number of options to help filter"
" records. Use :command:`-h` or :command:`--help` to view usage options."
msgstr "使用 :command:`telemctl journal` 命令可以访问遥测日志的各项功能和选项，有助于进行系统分析和调试。:command:`telemctl journal` 提供众多选项来协助过滤记录。使用 :command:`-h` 或 :command:`--help` 查看使用情况选项。"

#: ../../guides/telemetrics/telem-guide.rst:251
msgid "Keep a local copy and send records to backend server:"
msgstr "Keep a local copy and send records to backend server:"

#: ../../guides/telemetrics/telem-guide.rst:253
msgid ""
"To keep a local copy of the telemetry record and also send it on to the "
"backend server, we will need to change the "
":guilabel:`record_retention_enabled` configuration key value to "
":guilabel:`true`."
msgstr "要保留遥测记录的本地副本并将其发送到后端服务器，需将 :guilabel:`record_retention_enabled` 配置键值更改为 :guilabel:`true`。"

#: ../../guides/telemetrics/telem-guide.rst:258
msgid "Keep all records  -- don't send to backend server:"
msgstr "Keep all records  -- don't send to backend server:"

#: ../../guides/telemetrics/telem-guide.rst:260
msgid ""
"To keep records on the system without sending them to a backend server, "
"set the :guilabel:`record_server_delivery_enabled` key value to "
":guilabel:`false`. Note that you will also need to ensure the "
":guilabel:`record_retention_enabled` configuration key value is set to "
":guilabel:`true` or the system will not keep local copies."
msgstr "To keep records on the system without sending them to a backend server, set the :guilabel:`record_server_delivery_enabled` key value to :guilabel:`false`. Note that you will also need to ensure the :guilabel:`record_retention_enabled` configuration key value is set to :guilabel:`true` or the system will not keep local copies."

#: ../../guides/telemetrics/telem-guide.rst:266
msgid "Keep and send records to custom server:"
msgstr "Keep and send records to custom server:"

#: ../../guides/telemetrics/telem-guide.rst:268
msgid ""
"This assumes you have set up a custom server according to the next "
"example."
msgstr "此操作假设您已根据下例设置了定制服务器。"

#: ../../guides/telemetrics/telem-guide.rst:270
msgid ""
"The server is identified by the :guilabel:`server` setting, and by "
"default records are sent to the |CL| server "
":guilabel:`server=https://clr.telemetry.intel.com/v2/collector`. To "
"change this, you can use an IP address or fully qualified domain name."
msgstr "The server is identified by the :guilabel:`server` setting, and by default records are sent to the |CL| server :guilabel:`server=https://clr.telemetry.intel.com/v2/collector`. To change this, you can use an IP address or fully qualified domain name."

#: ../../guides/telemetrics/telem-guide.rst:277
msgid "Set up a back-end server to collect telemetry records"
msgstr "Set up a back-end server to collect telemetry records"

#: ../../guides/telemetrics/telem-guide.rst:279
msgid ""
"For this example, start with a clean installation of |CL| on a new system"
" using the :ref:`bare-metal-install-server` getting started guide and:"
msgstr "在本例中，请先使用 :ref:`bare-metal-install-server` 入门指南和以下内容在新系统上完整安装 |CL|："

#: ../../guides/telemetrics/telem-guide.rst:282
msgid ""
"Join the :guilabel:`Stability Enhancement Program` to install and enable "
"the telemetrics components."
msgstr "加入 :guilabel:`Stability Enhancement Program`，安装和启用遥测组件。"

#: ../../guides/telemetrics/telem-guide.rst:285
msgid "Select the manual installation method with the following settings:"
msgstr "选择采用以下设置的手动安装方法："

#: ../../guides/telemetrics/telem-guide.rst:287
msgid "Set the hostname to :guilabel:`clr-telem-server`,"
msgstr "将主机名设为 :guilabel:`clr-telem-server`。"

#: ../../guides/telemetrics/telem-guide.rst:288
msgid ""
"Create an administrative user named :guilabel:`clear` and add this user "
"to sudoers"
msgstr "创建名为 :guilabel:`clear` 的管理用户并将其添加到 sudo 用户组"

#: ../../guides/telemetrics/telem-guide.rst:291
msgid ""
"Log in with your administrative user, from your :file:`$HOME` directory, "
"run :command:`git` to clone the :guilabel:`telemetrics-backend` "
"repository into the :file:`$HOME/telemetrics-backend` directory:"
msgstr "以管理用户身份登录，在 :file:`$HOME` 目录中运行 :command:`git`，将 :guilabel:`telemetrics-backend` 存储库克隆到 :file:`$HOME/telemetrics-backend` 目录："

#: ../../guides/telemetrics/telem-guide.rst:301
msgid ""
"You may need to set up the :envvar:`https_proxy` environment variable if "
"you have issues reaching github.com."
msgstr "如果访问 github.com 时出现问题，则最好设置 :envvar:`https_proxy` 环境变量。"

#: ../../guides/telemetrics/telem-guide.rst:304
msgid ""
"Change your current working directory to :file:`telemetrics-"
"backend/scripts`."
msgstr "将当前工作目录更改为 :file:`telemetrics-backend/scripts`。"

#: ../../guides/telemetrics/telem-guide.rst:305
msgid ""
"Before you install the telemetrics backend with the :file:`deploy.sh` "
"script file in the next step, here is an explanation of the options to be"
" specified:"
msgstr "Before you install the telemetrics backend with the :file:`deploy.sh` script file in the next step, here is an explanation of the options to be specified:"

#: ../../guides/telemetrics/telem-guide.rst:308
msgid ":command:`-a install` to perform an install"
msgstr ":command:`-a install` to perform an install"

#: ../../guides/telemetrics/telem-guide.rst:309
msgid ":command:`-d clr` to install to a |CL| distro"
msgstr ":command:`-d clr` to install to a |CL| distro"

#: ../../guides/telemetrics/telem-guide.rst:310
msgid ":command:`-H localhost` to set the domain to localhost"
msgstr ":command:`-H localhost` to set the domain to localhost"

#: ../../guides/telemetrics/telem-guide.rst:313
msgid ""
"The :file:`deploy.sh` shell script has minimal error checking and makes "
"several changes to your system. Be sure that the options you define on "
"the cmdline are correct before proceeding."
msgstr "The :file:`deploy.sh` shell script has minimal error checking and makes several changes to your system. Be sure that the options you define on the cmdline are correct before proceeding."

#: ../../guides/telemetrics/telem-guide.rst:317
msgid ""
"Run the shell script from the :file:`$HOME/telemetrics-backend/scripts` "
"directory:"
msgstr "在 :file:`$HOME/telemetrics-backend/scripts` 目录中运行此 shell 脚本："

#: ../../guides/telemetrics/telem-guide.rst:326
msgid ""
"The script starts and lists all the defined options and prompts you for "
"the :guilabel:`PostgreSQL` database password."
msgstr "The script starts and lists all the defined options and prompts you for the :guilabel:`PostgreSQL` database password."

#: ../../guides/telemetrics/telem-guide.rst:340
msgid ""
"For the :guilabel:`DB password:`, press the :kbd:`Enter` key to accept "
"the default password `postgres`."
msgstr "对于 :guilabel:`DB password:`，请按 :kbd:`Enter` 键接受默认密码 `postgres`。"

#: ../../guides/telemetrics/telem-guide.rst:345
msgid ""
"The :file:`deploy.sh` script uses :command:`sudo` to run commands and you"
" may be prompted to enter your user password at any time while the script"
" is executing. If this occurs, enter your user password to execute the "
":command:`sudo` command."
msgstr ":file:`deploy.sh` 脚本使用 :command:`sudo` 运行命令，而系统在执行脚本时则随时可能会提示您输入用户密码。如果出现此情况，请输入用户密码，执行 :command:`sudo` 命令。"

#: ../../guides/telemetrics/telem-guide.rst:351
msgid ""
"After all the server components have been installed, you are prompted to "
"enter the :guilabel:`PostgreSQL` database password to change it as "
"illustrated below:"
msgstr "After all the server components have been installed, you are prompted to enter the :guilabel:`PostgreSQL` database password to change it as illustrated below:"

#: ../../guides/telemetrics/telem-guide.rst:362
msgid ""
"Enter `postgres` for the current value of the password and then enter a "
"new password, retype it to verify the new password and the "
":guilabel:`PostgreSQL` database password will be updated."
msgstr "输入此密码的当前值 `postgres`，然后输入新密码。接着，再次输入此密码进行验证，:guilabel:`PostgreSQL` 数据库密码随即更新。"

#: ../../guides/telemetrics/telem-guide.rst:366
msgid ""
"After the installation is complete, you can use your web browser to view "
"the new server by opening the browser on the system and typing in "
"localhost in the address bar. You should see a web page similar to the "
"one shown in Figure 2 below."
msgstr "After the installation is complete, you can use your web browser to view the new server by opening the browser on the system and typing in localhost in the address bar. You should see a web page similar to the one shown in Figure 2 below."

#: ../../guides/telemetrics/telem-guide.rst:374
msgid "Figure 2: :guilabel:`Telemetry UI`"
msgstr "Figure 2: :guilabel:`Telemetry UI`"

#: ../../guides/telemetrics/telem-guide.rst:377
msgid "Create records with telem-record-gen"
msgstr "使用 telem-record-gen 创建记录"

#: ../../guides/telemetrics/telem-guide.rst:379
msgid ""
"The telemetrics bundle provides a record generator tool called `telem-"
"record-gen`. This tool can be used to create records from shell scripts "
"or the command line when writing a probe in C is not desirable. Records "
"are sent to the backend server, and can also be echoed to stdout."
msgstr "The telemetrics bundle provides a record generator tool called `telem-record-gen`. This tool can be used to create records from shell scripts or the command line when writing a probe in C is not desirable. Records are sent to the backend server, and can also be echoed to stdout."

#: ../../guides/telemetrics/telem-guide.rst:384
msgid "There are three ways to supply the payload to the record."
msgstr "有三种方法可将有效负载提供给记录。"

#: ../../guides/telemetrics/telem-guide.rst:386
msgid "On the command line, use the :command:`-p <string>` option:"
msgstr "在命令行中，使用 :command:`-p <string>` 选项："

#: ../../guides/telemetrics/telem-guide.rst:412
msgid ""
"Specify a file that contains the payload with the option :command:`-P "
"path/to/file`."
msgstr "通过 :command:`-P path/to/file` 选项指定包含此有效负载的文件。"

#: ../../guides/telemetrics/telem-guide.rst:439
msgid ""
"If the :command:`-p` or :command:`-P` options are absent, the tool reads "
"from stdin so you can use it in a :file:`heredoc` in scripts."
msgstr "如果不使用 :command:`-p` 或 :command:`-P` 选项，此工具则会从 stdin 读取，以便您在脚本的 :file:`heredoc` 中使用。"

#: ../../guides/telemetrics/telem-guide.rst:469
msgid "Set a static machine id"
msgstr "设置静态计算机 ID"

#: ../../guides/telemetrics/telem-guide.rst:471
msgid ""
"The machine id reported by the telemetry client is rotated every three "
"days for privacy reasons. If you wish to have a static machine id for "
"testing purposes, you can opt in by creating a file named `opt-in-static-"
"machine-id` in the directory  :file:`/etc/telemetrics/`."
msgstr "The machine id reported by the telemetry client is rotated every three days for privacy reasons. If you wish to have a static machine id for testing purposes, you can opt in by creating a file named `opt-in-static-machine-id` in the directory  :file:`/etc/telemetrics/`."

#: ../../guides/telemetrics/telem-guide.rst:476
msgid "Create a directory `telemetrics`."
msgstr "创建 `telemetrics` 目录。"

#: ../../guides/telemetrics/telem-guide.rst:483
msgid ""
"Create the file and replace the \"unique machine ID\" with your desired "
"static machine ID."
msgstr "创建文件并将 \"unique machine ID\" 替换为所需的静态计算机 ID。"

#: ../../guides/telemetrics/telem-guide.rst:492
msgid "The machine ID is different than the system hostname."
msgstr "The machine ID is different than the system hostname."

#: ../../guides/telemetrics/telem-guide.rst:495
msgid "Instrument your code with the libtelemetry API"
msgstr "通过 libtelemetry API 检测代码"

#: ../../guides/telemetrics/telem-guide.rst:498
msgid "Prerequisites"
msgstr "必备条件"

#: ../../guides/telemetrics/telem-guide.rst:500
msgid ""
"Confirm that the telemetrics header file is located on the system at "
":file:`usr/include/telemetry.h`  The `latest version`_ of the file can "
"also be found on github for reference, but installing the "
":command:`telemetry` bundle will install the header file that matches "
"your |CL| version."
msgstr "Confirm that the telemetrics header file is located on the system at :file:`usr/include/telemetry.h`  The `latest version`_ of the file can also be found on github for reference, but installing the :command:`telemetry` bundle will install the header file that matches your |CL| version."

#: ../../guides/telemetrics/telem-guide.rst:505
msgid "Includes and variables:"
msgstr "Includes and variables:"

#: ../../guides/telemetrics/telem-guide.rst:507
msgid "You must include the following headers in your code to use the API:"
msgstr "You must include the following headers in your code to use the API:"

#: ../../guides/telemetrics/telem-guide.rst:518
msgid ""
"Use the following code to create the variables needed to hold the data "
"for the record to be created:"
msgstr "Use the following code to create the variables needed to hold the data for the record to be created:"

#: ../../guides/telemetrics/telem-guide.rst:537
msgid "Severity:"
msgstr "严重性："

#: ../../guides/telemetrics/telem-guide.rst:533
msgid ""
"Type: uint32_t Value:  Severity field value. Accepted values are in the "
"range 1-4, with 1 being the lowest severity, and 4 being the highest "
"severity. Values provided outside of this range are clamped to 1 or 4. "
"[low, med, high, crit]"
msgstr "Type: uint32_t Value:  Severity field value. Accepted values are in the range 1-4, with 1 being the lowest severity, and 4 being the highest severity. Values provided outside of this range are clamped to 1 or 4. [low, med, high, crit]"

#: ../../guides/telemetrics/telem-guide.rst:543
msgid "Payload_version:"
msgstr "Payload_version："

#: ../../guides/telemetrics/telem-guide.rst:540
msgid ""
"Type: uint32_t Value: Payload format version. The only supported value "
"right now is 1, which indicates that the payload is a freely-formatted "
"(unstructured) string. Values greater than 1 are reserved for future use."
msgstr "Type: uint32_t Value: Payload format version. The only supported value right now is 1, which indicates that the payload is a freely-formatted (unstructured) string. Values greater than 1 are reserved for future use."

#: ../../guides/telemetrics/telem-guide.rst:552
msgid "Classification:"
msgstr "分类："

#: ../../guides/telemetrics/telem-guide.rst:546
msgid ""
"Type: char array Value: It should have the form, DOMAIN/PROBENAME/REST: "
"DOMAIN is the reverse domain to use as a namespace for the probe (e.g. "
"org.clearlinux); PROBENAME is the name of the probe, and REST is an "
"arbitrary value that the probe should use to classify the record. The "
"maximum length for the classification string is 122 bytes. Each sub-"
"category may be no longer than 40 bytes long. Two / delimiters are "
"required."
msgstr "Type: char array Value: It should have the form, DOMAIN/PROBENAME/REST: DOMAIN is the reverse domain to use as a namespace for the probe (e.g. org.clearlinux); PROBENAME is the name of the probe, and REST is an arbitrary value that the probe should use to classify the record. The maximum length for the classification string is 122 bytes. Each sub-category may be no longer than 40 bytes long. Two / delimiters are required."

#: ../../guides/telemetrics/telem-guide.rst:557
msgid "Tm_handle:"
msgstr "Tm_handle："

#: ../../guides/telemetrics/telem-guide.rst:555
msgid ""
"Type: Telem_ref struct pointer Value:  Struct pointer declared by the "
"caller, The struct is initialized if the function returns success."
msgstr "Type: Telem_ref struct pointer Value:  Struct pointer declared by the caller, The struct is initialized if the function returns success."

#: ../../guides/telemetrics/telem-guide.rst:561
msgid "Payload:"
msgstr "有效负载："

#: ../../guides/telemetrics/telem-guide.rst:560
msgid "Type: char pointer Value: The payload to set"
msgstr "Type: char pointer Value: The payload to set"

#: ../../guides/telemetrics/telem-guide.rst:563
msgid ""
"For this example, we'll set the payload to “hello” by using "
":command:`asprintf()`:"
msgstr "For this example, we'll set the payload to “hello” by using :command:`asprintf()`:"

#: ../../guides/telemetrics/telem-guide.rst:572
msgid ""
"The functions :command:`asprintf()` and :command:`vasprintf()` are "
"analogs of :command:`sprintf(3)` and :command:`vsprintf(3)`, except that "
"they allocate a string large enough to hold the output including the "
"terminating null byte ('\\0'), and return a pointer to it via the first "
"argument. This pointer should be passed to :command:`free(3)` to release "
"the allocated storage when it is no longer needed."
msgstr "The functions :command:`asprintf()` and :command:`vasprintf()` are analogs of :command:`sprintf(3)` and :command:`vsprintf(3)`, except that they allocate a string large enough to hold the output including the terminating null byte ('\\0'), and return a pointer to it via the first argument. This pointer should be passed to :command:`free(3)` to release the allocated storage when it is no longer needed."

#: ../../guides/telemetrics/telem-guide.rst:579
msgid "Create the new telemetry record:"
msgstr "Create the new telemetry record:"

#: ../../guides/telemetrics/telem-guide.rst:581
msgid ""
"The  function  :command:`tm_create_record()` initializes a telemetry "
"record and sets the severity and classification of that record, as well "
"as the payload version number. The memory needed to store the telemetry "
"record is allocated and should be freed with :command:`tm_free_record()` "
"when no longer needed."
msgstr "The  function  :command:`tm_create_record()` initializes a telemetry record and sets the severity and classification of that record, as well as the payload version number. The memory needed to store the telemetry record is allocated and should be freed with :command:`tm_free_record()` when no longer needed."

#: ../../guides/telemetrics/telem-guide.rst:594
msgid "Set the payload field of a telemetrics record:"
msgstr "Set the payload field of a telemetrics record:"

#: ../../guides/telemetrics/telem-guide.rst:596
msgid ""
"The function :command:`tm_set_payload()` attaches the provided telemetry "
"record data to the telemetry record. The current maximum payload size is "
"8192b."
msgstr "The function :command:`tm_set_payload()` attaches the provided telemetry record data to the telemetry record. The current maximum payload size is 8192b."

#: ../../guides/telemetrics/telem-guide.rst:608
msgid ""
"The :command:`free()` function frees the memory space pointed to by "
"`ptr`, which must have been returned by a previous call to "
":command:`malloc()`, :command:`calloc()`, or :command:`realloc()`. "
"Otherwise, or if :command:`free(ptr)` has already been called before, "
"undefined behavior occurs. If `ptr` is NULL, no operation is performed."
msgstr "The :command:`free()` function frees the memory space pointed to by `ptr`, which must have been returned by a previous call to :command:`malloc()`, :command:`calloc()`, or :command:`realloc()`. Otherwise, or if :command:`free(ptr)` has already been called before, undefined behavior occurs. If `ptr` is NULL, no operation is performed."

#: ../../guides/telemetrics/telem-guide.rst:614
msgid "Send a record to the telemetrics daemon:"
msgstr "Send a record to the telemetrics daemon:"

#: ../../guides/telemetrics/telem-guide.rst:616
msgid ""
"The function :command:`tm_send_record()` delivers the record to the local"
" :command:`telemprobd(1)` service. Since the telemetry record was "
"allocated by the program it should be freed with "
":command:`tm_free_record()` when it is no longer needed."
msgstr "The function :command:`tm_send_record()` delivers the record to the local :command:`telemprobd(1)` service. Since the telemetry record was allocated by the program it should be freed with :command:`tm_free_record()` when it is no longer needed."

#: ../../guides/telemetrics/telem-guide.rst:638
msgid "A full sample application with compiling flags:"
msgstr "A full sample application with compiling flags:"

#: ../../guides/telemetrics/telem-guide.rst:640
msgid "Create a new file :file:`test.c` and add the following code:"
msgstr "Create a new file :file:`test.c` and add the following code:"

#: ../../guides/telemetrics/telem-guide.rst:695
msgid "Compile with the gcc compiler, using this command:"
msgstr "使用以下命令通过 gcc 编译器进行编译："

#: ../../guides/telemetrics/telem-guide.rst:702
msgid "Test to ensure the program is working:"
msgstr "测试以确保程序正在运行："

#: ../../guides/telemetrics/telem-guide.rst:711
msgid ""
"A full example of the `heartbeat probe`_ in C is documented in the source"
" code."
msgstr "源代码中记录了以 C 语言编写的 `heartbeat probe`_ 的完整示例。"

#: ../../guides/telemetrics/telem-guide.rst:715
msgid "Reference"
msgstr "参考"

#: ../../guides/telemetrics/telem-guide.rst:722
msgid "The telemetry API"
msgstr "The telemetry API"

#: ../../guides/telemetrics/telem-guide.rst:724
msgid ""
"Installing the :command:`telemetrics` bundle includes the libtelemetry C "
"library, which exposes an API used by the telemprobd and telempostd "
"daemons. You can use these in your applications as well. The API "
"documentation is found in the :file:`telemetry.h` file in `Telemetrics "
"client`_ repository."
msgstr "Installing the :command:`telemetrics` bundle includes the libtelemetry C library, which exposes an API used by the telemprobd and telempostd daemons. You can use these in your applications as well. The API documentation is found in the :file:`telemetry.h` file in `Telemetrics client`_ repository."

#: ../../guides/telemetrics/telem-guide.rst:730
msgid "Client configuration"
msgstr "Client configuration"

#: ../../guides/telemetrics/telem-guide.rst:732
msgid ""
"The telemetry client will look for the configuration file located at "
":file:`/etc/telemetrics/telemetrics.conf` and use it if it exists. If the"
" file does not exist, the client will use the default configuration "
"located at :file:`/usr/share/defaults telemetrics/telemetrics.conf`. To "
"modify or customize the configuration, copy the file from "
":file:`/usr/share/defaults/telemetrics` to :file:`/etc/telemetrics` and "
"edit it."
msgstr "遥测客户端会查找位于 :file:`/etc/telemetrics/telemetrics.conf` 中的配置文件。如果存在，则会使用。如果此文件不存在，客户端则会使用位于 :file:`/usr/share/defaults telemetrics/telemetrics.conf` 的默认配置。要修改或定制配置，请将此文件从 :file:`/usr/share/defaults/telemetrics` 复制到 :file:`/etc/telemetrics` 并对其进行编辑。"

#: ../../guides/telemetrics/telem-guide.rst:740
msgid "Configuration options"
msgstr "Configuration options"

#: ../../guides/telemetrics/telem-guide.rst:742
msgid "The client uses the following configuration options from the config file:"
msgstr "客户端使用配置文件中的以下配置选项："

#: ../../guides/telemetrics/telem-guide.rst:744
msgid "server"
msgstr "server"

#: ../../guides/telemetrics/telem-guide.rst:745
msgid ""
"This specifies the web server to which telempostd sends the telemetry "
"records."
msgstr "This specifies the web server to which telempostd sends the telemetry records."

#: ../../guides/telemetrics/telem-guide.rst:747
msgid "socket_path"
msgstr "socket_path"

#: ../../guides/telemetrics/telem-guide.rst:747
msgid ""
"This specifies the path of the unix domain socket on which the telemprobd"
" listens for connections from the probes."
msgstr "This specifies the path of the unix domain socket on which the telemprobd listens for connections from the probes."

#: ../../guides/telemetrics/telem-guide.rst:753
msgid "spool_dir"
msgstr "spool_dir"

#: ../../guides/telemetrics/telem-guide.rst:750
msgid ""
"This configuration option is related to spooling. If the daemon is not "
"able to send the telemetry records to the backend server due to reasons "
"such as the network availability, then it stores the records in a spool "
"directory. This option specifies the path of the spool directory. This "
"directory should be owned by the same user as the daemon."
msgstr "This configuration option is related to spooling. If the daemon is not able to send the telemetry records to the backend server due to reasons such as the network availability, then it stores the records in a spool directory. This option specifies the path of the spool directory. This directory should be owned by the same user as the daemon."

#: ../../guides/telemetrics/telem-guide.rst:756
msgid "record_expiry"
msgstr "record_expiry"

#: ../../guides/telemetrics/telem-guide.rst:756
msgid ""
"This is the time, in minutes, after which the records in the spool "
"directory are deleted by the daemon."
msgstr "This is the time, in minutes, after which the records in the spool directory are deleted by the daemon."

#: ../../guides/telemetrics/telem-guide.rst:764
msgid "spool_process_time"
msgstr "spool_process_time"

#: ../../guides/telemetrics/telem-guide.rst:759
msgid ""
"This specifies the time interval, in seconds, that the daemon waits for "
"before checking the spool directory for records. The daemon picks up the "
"records in the order of modification date and tries to send the record to"
" the server. It sends a maximum of 10 records at a time. If it was able "
"to send a record successfully, it deletes the record from the spool. If "
"the daemon finds a record older than the \"record_expiry\" time, then it "
"deletes that record. The daemon looks at a maximum of 20 records in a "
"single spool run loop."
msgstr "This specifies the time interval, in seconds, that the daemon waits for before checking the spool directory for records. The daemon picks up the records in the order of modification date and tries to send the record to the server. It sends a maximum of 10 records at a time. If it was able to send a record successfully, it deletes the record from the spool. If the daemon finds a record older than the \"record_expiry\" time, then it deletes that record. The daemon looks at a maximum of 20 records in a single spool run loop."

#: ../../guides/telemetrics/telem-guide.rst:768
msgid "rate_limit_enabled"
msgstr "rate_limit_enabled"

#: ../../guides/telemetrics/telem-guide.rst:767
msgid ""
"This determines whether rate-limiting is enabled or disabled. When "
"enabled, there is a threshold on both records sent within a window of "
"time, and record bytes sent within a window a time."
msgstr "This determines whether rate-limiting is enabled or disabled. When enabled, there is a threshold on both records sent within a window of time, and record bytes sent within a window a time."

#: ../../guides/telemetrics/telem-guide.rst:772
msgid "record_burst_limit"
msgstr "record_burst_limit"

#: ../../guides/telemetrics/telem-guide.rst:771
msgid ""
"This is the maximum amount of records allowed to be passed by the daemon "
"within the record_window_length of time. If set to -1, the rate-limiting "
"for record bursts is disabled."
msgstr "This is the maximum amount of records allowed to be passed by the daemon within the record_window_length of time. If set to -1, the rate-limiting for record bursts is disabled."

#: ../../guides/telemetrics/telem-guide.rst:777
msgid "record_window_length"
msgstr "record_window_length"

#: ../../guides/telemetrics/telem-guide.rst:775
msgid ""
"The time, in minutes (0-59), that establishes the window length for the "
"record_burst_limit. For example, if record_burst_window=1000 and "
"record_window_length=15, then no more than 1000 records can be passed "
"within any given fifteen-minute window."
msgstr "The time, in minutes (0-59), that establishes the window length for the record_burst_limit. For example, if record_burst_window=1000 and record_window_length=15, then no more than 1000 records can be passed within any given fifteen-minute window."

#: ../../guides/telemetrics/telem-guide.rst:781
msgid "byte_burst_limit"
msgstr "byte_burst_limit"

#: ../../guides/telemetrics/telem-guide.rst:780
msgid ""
"This is the maximum amount of bytes that can be passed by the daemon "
"within the byte_window_length of time. If set to -1, the rate-limiting "
"for byte bursts is disabled."
msgstr "This is the maximum amount of bytes that can be passed by the daemon within the byte_window_length of time. If set to -1, the rate-limiting for byte bursts is disabled."

#: ../../guides/telemetrics/telem-guide.rst:784
msgid "byte_window_length"
msgstr "byte_window_length"

#: ../../guides/telemetrics/telem-guide.rst:784
msgid ""
"This is the time, in minutes (0-59), that establishes the window length "
"for the byte_burst_limit."
msgstr "This is the time, in minutes (0-59), that establishes the window length for the byte_burst_limit."

#: ../../guides/telemetrics/telem-guide.rst:788
msgid "rate_limit_strategy"
msgstr "rate_limit_strategy"

#: ../../guides/telemetrics/telem-guide.rst:787
msgid ""
"This is the strategy chosen once the rate-limiting threshold has been "
"reached. Currently the options are 'drop' or 'spool', with spool being "
"the default. If spool is chosen, records will be spooled and sent at a "
"later time."
msgstr "This is the strategy chosen once the rate-limiting threshold has been reached. Currently the options are 'drop' or 'spool', with spool being the default. If spool is chosen, records will be spooled and sent at a later time."

#: ../../guides/telemetrics/telem-guide.rst:793
msgid "record_retention_enabled"
msgstr "record_retention_enabled"

#: ../../guides/telemetrics/telem-guide.rst:791
msgid ""
"When this key is enabled (true) the daemon saves a copy of the payload on"
" disk from all valid records. To avoid the excessive use of disk space "
"only the latest 100 records are kept. The default value for this "
"configuration key is false."
msgstr "When this key is enabled (true) the daemon saves a copy of the payload on disk from all valid records. To avoid the excessive use of disk space only the latest 100 records are kept. The default value for this configuration key is false."

#: ../../guides/telemetrics/telem-guide.rst:807
msgid "record_server_delivery_enabled"
msgstr "record_server_delivery_enabled"

#: ../../guides/telemetrics/telem-guide.rst:796
msgid ""
"This key controls the delivery of records to server; when enabled "
"(default value), the record will be posted to the address in the "
"configuration file. If this configuration key is disabled (false), "
"records will not be spooled or posted to backend. This configuration key "
"can be used in combination with record_retention_enabled to keep copies "
"of telemetry records locally only."
msgstr "This key controls the delivery of records to server; when enabled (default value), the record will be posted to the address in the configuration file. If this configuration key is disabled (false), records will not be spooled or posted to backend. This configuration key can be used in combination with record_retention_enabled to keep copies of telemetry records locally only."

#: ../../guides/telemetrics/telem-guide.rst:804
msgid ""
"Configuration options may change as the telemetry client evolves. Please "
"use the comments in the file itself as the most accurate reference for "
"configuration."
msgstr "随着遥测客户端的发展，配置选项可能会发生变化。请使用文件自身所附带的注释，作为最准确的配置参考。"

#: ../../guides/telemetrics/telem-guide.rst:810
msgid "Client run-time options"
msgstr "Client run-time options"

#: ../../guides/telemetrics/telem-guide.rst:812
msgid ""
"The |CL| telemetry client provides an admin tool called "
":guilabel:`telemctl` for managing the telemetry services and probes. The "
"tool is located in :file:`/usr/bin`. Running it with no argument results "
"in the following:"
msgstr "|CL| 遥测客户端提供名为 :guilabel:`telemctl` 的管理工具，可用于管理遥测服务和探针。此工具位于 :file:`/usr/bin`。如果不带参数运行此工具，则会导致如下情况："

#: ../../guides/telemetrics/telem-guide.rst:833
msgid "start/stop/restart"
msgstr "start/stop/restart"

#: ../../guides/telemetrics/telem-guide.rst:835
msgid ""
"The commands to start, stop and restart the telemetry services manage all"
" required services and probes on the system. There is no need to "
"separately start/stop/restart the two client daemons telemprobd and "
"telempostd. The :command:`restart` command option will call "
":command:`telemctl stop` followed by :command:`telemctl start` ."
msgstr "The commands to start, stop and restart the telemetry services manage all required services and probes on the system. There is no need to separately start/stop/restart the two client daemons telemprobd and telempostd. The :command:`restart` command option will call :command:`telemctl stop` followed by :command:`telemctl start` ."

#: ../../guides/telemetrics/telem-guide.rst:842
msgid "is-active"
msgstr "is-active"

#: ../../guides/telemetrics/telem-guide.rst:844
msgid ""
"The :command:`is-active` option reports whether the two client daemons "
"are active. This is useful to verify that the :command:`opt-in` and "
":command:`opt-out` options have taken effect, or to ensure that telemetry"
" is functioning on the system. Note that both daemons are verified."
msgstr "The :command:`is-active` option reports whether the two client daemons are active. This is useful to verify that the :command:`opt-in` and :command:`opt-out` options have taken effect, or to ensure that telemetry is functioning on the system. Note that both daemons are verified."

#~ msgid ""
#~ "Telemetrics in |CL-ATTR| is a "
#~ "client and server solution used to "
#~ "collect data from running |CL| systems"
#~ " to help quickly identify and fix "
#~ "bugs in the OS.  Both client and"
#~ " server are customizable, and an API"
#~ " is available on the client side "
#~ "for instrumenting your code for debug"
#~ " and analysis."
#~ msgstr ""

#~ msgid ""
#~ "The telemetry functionality adheres to "
#~ "`Intel privacy policies`_ regarding the "
#~ "collection and use of :abbr:`PII "
#~ "(Personally Identifiable Information)` and is"
#~ " open source. Specifically, no "
#~ "intentionally identifiable information about "
#~ "the user or system owner is "
#~ "collected."
#~ msgstr ""

#~ msgid "Description"
#~ msgstr ""

#~ msgid ""
#~ "|CL| telemetry reports system-level "
#~ "debug/crash information using specialized "
#~ "probes. The probes monitor system tasks"
#~ " such as swupd, kernel oops, machine"
#~ " error checks, and the BIOS error "
#~ "report table for unhandled hardware "
#~ "failures. Telemetry enables real-time "
#~ "issue reporting to allow system "
#~ "developers to quickly focus on an "
#~ "issue and monitor corrective actions."
#~ msgstr ""

#~ msgid ""
#~ "|CL| telemetry is fully customizable and"
#~ " can be used during software "
#~ "development for debugging purposes. You "
#~ "can use the  libtelemetry library in "
#~ "your code to create custom telemetry "
#~ "records. You can also use the "
#~ "telem-record-gen utility in script "
#~ "files for light touch record creation"
#~ " where instrumenting code files doesn't "
#~ "make sense."
#~ msgstr ""

#~ msgid ""
#~ "The |CL| telemetrics solution is an "
#~ "**opt-in** choice on the client "
#~ "side.  By default, the telemetry client"
#~ " is disabled until you choose to "
#~ "enable it. Enabling the client is "
#~ "covered in this guide."
#~ msgstr ""

#~ msgid ""
#~ "|CL| telemetry has two fundamental "
#~ "components, which are shown in figure"
#~ " 1:"
#~ msgstr ""

#~ msgid ""
#~ "Client: generates and delivers records "
#~ "to the backend server via the "
#~ "network"
#~ msgstr ""

#~ msgid ""
#~ "telemprobd, a daemon that receives and"
#~ " prepares telemetry records from probes "
#~ "and spools them to disk."
#~ msgstr ""

#~ msgid ""
#~ "telempostd, a daemon that manages "
#~ "spooled telemetry records and delivers "
#~ "these records according to configurable "
#~ "settings."
#~ msgstr ""

#~ msgid "probes, that collect specific types of data from the operating system."
#~ msgstr ""

#~ msgid "libtelemetry, the API that telemetrics probes use to create records."
#~ msgstr ""

#~ msgid ""
#~ "Two Flask apps: * Collector, an "
#~ "ingestion web app for records received"
#~ " from client probes. * TelemetryUI, a"
#~ " web app that exposes different views"
#~ " to visualize the telemetry data."
#~ msgstr ""

#~ msgid "How To Use"
#~ msgstr ""

#~ msgid ""
#~ "From a workflow perspective, the |CL|"
#~ " telemetrics system is straightforward.  On"
#~ " the client side, the main decisions"
#~ " after installation and enabling telemetry"
#~ " concern what to do with the "
#~ "record data generated by the probes."
#~ "  You can send the data to the"
#~ " default or a custom backend server,"
#~ " keep the data local to the "
#~ "system, or both. The backend server "
#~ "has a more complex setup, but once"
#~ " it's running, it is simple to "
#~ "use and configure."
#~ msgstr ""

#~ msgid ""
#~ "This section walks through some of "
#~ "the possible scenarios for configuring "
#~ "the |CL| telemetrics system, and "
#~ "suggests which make sense according to"
#~ " your needs."
#~ msgstr ""

#~ msgid "Enable telemetry"
#~ msgstr ""

#~ msgid ""
#~ "Before probes can generate records, the"
#~ " telemetry client daemons must be "
#~ "enabled. You can configure the client"
#~ " before enabling by creating a custom"
#~ "  :file:`telemetrics.conf` file that you "
#~ "place in the :file:`/etc/telemetrics` "
#~ "directory. If you choose to use "
#~ "the default settings, records will be"
#~ " sent to the telemetrics backend "
#~ "server managed by the |CL| development"
#~ " team at Intel."
#~ msgstr ""

#~ msgid "Save record data locally"
#~ msgstr ""

#~ msgid ""
#~ "You can configure the telemetry client"
#~ " to save records locally.  This is"
#~ " convenient when you want instant "
#~ "feedback during a development cycle, or"
#~ " to track system issues if you "
#~ "believe there is a machine specific "
#~ "problem. The client can be set to"
#~ " not send records at all, or to"
#~ " both keep the records locally and"
#~ " send to the backend server."
#~ msgstr ""

#~ msgid "Set up a server to collect data"
#~ msgstr ""

#~ msgid ""
#~ "Whether you are managing a network "
#~ "of |CL| systems or you don't want"
#~ " to send records to the default "
#~ "telemetry server, you can set up a"
#~ " backend server to collect your "
#~ "records. The backend server can be "
#~ "installed on any Linux system and "
#~ "will give you the same dashboard "
#~ "as the default server."
#~ msgstr ""

#~ msgid ""
#~ "The ``telemetrics`` bundle includes the "
#~ "libtelemetry C library, which exposes an"
#~ " API used by the telemprobd and "
#~ "telempostd daemons. You can use these"
#~ " in your applications as well. The"
#~ " API documentation is found in the"
#~ " :file:`telemetry.h` file in `Telemetrics "
#~ "client`_ repository."
#~ msgstr ""

#~ msgid "Enable or Disable Telemetry"
#~ msgstr ""

#~ msgid "Enabling during installation"
#~ msgstr ""

#~ msgid ""
#~ "During the initial installation of |CL|,"
#~ " you are requested to join the "
#~ "stability enhancement program and allow "
#~ "|CL| to collect anonymous reports to "
#~ "improve system stability. If you choose"
#~ " not to join this program, then "
#~ "the telemetry software bundle is not "
#~ "added to your system. Choosing to "
#~ "join will automatically enable telemetry "
#~ "on your system after installation is "
#~ "complete."
#~ msgstr ""

#~ msgid "Enabling after install"
#~ msgstr ""

#~ msgid "Disabling after install"
#~ msgstr ""

#~ msgid "Opt in to telemetry"
#~ msgstr ""

#~ msgid ""
#~ "To opt-in to the telemetry "
#~ "services, simply enter the opt-in "
#~ "command and start the service:"
#~ msgstr ""

#~ msgid ""
#~ "To opt-in but not immediately "
#~ "start telemetry services, you will need"
#~ " to run the command :command:`sudo "
#~ "telemctl stop` after the :command:`opt-"
#~ "in` command is entered. Once you "
#~ "are ready to start the service, "
#~ "enter the command :command:`sudo telemctl "
#~ "start`."
#~ msgstr ""

#~ msgid "Opt out of telemetry"
#~ msgstr ""

#~ msgid "Saving Data Locally"
#~ msgstr ""

#~ msgid ""
#~ "This example requires |CL| to be "
#~ "installed, and telemetry to be enabled"
#~ " on the system."
#~ msgstr ""

#~ msgid ""
#~ "To change how records are managed, "
#~ "we will be copying the default "
#~ ":file:`/usr/share/defaults/telemetrics/telemetrics.conf` file"
#~ " to :file:`/etc/telemetrics/telemetrics.conf` and "
#~ "editing it.  The changes in the "
#~ ":file:`/etc/telemetrics/telemetrics.conf` file will "
#~ "override the defaults in the "
#~ ":file:`/usr/share/defaults/telemetrics/telemetrics.conf` file."
#~ " You may need ``root`` permissions to"
#~ " create and edit files in "
#~ ":file:`/etc`. For each example, and for"
#~ " any time you make changes to "
#~ "the configuration file, you will need"
#~ " to restart the client daemons to "
#~ "pick up the changes:"
#~ msgstr ""

#~ msgid "Keep local copy and send records to backend server"
#~ msgstr ""

#~ msgid "Keep all records  -- don't send to backend server"
#~ msgstr ""

#~ msgid ""
#~ "To keep records on the system "
#~ "without sending them to a backend "
#~ "server, set the "
#~ ":guilabel:`record_server_delivery_enabled` key value "
#~ "to :guilabel:`false`.  Note that you "
#~ "will also need to ensure the "
#~ ":guilabel:`record_retention_enabled` configuration key "
#~ "value is set to :guilabel:`true` or "
#~ "the system will not keep local "
#~ "copies."
#~ msgstr ""

#~ msgid "Keep and send records to custom server"
#~ msgstr ""

#~ msgid ""
#~ "The server is identified by the "
#~ ":guilabel:`server` setting, and by default "
#~ "records will be sent to the |CL|"
#~ " server "
#~ ":guilabel:`server=https://clr.telemetry.intel.com/v2/collector`.  "
#~ "To change this, you can use an "
#~ "IP address or fully qualified domain "
#~ "name."
#~ msgstr ""

#~ msgid "Set up a backend server to collect telemetry records"
#~ msgstr ""

#~ msgid ""
#~ "We will install the telemetrics backend"
#~ " with the :file:`deploy.sh` script file."
#~ "  We will set the following options"
#~ " and leave the remainder as default:"
#~ msgstr ""

#~ msgid "*-a install* to perform an install"
#~ msgstr ""

#~ msgid "*-d clr* to install to a |CL| distro"
#~ msgstr ""

#~ msgid "*-H localhost* to set the domain to localhost"
#~ msgstr ""

#~ msgid ""
#~ "The :file:`deploy.sh` shell script has "
#~ "minimal error checking and makes several"
#~ " changes to your system.  Be sure "
#~ "that the options you define on the"
#~ " cmdline are correct before proceeding."
#~ msgstr ""

#~ msgid ""
#~ "The script will start and list all"
#~ " the defined options and prompt you"
#~ " for the :guilabel:`PostgreSQL` database "
#~ "password"
#~ msgstr ""

#~ msgid ""
#~ "Once all the server components have "
#~ "been installed you are prompted to "
#~ "enter the :guilabel:`PostgreSQL` database "
#~ "password to change it as illustrated "
#~ "below:"
#~ msgstr ""

#~ msgid ""
#~ "Once the installation is complete you"
#~ " can use your web browser to "
#~ "view the new server by opening the"
#~ " browser on the system and typing "
#~ "in ``localhost`` in the address bar."
#~ "  You should see a web page "
#~ "similar to the one shown in figure"
#~ " 1:"
#~ msgstr ""

#~ msgid "Figure 1: :guilabel:`Telemetry UI`"
#~ msgstr ""

#~ msgid ""
#~ "The telemetrics bundle provides a record"
#~ " generator tool called ``telem-record-"
#~ "gen``. This tool can be used to"
#~ " create records from shell scripts or"
#~ " the command line when writing a "
#~ "probe in C is not desirable. "
#~ "Records are sent to the backend "
#~ "server, and can also be echoed to"
#~ " stdout."
#~ msgstr ""

#~ msgid ""
#~ "The machine id reported by the "
#~ "telemetry client is rotated every three"
#~ " days for privacy reasons. If you "
#~ "wish to have a static machine id"
#~ " for testing purposes, you can opt"
#~ " in by creating a file named "
#~ "\"opt-in-static-machine-id\" in the"
#~ " directory  :file:`/etc/telemetrics/`."
#~ msgstr ""

#~ msgid "The `machine id` is different than the system hostname."
#~ msgstr ""

#~ msgid ""
#~ "Confirm that the telemetrics header file"
#~ " is located on the system at "
#~ ":file:`usr/include/telemetry.h`  The `latest "
#~ "version`_ of the file can also be"
#~ " found on github for reference, but"
#~ " installing the `telemetry` bundle will "
#~ "install the header file that matches "
#~ "your |CL| version."
#~ msgstr ""

#~ msgid "Includes and variables"
#~ msgstr ""

#~ msgid ""
#~ "You will need to include the "
#~ "following headers in your code to "
#~ "use the API:"
#~ msgstr ""

#~ msgid ""
#~ "Use the following code to create "
#~ "the variables we need to hold the"
#~ " data for the record we will be"
#~ " creating:"
#~ msgstr ""

#~ msgid "Type: uint32_t"
#~ msgstr ""

#~ msgid ""
#~ "Value:  Severity field value. Accepted "
#~ "values are in the range 1-4, with"
#~ " 1 being the lowest severity, and "
#~ "4 being the highest severity. Values "
#~ "provided outside of this range are "
#~ "clamped to 1 or 4. [low, med, "
#~ "high, crit]"
#~ msgstr ""

#~ msgid ""
#~ "Value: Payload format version. The only"
#~ " supported value right now is 1, "
#~ "which indicates that the payload is "
#~ "a freely-formatted (unstructured) string. "
#~ "Values greater than 1 are reserved "
#~ "for future use."
#~ msgstr ""

#~ msgid "Type: char array"
#~ msgstr ""

#~ msgid ""
#~ "Value: It should have the form, "
#~ "DOMAIN/PROBENAME/REST: DOMAIN is the reverse"
#~ " domain to use as a namespace "
#~ "for the probe (e.g. org.clearlinux); "
#~ "PROBENAME is the name of the "
#~ "probe; and REST is an arbitrary "
#~ "value that the probe should use to"
#~ " classify the record. The maximum "
#~ "length for the classification string is"
#~ " 122 bytes. Each sub-category may "
#~ "be no longer than 40 bytes long."
#~ " Two / delimiters are required."
#~ msgstr ""

#~ msgid "Type: Telem_ref struct pointer"
#~ msgstr ""

#~ msgid ""
#~ "Value:  Struct pointer declared by the"
#~ " caller, The struct is initialized if"
#~ " the function returns success."
#~ msgstr ""

#~ msgid "Type: char pointer"
#~ msgstr ""

#~ msgid "Value: The payload to set"
#~ msgstr ""

#~ msgid ""
#~ "For this example, we'll set the "
#~ "payload to “hello” by using "
#~ "``asprintf()``"
#~ msgstr ""

#~ msgid ""
#~ "The functions ``asprintf()`` and "
#~ "``vasprintf()`` are analogs of ``sprintf(3)``"
#~ " and    ``vsprintf(3)``, except that they"
#~ " allocate a string large enough to"
#~ " hold the output including the "
#~ "terminating null byte ('\\0'), and "
#~ "return a pointer to it via the "
#~ "first argument.  This pointer should be"
#~ " passed to ``free(3)`` to release the"
#~ " allocated storage when it is no "
#~ "longer needed."
#~ msgstr ""

#~ msgid "Create the new telemetry record"
#~ msgstr ""

#~ msgid ""
#~ "The  function  ``tm_create_record()`` initializes"
#~ " a telemetry record and sets the "
#~ "severity and classification of that "
#~ "record, as well as the payload "
#~ "version number. The memory needed to "
#~ "store the telemetry record is allocated"
#~ " and should be freed with "
#~ "``tm_free_record()`` when no longer needed."
#~ msgstr ""

#~ msgid "Set the payload field of a telemetrics record"
#~ msgstr ""

#~ msgid ""
#~ "The function ``tm_set_payload()`` attaches the"
#~ " provided telemetry record data to "
#~ "the telemetry record. The current "
#~ "maximum payload size is 8192b."
#~ msgstr ""

#~ msgid ""
#~ "The ``free()`` function frees the memory"
#~ " space pointed to by ptr, which "
#~ "must have been returned by a "
#~ "previous call to ``malloc()``, ``calloc()``,"
#~ " or ``realloc()``.  Otherwise, or if "
#~ "``free(ptr)`` has already been called "
#~ "before, undefined behavior occurs.  If "
#~ "ptr is NULL, no operation is "
#~ "performed."
#~ msgstr ""

#~ msgid "Send a record to the telemetrics daemon"
#~ msgstr ""

#~ msgid ""
#~ "The function ``tm_send_record()`` delivers the"
#~ " record to the local ``telemprobd(1)`` "
#~ "service. Since the telemetry record was"
#~ " allocated by the program it should"
#~ " be freed with ``tm_free_record()`` when"
#~ " it is no longer needed."
#~ msgstr ""

#~ msgid "Full sample application with compiling flags"
#~ msgstr ""

#~ msgid "Create a new file test.c  add the following code."
#~ msgstr ""

#~ msgid "The Telemetry API"
#~ msgstr ""

#~ msgid ""
#~ "Installing the ``telemetrics`` bundle includes"
#~ " the libtelemetry C library, which "
#~ "exposes an API used by the "
#~ "telemprobd and telempostd daemons. You "
#~ "can use these in your applications "
#~ "as well. The API documentation is "
#~ "found in the :file:`telemetry.h` file in"
#~ " `Telemetrics client`_ repository."
#~ msgstr ""

#~ msgid "Client Configuration"
#~ msgstr ""

#~ msgid "Configuration Options"
#~ msgstr ""

#~ msgid ""
#~ "**server**: This specifies the web "
#~ "server to which telempostd sends the "
#~ "telemetry records."
#~ msgstr ""

#~ msgid ""
#~ "**socket_path**: This specifies the path "
#~ "of the unix domain socket that the"
#~ " telemprobd listens on for connections "
#~ "from the probes."
#~ msgstr ""

#~ msgid ""
#~ "**spool_dir**: This configuration option is"
#~ " related to spooling. If the daemon"
#~ " is not able to send the "
#~ "telemetry records to the backend server"
#~ " due to reasons such as the "
#~ "network availability, then it stores the"
#~ " records in a spool directory. This"
#~ " option specifies that path of the"
#~ " spool directory. This directory should "
#~ "be owned by the same user as "
#~ "the daemon."
#~ msgstr ""

#~ msgid ""
#~ "**record_expiry**: This is the time in"
#~ " minutes after which the records in"
#~ " the spool directory are deleted by"
#~ " the daemon."
#~ msgstr ""

#~ msgid ""
#~ "**spool_process_time**: This specifies the "
#~ "time interval in seconds that the "
#~ "daemon waits for before checking the "
#~ "spool directory for records. The daemon"
#~ " picks up the records in the "
#~ "order of modification date and tries "
#~ "to send the record to the server."
#~ " It sends a maximum of 10 "
#~ "records at a time. If it was "
#~ "able to send a record successfully, "
#~ "it deletes the record from the "
#~ "spool. If the daemon finds a "
#~ "record older than the \"record_expiry\" "
#~ "time, then it deletes that record. "
#~ "The daemon looks at a maximum of"
#~ " 20 records in a single spool "
#~ "run loop."
#~ msgstr ""

#~ msgid ""
#~ "**rate_limit_enabled**: This determines whether "
#~ "rate-limiting is enabled or disabled."
#~ " When enabled, there is a threshold"
#~ " on both records sent within a "
#~ "window of time, and record bytes "
#~ "sent within a window a time."
#~ msgstr ""

#~ msgid ""
#~ "**record_burst_limit**: This is the maximum"
#~ " amount of records allowed to be "
#~ "passed by the daemon within the "
#~ "record_window_length of time. If set to"
#~ " -1, the rate-limiting for record "
#~ "bursts is disabled."
#~ msgstr ""

#~ msgid ""
#~ "**record_window_length**: The time in minutes"
#~ " (0-59) that establishes the window "
#~ "length for the record_burst_limit. EX: "
#~ "if record_burst_window=1000 and "
#~ "record_window_length=15, then no more than "
#~ "1000 records can be passed within "
#~ "any given fifteen minute window."
#~ msgstr ""

#~ msgid ""
#~ "**byte_burst_limit**: This is the maximum "
#~ "amount of bytes that can be passed"
#~ " by the daemon within the "
#~ "byte_window_length of time. If set to"
#~ " -1, the rate-limiting for byte "
#~ "bursts is disabled."
#~ msgstr ""

#~ msgid ""
#~ "**byte_window_length**: This is the time, "
#~ "in minutes (0-59), that establishes the"
#~ " window length for the byte_burst_limit."
#~ msgstr ""

#~ msgid ""
#~ "**rate_limit_strategy**: This is the strategy"
#~ " chosen once the rate-limiting "
#~ "threshold has been reached. Currently "
#~ "the options are 'drop' or 'spool', "
#~ "with spool being the default. If "
#~ "spool is chosen, records will be "
#~ "spooled and sent at a later time."
#~ msgstr ""

#~ msgid ""
#~ "**record_retention_enabled**: When this key is"
#~ " enabled (true) the daemon saves a"
#~ " copy of the payload on disk "
#~ "from all valid records. To avoid "
#~ "the excessive use of disk space "
#~ "only the latest 100 records are "
#~ "kept. The default value for this "
#~ "configuration key is false."
#~ msgstr ""

#~ msgid ""
#~ "**record_server_delivery_enabled**: This key "
#~ "controls the delivery of records to "
#~ "server; when enabled (default value), "
#~ "the record will be posted to the"
#~ " address in the configuration file. "
#~ "If this configuration key is disabled"
#~ " (false), records will not be spooled"
#~ " or posted to backend. This "
#~ "configuration key can be used in "
#~ "combination with record_retention_enabled to "
#~ "keep copies of telemetry records locally"
#~ " only."
#~ msgstr ""

#~ msgid "Client Run-time Options"
#~ msgstr ""

#~ msgid ""
#~ "The commands to start, stop and "
#~ "restart the telemetry services manage "
#~ "all required services and probes on "
#~ "the system.  There is no need to"
#~ " separately start/stop/restart the two "
#~ "client daemons **telemprobd** and "
#~ "**telempostd**. The **restart** command option"
#~ " will call **telemctl stop** followed "
#~ "by **telemctl start** ."
#~ msgstr ""

#~ msgid ""
#~ "The `is-active` option reports whether"
#~ " the two client daemons are active."
#~ " This is useful to verify that "
#~ "the **opt-in** and **opt-out** "
#~ "options have taken effect, or to "
#~ "ensure that telemetry is functioning on"
#~ " the system. Note that both daemons"
#~ " are verified."
#~ msgstr ""


