# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux* Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-10 15:46-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/guides/kernel/kernel-development.rst:4
msgid "Kernel development"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:6
msgid "This document shows how to obtain and compile a Linux* kernel source using |CL-ATTR| development tooling."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:9
msgid "The `kernels available`_  in |CL| aim to be performant and practical. In some cases, it may be necessary to modify the kernel to suit your specific needs or test new kernel code as a developer."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:18
msgid "Source RPM files (SRPM) are also available for all |CL| kernels, and can be used for development instead. Select this link to view the latest `source RPM files`_."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:22
msgid "Request changes be included with the |CL| kernel"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:24
msgid "If the kernel modification you need is already open source and likely to be useful to others, consider submitting a request to include it in the |CL| kernels.If your change request is accepted, you do not need to maintain your own modified kernel."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:28
msgid "Make enhancement requests to the |CL| `distribution on GitHub`_ ."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:31
msgid "Set up kernel development environment"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:33
msgid "In some cases, it may be necessary to modify the kernel to suit your specific needs or to test new kernel code."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:36
msgid "You can build and install a custom kernel; however you must:"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:38
msgid "Disable Secure Boot"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:39
msgid "Maintain any updates to the kernel going forward"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:41
msgid "To create a custom kernel, start with the |CL| development environment. Then make changes to the kernel, build it, and install it."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:46
msgid "Install the |CL| development tooling framework"
msgstr ""

#: ../../../source/tooling/autospec.rst:3
msgid "Setup of the workspace and tooling used for building source in |CL| is mostly automated for you with a setup script. It uses tools from the :command:`os-clr-on-clr` bundle."
msgstr ""

#: ../../../source/tooling/autospec.rst:7
msgid "The setup script creates a workspace in the :file:`clearlinux` folder, with the subfolders :file:`Makefile`, :file:`packages`, and :file:`projects`. The :file:`projects` folder contains the main tools used for making packages in |CL| :file:`autospec` and :file:`common`."
msgstr ""

#: ../../../source/tooling/autospec.rst:12
msgid "Follow these steps to setup the workspace and tooling for building source:"
msgstr ""

#: ../../../source/tooling/autospec.rst:14
msgid "Install the :command:`os-clr-on-clr` bundle:"
msgstr ""

#: ../../../source/tooling/autospec.rst:20
msgid "Download the :file:`user-setup.sh` script:"
msgstr ""

#: ../../../source/tooling/autospec.rst:26
msgid "Make :file:`user-setup.sh` executable:"
msgstr ""

#: ../../../source/tooling/autospec.rst:32
msgid "Run the script as an unprivileged user:"
msgstr ""

#: ../../../source/tooling/autospec.rst:38
msgid "After the script completes, log out and log in again to complete the setup process."
msgstr ""

#: ../../../source/tooling/autospec.rst:41
msgid "Set your Git user email and username for the repos on your system:"
msgstr ""

#: ../../../source/tooling/autospec.rst:48
msgid "This global setting is used by |CL| tools that make use of Git."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:53
msgid "Clone the kernel package"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:54
msgid "Clone the existing kernel package repository from |CL| as a starting point."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:56
msgid "Clone the Linux kernel package from |CL|. Using the :command:`make clone_<PACKAGENAME>` command in the :file:`clearlinux/` directory clones the package from the `clearlinux-pkgs GitHub`_."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:66
msgid "Navigate into the cloned package directory."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:73
msgid "The \"linux\" package is the kernel that comes with |CL| in the `kernel-native` bundle. Alternatively, you can use a different kernel variant as the base for modification. For a list of kernel package names which you can clone instead, see the `clearlinux-pkgs GitHub`_."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:80
msgid "The latest version of the |CL| kernel package is pulled as a starting point. An older version can pulled by switching to different git tag by using :command:`git checkout tag/<TAG_NAME>`."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:84
msgid "Change the kernel version"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:86
msgid "|CL| tends to use the latest kernel available from `kernel.org`_, the Linux upstream. The kernel version that will be built can be changed in the RPM SPEC file. While most packages in Clear Linux are typically packaged using :ref:`autospec-about`, the kernel is not. This means control files provided by autospec are not available and changes must be made manually."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:92
#: ../../../source/guides/kernel/kernel-development.rst:285
msgid "Open the Linux kernel package RPM SPEC file in an editor."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:98
msgid "Modify the Version, Release, and Source0 URL entries at the top of the file to change the version of Linux kernel that will be compiled."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:101
msgid "A list of current and available kernel release can be found on `kernel.org`_."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:120
msgid "Consider changing the Name from *linux* in the RPM spec file to easily identify a modified kernel."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:122
msgid "Consider changing the ktarget from *native* in the RPM spec file to easily identify a modified kernel."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:124
msgid "Commit and save the changes to the file."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:127
msgid "Pull a copy of the Linux kernel source code"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:129
msgid "Obtain a local copy of the source code to make modifications against."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:131
msgid "Run make sources to pull the kernel source code specified in the RPM SPEC file. In the example, it downloads the :file:`linux-4.20.8.tar.xz` file."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:139
msgid "Extract the kernel source code archive. This will create a working copy of the Linux source that you can modify."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:146
msgid "Navigate to the extracted directory. In this example, it has been extracted into a :file:`linux-4.20.8` directory."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:155
msgid "Customize the Linux kernel source"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:157
msgid "After the kernel sources have been obtained, customizations to the kernel configuration or source code can be made for inclusion with the kernel build. These customizations are optional."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:162
msgid "Modify kernel configuration"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:164
msgid "The kernel source has many configuration options available to pick support for different hardware and software features."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:166
msgid "These configuration values must be provided in the :file:`.config` file at compile time. You will need to make modifications to the :file:`.config` file, and include it in the kernel package."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:171
#: ../../../source/guides/kernel/kernel-development.rst:228
msgid "Make sure you have followed the steps to `Pull a copy of the Linux kernel source code`_ and are in the kernel source working directory."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:176
msgid "If you have an existing :file:`.config` file from an old kernel, copy it into the working directory as :file:`.config` for comparison. Otherwise, use the |CL| kernel configuration file as template"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:185
msgid "Make any desired changes to the :file:`.config` using a kernel configuration tool. Below are some popular options:"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:188
msgid ":command:`$EDITOR .config` - the .config file can be directly edited for simple changes with names that are already known."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:191
msgid ":command:`make config` - a text-based tool that asks questions one-by-one to decide configuration options."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:194
msgid ":command:`make menuconfig` - a terminal user interface that provides menus to decide configuration options."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:197
msgid ":command:`make xconfig` - a graphical user interface that provides tree views to decide configuration options."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:201
msgid "More configuration tools can be found by looking at the make help: :command:`make help | grep config`"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:204
msgid "Commit and save the changes to the :file:`.config` file."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:206
msgid "Copy the :file:`.config` file from the kernel source directory into the kernel package directory as :file:`config` for inclusion in the build."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:214
msgid "Modify kernel source code"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:216
msgid "Changes to kernel code are applied with patch files. Patch files are formatted git commits that can be applied to the main source code."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:219
msgid "You will need to obtain a copy of the source code, make modifications, generate patch file(s), and add them to the RPM SPEC file for inclusion during the kernel build."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:223
msgid "If you have a large number of patches or a more complex workflow, consider using a patch management tool in addition to Git such as `Quilt`_."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:233
msgid "Initialize the kernel source directory as a new git repo and create a commit with all the existing source files to begin tracking changes."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:243
msgid "Apply patches provided by the |CL| kernel package to the kernel source in the working directory."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:251
msgid "Make any of your desired code changes to the Linux source code files."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:254
msgid "Track and commit your changes to the local git repo."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:262
msgid "Generate a patch file based on your git commits. <n> represents the number of local commits to create patch file. See the `git-format-patch Documentation`_ for detailed information on using :command:`git format-patch`"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:271
msgid "Copy the patch files from the patches directory in the linux source tree to the RPM build directory."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:279
msgid "Navigate back to the RPM build directory."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:291
msgid "Locate the section of the SPEC file that contains existing patch variable definitions and append your patch file name. Ensure the patch number does not collide with an existing patch. In this example, the patch file is called :file:`2001-my-patch-for-driver-A.patch`"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:314
msgid "Locate the section of the SPEC file further down that contains patch application and append your patch file number used in the step above. In this example, patch2001 is added."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:333
msgid "Commit and save the changes to the RPM SPEC file."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:336
msgid "Modify kernel boot parameters"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:337
msgid "The kernel boot options are passed from the bootloader to the kernel with command-line parameters."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:340
msgid "While temporary changes can be made to kernel parameters on a running system or on a during boot, you can also modify the default parameters that are persistent and distributed with a customized kernel."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:345
msgid "Open the kernel :file:`cmdline` file in an editor."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:352
msgid "Make any desired change to the kernel parameters. For example, you can remove the :command:`quiet` parameter to see more verbose output of kernel log messages during the boot process."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:356
msgid "Commit and save the changes to the :file:`cmdline` file."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:358
msgid "See the `Kernel parameters documentation`_ for a list of available parameters."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:362
msgid "Build and install the kernel"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:363
msgid "After changes have been made to the kernel source and RPM SPEC file, the kernel is ready to be compiled and packaged into an RPM."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:366
msgid "The |CL| development tooling makes use of :command:`mock` environments to isolate building of packages in a sanitized workspace."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:369
msgid "Start the compilation process by issuing the :command:`make build` command. This process is typically resource intensive and will take a while."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:377
msgid "The `ccache plugin for mock`_ can be enabled to help speed up any future rebuilds of the kernel package by caching compiler outputs and reusing them."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:380
msgid "The result will be multiple :file:`.rpm` files in the :file:`rpms` directory as output."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:387
msgid "The kernel RPM will be named :file:`linux<NAME>-<VERSION>-<RELEASE>.x86_64.rpm`"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:391
msgid "The kernel RPM file can be input to the :ref:`mixer` to create a custom bundle and mix of |CL|."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:394
msgid "Alternatively, the kernel RPM bundle can be installed manually on a local machine for testing. This approach works well for individual development or testing. For a more scalable and customizable approach, consider using the :ref:`mixer` to provide a custom kernel with updates."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:399
msgid "Install the kernel onto the local system by extracting the RPM with the :command:`rpm2cpio` command."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:407
msgid "Update the |CL| boot manager using :command:`clr-boot-manager` and reboot."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:417
msgid "After a reboot, verify the customized kernel is running."
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:424
msgid "Related topics"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:426
msgid ":ref:`kernel-modules`"
msgstr ""

#: ../../../source/guides/kernel/kernel-development.rst:427
msgid ":ref:`mixer`"
msgstr ""

