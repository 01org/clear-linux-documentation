# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux* Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-10 15:46-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/tooling/autoproxy.rst:4
msgid "Autoproxy"
msgstr ""

#: ../../../source/tooling/autoproxy.rst:6
msgid "Autoproxy is provided to enable |CL-ATTR| to work smoothly behind a corporate proxy."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:14
msgid "Description"
msgstr ""

#: ../../../source/tooling/autoproxy.rst:16
msgid "Autoproxy tries to detect a Proxy Auto-Config (PAC) script and use it to automatically resolve the proxy needed for a given connection. With Autoproxy, you can use |CL| inside any proxy environment without having to manually configure the proxies."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:21
msgid "Corporate and private networks can be very complex, needing to restrict and control network connections for security reasons. The typical side effects are limited or blocked connectivity, and require manual configuration of proxies to perform the most mundane tasks, such as cloning a repo or checking for updates. With |CL|, all of the work is done behind the scenes to effortlessly use your network and have connections “just work”."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:28
msgid "This feature removes severe complications with network connectivity due to proxy issues. You can automate tasks, such as unit testing, without worrying about the proxy not being set, and you can remove unset proxies from the equation when dealing with network unavailability across systems."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:34
msgid "How it works"
msgstr ""

#: ../../../source/tooling/autoproxy.rst:36
msgid "We designed Autoproxy around tools provided by most Linux\\* distributions with a few minor additions and modifications. We leveraged the DHCP and network information obtained from systemd and created a PAC-discovery daemon. The daemon uses the information to resolve a URL for a PAC file. The daemon then passes the URL into PACrunner\\*. PACrunner downloads the PAC file and uses the newly implemented Duktape\\* engine to parse it."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:47
msgid "Figure 1: Autoproxy Flow"
msgstr ""

#: ../../../source/tooling/autoproxy.rst:49
msgid "From that point on, any cURL\\* or network requests query PACrunner for the correct proxy to use. We modified the cURL library to communicate with PACrunner over DBus. However, cURL will ignore PACrunner and run normally if no PAC file is loaded or if you manually set any proxies. Thus, your environment settings are respected and no time is wasted trying to resolve a proxy. All these steps happen in the background with no user interaction."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:57
msgid "Troubleshooting"
msgstr ""

#: ../../../source/tooling/autoproxy.rst:59
msgid "Autoproxy allows |CL| to operate seamlessly behind a proxy because :ref:`swupd <swupd-guide>` and other |CL| tools are implemented on top of libcurl. Tools that do not use libcurl, like git, must be configured independently."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:64
msgid "If you are familiar with PAC files and WPAD, you can use :command:`pacdiscovery` and :command:`FindProxyForURL` to troubleshoot problems with autproxy."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:70
msgid "Learn more about WPAD, PAC files, and PAC functions at `findproxyforurl`_."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:74
msgid "Run :command:`pacdiscovery` with no arguments to indicate"
msgstr ""

#: ../../../source/tooling/autoproxy.rst:76
msgid "if there is a problem resolving the :command:`WPAD` host name resolution:"
msgstr ""

#: ../../../source/tooling/autoproxy.rst:87
msgid "or if the :command:`pacrunner` service is disabled (masked)."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:98
msgid "Unmask the :command:`pacrunner` service by running:"
msgstr ""

#: ../../../source/tooling/autoproxy.rst:104
msgid ":command:`FindProxyForURL` with :command:`busctl` can also indicate if the :command:`pacrunner.service` is masked."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:117
msgid ":command:`FindProxyForURL` returns the URL and port of the proxy server when an external URL and host are provided as arguments."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:129
msgid "If a proxy server is not avialable, or if :command:`pacrunner` is running without a PAC file, :command:`FindProxyForURL` will return \"DIRECT\"."
msgstr ""

#: ../../../source/tooling/autoproxy.rst:141
msgid "Once :command:`pacdiscovery` is able to look up :command:`WPAD`, restart the :command:`pacrunner` service:"
msgstr ""

#: ../../../source/tooling/autoproxy.rst:151
msgid "A \"domain\" or \"search\" entry in :file:`/etc/resolv.conf` is required for short name lookups to resolve. The :file:`resolv.conf` man page has additional details."
msgstr ""

