# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux* Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-10 15:46-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/concepts/swupd-about.rst:4
msgid "swupd: software updater"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:6
msgid ":command:`swupd` is an operating system software manager and update program that operates at a file-level to enable verifiable integrity and update efficiency."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:10
msgid "Visit the `swupd man page`_ for more details."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:13
msgid "Versioning"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:15
msgid "Using package managers to keep track of software version compatibility or compare multiple systems on many Linux distributions can be cumbersome."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:17
msgid "With |CL| :command:`swupd`, versioning happens at the individual file-level. This means |CL| generates an entirely new OS version with any set of software changes to the system (including software downgrades or removals). This rolling release versioning model is similar to :command:`git` internal version tracking, where any of the individual file commits are tracked and move the pointer forward when changed."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:23
msgid "While administrators can pick and choose which `bundles`_ a system has installed, a single |CL| version number strictly represents one combination of all software versions that can be installed onto a system of that |CL| version. This method of whole OS versioning offers unique advantages. Namely, system administrators can quickly compare multiple |CL| systems that share the same version for important software and security fixes."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:31
msgid "Updating"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:33
msgid "|CL| promotes regular and automated updating of software to ensure integration of new enhancements and security fixes. Refer to :ref:`security` documentation for more information."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:37
msgid "Learn how to update your system using :ref:`swupd <swupd-guide>`."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:40
msgid "Update efficiency"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:42
msgid "Because :command:`swupd` operates at the individual file-level instead of a package-level, |CL| updates are small and fast."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:45
msgid "On many Linux\\* distributions, updates to a particular software package require the whole software package to be downloaded and replaced --even for one line of code."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:49
msgid "In |CL|, updates are generated using the :ref:`mixer <mixer-about>` tool. Mixer calculates the difference between two |CL| versions and makes available *binary deltas*, which contain only the changed portion of files. This *binary delta technology* [1]_ means :command:`swupd` on |CL| systems only needs to download and apply a small fraction of a package in order to receive an update."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:55
msgid "The :ref:`mixer <mixer-about>` tool additionally computes updates files in multiple compression formats, allowing :command:`swupd` to utilize the most efficiently compressed format for a |CL| system to minimize the cost to update."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:61
msgid "Update integrity"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:63
msgid "This is the basis of the :command:`swupd diagnose` subcommand, which allows a |CL| system to check for any discrepancies to system files. As necessary, :command:`swupd repair` provides a useful way for software developers to remediate these discrepancies and return to a known filesystem state."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:67
msgid "Bundles"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:69
msgid "|CL-ATTR| approaches software management differently than many other Linux-based operating systems."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:72
msgid "Instead of deploying granular software packages, |CL| uses the concept of bundles with pre-associated software. Each bundle encapsulates a particular use-case, which is enabled by composing all the required upstream open-source projects and packages into one logical unit."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:77
msgid "This bundle-based approach offers some unique advantages:"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:79
msgid "Bundles provide a particular functionality, or stack, which include all associated runtime dependencies."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:82
msgid "Software package dependencies are resolved on the server, so file-level conflicts do not occur on the target system after an update."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:85
msgid "All combinations of bundles are able to co-exist on a |CL| system."
msgstr ""

#: ../../../source/concepts/swupd-about.rst:87
msgid "For more information on bundles, visit:"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:89
msgid ":ref:`bundles`"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:90
msgid ":ref:`bundles-about`"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:91
msgid ":ref:`bundle-commands`"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:92
msgid ":ref:`compatible-kernels`"
msgstr ""

#: ../../../source/concepts/swupd-about.rst:94
msgid "The software update technology for |CL-ATTR| was first presented at the Linux Plumbers conference in 2012."
msgstr ""

