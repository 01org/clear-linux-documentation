# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, many
# This file is distributed under the same license as the Clear Linux*
# Project Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Clear Linux* Project Docs latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-10 15:46-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../../source/guides/telemetrics/telem-guide.rst:4
msgid "Telemetrics"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:6
msgid ""
"Telemetrics in |CL-ATTR| is a client and server solution used to collect "
"data from running |CL| systems to help quickly identify and fix bugs in "
"the OS.  Both client and server are customizable, and an API is available"
" on the client side for instrumenting your code for debug and analysis."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:10
msgid ""
"Telemetry in |CL| is **opt-in**. The telemetry client is **not**  active "
"and sends **no** data until you explicitly enable it."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:14
msgid ""
"The telemetry functionality adheres to `Intel privacy policies`_ "
"regarding the collection and use of :abbr:`PII (Personally Identifiable "
"Information)` and is open source. Specifically, no intentionally "
"identifiable information about the user or system owner is collected."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:23
msgid "Description"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:25
msgid ""
"Telemetry, one of the key features of |CL|, enables developers to observe"
" and proactively address issues in the OS before end users are impacted."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:27
msgid "Telemetrics is a combination word made from:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:29
msgid "Telemetry, which is sensing and reporting data."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:30
msgid ""
"Analytics, which is using visualization and statistical inferencing to "
"make sense of the reported data."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:32
msgid ""
"|CL| telemetry reports system-level debug/crash information using "
"specialized probes. The probes monitor system tasks such as swupd, kernel"
" oops, machine error checks, and the BIOS error report table for "
"unhandled hardware failures. Telemetry enables real-time issue reporting "
"to allow system developers to quickly focus on an issue and monitor "
"corrective actions."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:34
msgid ""
"|CL| telemetry is fully customizable and can be used during software "
"development for debugging purposes. You can use the  libtelemetry library"
" in your code to create custom telemetry records. You can also use the "
"telem-record-gen utility in script files for light touch record creation "
"where instrumenting code files doesn't make sense."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:36
msgid ""
"The |CL| telemetrics solution is an **opt-in** choice on the client side."
"  By default, the telemetry client is disabled until you choose to enable"
" it. Enabling the client is covered in this guide."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:39
msgid "Architecture"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:41
msgid ""
"|CL| telemetry has two fundamental components, which are shown in figure "
"1:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:43
msgid ""
"Client: generates and delivers records to the backend server via the "
"network"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:45
msgid ""
"Backend: receives records sent from the client and displays the "
"cumulative content through a specialized web interface."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:50
msgid "Figure 1: :guilabel:`|CL| Telemetry Architecture`"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:52
msgid ""
"The telemetry client provides the front end of the telemetrics solution "
"and includes the following components:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:54
msgid ""
"telemprobd, a daemon that receives and prepares telemetry records from "
"probes and spools them to disk."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:55
msgid ""
"telempostd, a daemon that manages spooled telemetry records and delivers "
"these records according to configurable settings."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:56
msgid "probes, that collect specific types of data from the operating system."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:57
msgid "libtelemetry, the API that telemetrics probes use to create records."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:59
msgid ""
"The telemetry backend provides the server-side component of the "
"telemetrics solution and consists of:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:61
msgid "Nginx web server."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:62
msgid ""
"Two Flask apps: * Collector, an ingestion web app for records received "
"from client probes. * TelemetryUI, a web app that exposes different views"
" to visualize the telemetry data."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:65
msgid "PostgreSQL as the underlying database server."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:69
msgid ""
"The default telemetry backend server is hosted by the Intel |CL| "
"development team and is not viewable outside the Intel firewall. To "
"collect your own records, you must set up your own telemetry backend "
"server."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:74
msgid "How To Use"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:76
msgid ""
"From a workflow perspective, the |CL| telemetrics system is "
"straightforward.  On the client side, the main decisions after "
"installation and enabling telemetry concern what to do with the record "
"data generated by the probes.  You can send the data to the default or a "
"custom backend server, keep the data local to the system, or both. The "
"backend server has a more complex setup, but once it's running, it is "
"simple to use and configure."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:78
msgid ""
"This section walks through some of the possible scenarios for configuring"
" the |CL| telemetrics system, and suggests which make sense according to "
"your needs."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:81
msgid "Scenarios"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:82
msgid "Enable telemetry"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:84
msgid ""
"Before probes can generate records, the telemetry client daemons must be "
"enabled. You can configure the client before enabling by creating a "
"custom  :file:`telemetrics.conf` file that you place in the "
":file:`/etc/telemetrics` directory. If you choose to use the default "
"settings, records will be sent to the telemetrics backend server managed "
"by the |CL| development team at Intel."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:86
msgid "Save record data locally"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:88
msgid ""
"You can configure the telemetry client to save records locally.  This is "
"convenient when you want instant feedback during a development cycle, or "
"to track system issues if you believe there is a machine specific "
"problem. The client can be set to not send records at all, or to both "
"keep the records locally and send to the backend server."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:90
msgid "Set up a server to collect data"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:92
msgid ""
"Whether you are managing a network of |CL| systems or you don't want to "
"send records to the default telemetry server, you can set up a backend "
"server to collect your records. The backend server can be installed on "
"any Linux system and will give you the same dashboard as the default "
"server."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:95
#: ../../../source/guides/telemetrics/telem-guide.rst:362
msgid "Instrument your code with the libtelemetry API"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:97
msgid ""
"The ``telemetrics`` bundle includes the libtelemetry C library, which "
"exposes an API used by the telemprobd and telempostd daemons. You can use"
" these in your applications as well. The API documentation is found in "
"the :file:`telemetry.h` file in `Telemetrics client`_ repository."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:101
msgid "Examples"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:108
msgid "Enable or Disable Telemetry"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:110
msgid "Enabling during installation"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:112
msgid ""
"During the initial installation of |CL|, you are requested to join the "
"stability enhancement program and allow |CL| to collect anonymous reports"
" to improve system stability. If you choose not to join this program, "
"then the telemetry software bundle is not added to your system. Choosing "
"to join will automatically enable telemetry on your system after "
"installation is commplete."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:114
msgid "Enabling after install"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:116
msgid "To start telemetry on your system, run the following command:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:122
msgid ""
"This enables and starts the :command:`telemprobd` and "
":command:`telempostd` daemons. Your system will begin to send telemetry "
"data to the server defined in the file "
":file:`/etc/telemetrics/telemetrics.conf`. If this file does not exist, "
"the :command:`telemprobd` and :command:`telempostd` daemons will use the "
"file :file:`/usr/share/defaults/telemetrics/telemetrics.conf`."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:124
msgid "Disabling after install"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:126
msgid "To disable both of the telemetry daemons, run the following command:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:132
msgid "Opt in to telemetry"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:134
msgid ""
"To opt-in to the telemetry services, simply enter the opt-in command and "
"start the service:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:140
msgid ""
"This removes the :file:`/etc/telemetrics/opt-out` file, if it exists, and"
" starts the telemetry services."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:144
msgid ""
"To opt-in but not immediately start telemetry services, you will need to "
"run the command :command:`sudo telemctl stop` after the :command:`opt-in`"
" command is entered. Once you are ready to start the service, enter the "
"command :command:`sudo telemctl start`."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:146
msgid "Opt out of telemetry"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:148
msgid ""
"To stop sending telemetrics data from your system, opt out of the "
"telemetry service:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:154
msgid ""
"This creates the file :file:`/etc/telemetrics/opt-out` and stops the "
"telemetry services."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:158
msgid "Saving Data Locally"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:160
msgid ""
"This example requires |CL| to be installed, and telemetry to be enabled "
"on the system."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:162
msgid ""
"To change how records are managed, we will be copying the default "
":file:`/usr/share/defaults/telemetrics/telemetrics.conf` file to "
":file:`/etc/telemetrics/telemetrics.conf` and editing it.  The changes in"
" the :file:`/etc/telemetrics/telemetrics.conf` file will override the "
"defaults in the :file:`/usr/share/defaults/telemetrics/telemetrics.conf` "
"file. You may need ``root`` permissions to create and edit files in "
":file:`/etc`. For each example, and for any time you make changes to the "
"configuration file, you will need to restart the client daemons to pick "
"up the changes:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:169
msgid ""
"The :command:`telemctl journal` command gives you access to features and "
"options of the telemetry journal to assist with system analytics and "
"debug. :command:`telemctl journal` has a number of options to help filter"
" records. Use :command:`-h` or :command:`--help` to view usage options."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:172
msgid "Keep local copy and send records to backend server"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:174
msgid ""
"To keep a local copy of the telemetry record and also send it on to the "
"backend server, we will need to change the "
":guilabel:`record_retention_enabled` configuration key value to "
":guilabel:`true`."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:177
msgid "Keep all records  -- don't send to backend server"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:179
msgid ""
"To keep records on the system without sending them to a backend server, "
"set the :guilabel:`record_server_delivery_enabled` key value to "
":guilabel:`false`.  Note that you will also need to ensure the "
":guilabel:`record_retention_enabled` configuration key value is set to "
":guilabel:`true` or the system will not keep local copies."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:181
msgid "Keep and send records to custom server"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:183
msgid ""
"This assumes you have set up a custom server according to the next "
"example."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:185
msgid ""
"The server is identified by the :guilabel:`server` setting, and by "
"default records will be sent to the |CL| server "
":guilabel:`server=https://clr.telemetry.intel.com/v2/collector`.  To "
"change this, you can use an IP address or fully qualified domain name."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:190
msgid "Set up a backend server to collect telemetry records"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:192
msgid ""
"For this example, start with a clean installation of |CL| on a new system"
" using the :ref:`bare-metal-install-server` getting started guide and:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:195
msgid ""
"Join the :guilabel:`Stability Enhancement Program` to install and enable "
"the telemetrics components."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:197
msgid "Select the manual installation method with the following settings:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:199
msgid "Set the hostname to :guilabel:`clr-telem-server`,"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:200
msgid ""
"Create an administrative user named :guilabel:`clear` and add this user "
"to sudoers"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:203
msgid ""
"Log in with your administrative user, from your :file:`$HOME` directory, "
"run :command:`git` to clone the :guilabel:`telemetrics-backend` "
"repository into the :file:`$HOME/telemetrics-backend` directory:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:211
msgid ""
"You may need to set up the :envvar:`https_proxy` environment variable if "
"you have issues reaching github.com."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:213
msgid ""
"Change your current working directory to :file:`telemetrics-"
"backend/scripts`."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:214
msgid ""
"We will install the telemetrics backend with the :file:`deploy.sh` script"
" file.  We will set the following options and leave the remainder as "
"default:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:216
msgid "*-a install* to perform an install"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:217
msgid "*-d clr* to install to a |CL| distro"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:218
msgid "*-H localhost* to set the domain to localhost"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:221
msgid ""
"The :file:`deploy.sh` shell script has minimal error checking and makes "
"several changes to your system.  Be sure that the options you define on "
"the cmdline are correct before proceeding."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:224
msgid ""
"Run the shell script from the :file:`$HOME/telemetrics-backend/scripts` "
"directory:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:232
msgid ""
"The script will start and list all the defined options and prompt you for"
" the :guilabel:`PostgreSQL` database password"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:245
msgid ""
"For the :guilabel:`DB password:`, press the :kbd:`Enter` key to accept "
"the default password `postgres`."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:249
msgid ""
"The :file:`deploy.sh` script uses :command:`sudo` to run commands and you"
" may be prompted to enter your user password at any time while the script"
" is executing. If this occurs, enter your user password to execute the "
":command:`sudo` command."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:252
msgid ""
"Once all the server components have been installed you are prompted to "
"enter the :guilabel:`PostgreSQL` database password to change it as "
"illustrated below:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:261
msgid ""
"Enter `postgres` for the current value of the password and then enter a "
"new password, retype it to verify the new password and the "
":guilabel:`PostgreSQL` database password will be updated."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:263
msgid ""
"Once the installation is complete you can use your web browser to view "
"the new server by opening the browser on the system and typing in "
"``localhost`` in the address bar.  You should see a web page similar to "
"the one shown in figure 1:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:268
msgid "Figure 1: :guilabel:`Telemetry UI`"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:273
msgid "Create records with telem-record-gen"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:275
msgid ""
"The telemetrics bundle provides a record generator tool called ``telem-"
"record-gen``. This tool can be used to create records from shell scripts "
"or the command line when writing a probe in C is not desirable. Records "
"are sent to the backend server, and can also be echoed to stdout."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:277
msgid "There are three ways to supply the payload to the record."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:279
msgid "On the command line, use the :command:`-p <string>` option:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:305
msgid ""
"Specify a file that contains the payload with the option :command:`-P "
"path/to/file`."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:331
msgid ""
"If the :command:`-p` or :command:`-P` options are absent, the tool reads "
"from stdin so you can use it in a :file:`heredoc` in scripts."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:365
msgid "Prerequisites"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:366
msgid ""
"Confirm that the telemetrics header file is located on the system at "
":file:`usr/include/telemetry.h`  The `latest version`_ of the file can "
"also be found on github for reference, but installing the `telemetry` "
"bundle will install the header file that matches your |CL| version."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:368
msgid "Includes and variables"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:370
msgid ""
"You will need to include the following headers in your code to use the "
"API:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:381
msgid ""
"Use the following code to create the variables we need to hold the data "
"for the record we will be creating:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:396
msgid "Severity:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst
msgid "Type: uint32_t"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst
msgid ""
"Value:  Severity field value. Accepted values are in the range 1-4, with "
"1 being the lowest severity, and 4 being the highest severity. Values "
"provided outside of this range are clamped to 1 or 4. [low, med, high, "
"crit]"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:400
msgid "Payload_version:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst
msgid ""
"Value: Payload format version. The only supported value right now is 1, "
"which indicates that the payload is a freely-formatted (unstructured) "
"string. Values greater than 1 are reserved for future use."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:404
msgid "Classification:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst
msgid "Type: char array"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst
msgid ""
"Value: It should have the form, DOMAIN/PROBENAME/REST: DOMAIN is the "
"reverse domain to use as a namespace for the probe (e.g. org.clearlinux);"
" PROBENAME is the name of the probe; and REST is an arbitrary value that "
"the probe should use to classify the record. The maximum length for the "
"classification string is 122 bytes. Each sub-category may be no longer "
"than 40 bytes long. Two / delimiters are required."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:408
msgid "Tm_handle:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst
msgid "Type: Telem_ref struct pointer"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst
msgid ""
"Value:  Struct pointer declared by the caller, The struct is initialized "
"if the function returns success."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:414
msgid "Payload:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst
msgid "Type: char pointer"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst
msgid "Value: The payload to set"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:416
msgid "For this example, we'll set the payload to “hello” by using ``asprintf()``"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:426
msgid ""
"The functions ``asprintf()`` and ``vasprintf()`` are analogs of "
"``sprintf(3)`` and    ``vsprintf(3)``, except that they allocate a string"
" large enough to hold the output including the terminating null byte "
"('\\0'), and return a pointer to it via the first argument.  This pointer"
" should be passed to ``free(3)`` to release the allocated storage when it"
" is no longer needed."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:428
msgid "Create the new telemetry record"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:430
msgid ""
"The  function  ``tm_create_record()`` initializes a telemetry record and "
"sets the severity and classification of that record, as well as the "
"payload version number. The memory needed to store the telemetry record "
"is allocated and should be freed with ``tm_free_record()`` when no longer"
" needed."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:440
msgid "Set the payload field of a telemetrics record"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:442
msgid ""
"The function ``tm_set_payload()`` attaches the provided telemetry record "
"data to the telemetry record. The current maximum payload size is 8192b."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:453
msgid ""
"The ``free()`` function frees the memory space pointed to by ptr, which "
"must have been returned by a previous call to ``malloc()``, ``calloc()``,"
" or ``realloc()``.  Otherwise, or if ``free(ptr)`` has already been "
"called before, undefined behavior occurs.  If ptr is NULL, no operation "
"is performed."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:455
msgid "Send a record to the telemetrics daemon"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:457
msgid ""
"The function ``tm_send_record()`` delivers the record to the local "
"``telemprobd(1)`` service. Since the telemetry record was allocated by "
"the program it should be freed with ``tm_free_record()`` when it is no "
"longer needed."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:476
msgid "Full sample application with compiling flags"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:478
msgid "Create a new file test.c  add the following code."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:533
msgid "Compile with the gcc compiler, using this command:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:540
msgid "Test to ensure the program is working:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:549
msgid ""
"A full example of the `heartbeat probe`_ in C is documented in the source"
" code."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:552
msgid "Reference"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:559
msgid "The Telemetry API"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:561
msgid ""
"Installing the ``telemetrics`` bundle includes the libtelemetry C "
"library, which exposes an API used by the telemprobd and telempostd "
"daemons. You can use these in your applications as well. The API "
"documentation is found in the :file:`telemetry.h` file in `Telemetrics "
"client`_ repository."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:564
msgid "Client Configuration"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:566
msgid ""
"The telemetry client will look for the configuration file located at "
":file:`/etc/telemetrics/telemetrics.conf` and use it if it exists. If the"
" file does not exist, the client will use the default configuration "
"located at :file:`/usr/share/defaults telemetrics/telemetrics.conf`. To "
"modify or customize the configuration, copy the file from "
":file:`/usr/share/defaults/telemetrics` to :file:`/etc/telemetrics` and "
"edit it."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:569
msgid "Configuration Options"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:570
msgid "The client uses the following configuration options from the config file:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:572
msgid ""
"**server**: This specifies the web server to which telempostd sends the "
"telemetry records."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:573
msgid ""
"**socket_path**: This specifies the path of the unix domain socket that "
"the telemprobd listens on for connections from the probes."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:574
msgid ""
"**spool_dir**: This configuration option is related to spooling. If the "
"daemon is not able to send the telemetry records to the backend server "
"due to reasons such as the network availability, then it stores the "
"records in a spool directory. This option specifies that path of the "
"spool directory. This directory should be owned by the same user as the "
"daemon."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:575
msgid ""
"**record_expiry**: This is the time in minutes after which the records in"
" the spool directory are deleted by the daemon."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:576
msgid ""
"**spool_process_time**: This specifies the time interval in seconds that "
"the daemon waits for before checking the spool directory for records. The"
" daemon picks up the records in the order of modification date and tries "
"to send the record to the server. It sends a maximum of 10 records at a "
"time. If it was able to send a record successfully, it deletes the record"
" from the spool. If the daemon finds a record older than the "
"\"record_expiry\" time, then it deletes that record. The daemon looks at "
"a maximum of 20 records in a single spool run loop."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:577
msgid ""
"**rate_limit_enabled**: This determines whether rate-limiting is enabled "
"or disabled. When enabled, there is a threshold on both records sent "
"within a window of time, and record bytes sent within a window a time."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:578
msgid ""
"**record_burst_limit**: This is the maximum amount of records allowed to "
"be passed by the daemon within the record_window_length of time. If set "
"to -1, the rate-limiting for record bursts is disabled."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:579
msgid ""
"**record_window_length**: The time in minutes (0-59) that establishes the"
" window length for the record_burst_limit. EX: if "
"record_burst_window=1000 and record_window_length=15, then no more than "
"1000 records can be passed within any given fifteen minute window."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:580
msgid ""
"**byte_burst_limit**: This is the maximum amount of bytes that can be "
"passed by the daemon within the byte_window_length of time. If set to -1,"
" the rate-limiting for byte bursts is disabled."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:582
msgid ""
"**byte_window_length**: This is the time, in minutes (0-59), that "
"establishes the window length for the byte_burst_limit."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:583
msgid ""
"**rate_limit_strategy**: This is the strategy chosen once the rate-"
"limiting threshold has been reached. Currently the options are 'drop' or "
"'spool', with spool being the default. If spool is chosen, records will "
"be spooled and sent at a later time."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:584
msgid ""
"**record_retention_enabled**: When this key is enabled (true) the daemon "
"saves a copy of the payload on disk from all valid records. To avoid the "
"excessive use of disk space only the latest 100 records are kept. The "
"default value for this configuration key is false."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:585
msgid ""
"**record_server_delivery_enabled**: This key controls the delivery of "
"records to server; when enabled (default value), the record will be "
"posted to the address in the configuration file. If this configuration "
"key is disabled (false), records will not be spooled or posted to "
"backend. This configuration key can be used in combination with "
"record_retention_enabled to keep copies of telemetry records locally "
"only."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:589
msgid ""
"Configuration options may change as the telemetry client evolves. Please "
"use the comments in the file itself as the most accurate reference for "
"configuration."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:595
msgid "Client Run-time Options"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:596
msgid ""
"The |CL| telemetry client provides an admin tool called "
":guilabel:`telemctl` for managing the telemetry services and probes. The "
"tool is located in :file:`/usr/bin`. Running it with no argument results "
"in the following:"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:615
msgid "start/stop/restart"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:617
msgid ""
"The commands to start, stop and restart the telemetry services manage all"
" required services and probes on the system.  There is no need to "
"separately start/stop/restart the two client daemons **telemprobd** and "
"**telempostd**. The **restart** command option will call **telemctl "
"stop** followed by **telemctl start** ."
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:620
msgid "is-active"
msgstr ""

#: ../../../source/guides/telemetrics/telem-guide.rst:622
msgid ""
"The `is-active` option reports whether the two client daemons are active."
" This is useful to verify that the **opt-in** and **opt-out** options "
"have taken effect, or to ensure that telemetry is functioning on the "
"system. Note that both daemons are verified."
msgstr ""

